<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=gb_2312-80">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<TITLE>第五章 使用Windows标准控件</TITLE>
<META NAME="Template" CONTENT="E:\Office95\Template\Manuscripts\16 开图书模板.dot">
</HEAD>
<BODY>

<FONT FACE="黑体" LANG="ZH-CN" SIZE=5><P ALIGN="CENTER"><A NAME="_Toc425697416">第六章</FONT><FONT FACE="Arial" SIZE=5> </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=5>使用</FONT><FONT FACE="Arial" SIZE=5>Windows</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=5>标准控件</A></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">我们在前面曾提到过，控件是一些行为标准化了的窗口，一般用于对话框或其它窗口中充当与用户交互的元素。在</FONT><FONT SIZE=3>Visual C++</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中，可以使用的控件分成三类：</P><DIR>

</FONT><FONT FACE="Arial" SIZE=3><P>(1)&#9;Windows</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=3>标准控件</P></DIR>

</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>标准控件由</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>操作系统提供，在</FONT><FONT SIZE=3>Windows 95</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中还提供了一些新增的控件。所有这些控件对象都是可编程的，我们可以使用</FONT><FONT SIZE=3>Visual C++</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>提供的对话框编辑器把它们添加到对话框中。</FONT><FONT SIZE=3>Microsoft</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>基础类库</FONT><FONT SIZE=3>(MFC)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>提供了封装这些控件的类，它们列于表</FONT><FONT SIZE=3>6.1</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6.1 Windows</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>标准控件</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=484>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">控件</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>类</FONT></TD>
<TD WIDTH="55%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">动画</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CAnimateCtrl</FONT></TD>
<TD WIDTH="55%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">显示连续的</FONT><FONT SIZE=1>AVI</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>视频剪辑</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">按钮</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CButton</FONT></TD>
<TD WIDTH="55%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">用来产生某种行为的按钮，以及复选框、单选钮和组框</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">组合框</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CComboBox</FONT></TD>
<TD WIDTH="55%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">编辑框和列表框的组合</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">编辑框</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CEdit</FONT></TD>
<TD WIDTH="55%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">用于键入文本</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">标题头</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CHeaderCtrl</FONT></TD>
<TD WIDTH="55%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">位于某一行文本之上的按钮，可用来控制显示文件的宽度</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">热键</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CHotKeyCtrl</FONT></TD>
<TD WIDTH="55%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">用于通过按下某一组合键来很快的执行某些常用的操作</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">图象列表</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CImageList</FONT></TD>
<TD WIDTH="55%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">一系列图象</FONT><FONT SIZE=1>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>典型情况下是一系列图标或位图</FONT><FONT SIZE=1>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>的集合。图象列表本身不是一种控件，它常常是和其它控件一起工作，为其它控件提供所用的图象列表</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">列表</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CListCtrl</FONT></TD>
<TD WIDTH="55%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">显示文本及其图标列表的窗口</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">列表框</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CListBox</FONT></TD>
<TD WIDTH="55%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">包括一系列字符串的列表</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">进度</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CProgressCtrl</FONT></TD>
<TD WIDTH="55%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">用于在一较长操作中提示用户所完成的进度</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">多格式文本编辑</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CRichEditCtrl</FONT></TD>
<TD WIDTH="55%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">提供可设置字符和段落格式的文本编辑的窗口</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">滚动条</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CScrollBar</FONT></TD>
<TD WIDTH="55%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">为对话框提供控件形式的滚动条</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">滑块</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CSliderCtrl</FONT></TD>
<TD WIDTH="55%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">包括一个有可选标记的滑块的窗口</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">旋转按钮</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CSpinButtonCtrl</FONT></TD>
<TD WIDTH="55%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">提供一对可用于增减某个值的箭头</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">静态文本</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CStatic</FONT></TD>
<TD WIDTH="55%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">常用于为其它控件提供标签</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">状态条</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CStatusBarCtrl</FONT></TD>
<TD WIDTH="55%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">用于显示状态信息的窗口，同</FONT><FONT SIZE=1>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>类</FONT><FONT SIZE=1>CStatusBar</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>类似</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="RIGHT">续表</FONT><FONT FACE="Arial" SIZE=1>6.1</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=484>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">控件</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>类</FONT></TD>
<TD WIDTH="55%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">选项卡</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CTabCtrl</FONT></TD>
<TD WIDTH="55%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在选项卡对话框或属性页中提供具有类似笔记本中使用的分隔标签的外观的选项卡</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">工具条</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CToolBarCtrl</FONT></TD>
<TD WIDTH="55%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">具有一系列命令生成按钮的窗口，同</FONT><FONT SIZE=1>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>类</FONT><FONT SIZE=1>CToolBar</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>类似</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">工具提示</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CToolTipCtrl</FONT></TD>
<TD WIDTH="55%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">一个小的弹出式窗口，用于提供对工具条按钮或其它控件功能的简单描述</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">树</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CTreeCtrl</FONT></TD>
<TD WIDTH="55%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">用于显示一系列的项的继承结构</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
<P ALIGN="JUSTIFY">前面提到过，在</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中，类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>是所有窗口类的基类，很自然的，它也是所有控件类的基类。</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>标准控件在以下环境下提供：</P>

<UL>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY"><LI>Windows 95</LI></P>
<P ALIGN="JUSTIFY"><LI>Windows NT 3.51</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>及以后版本</LI></P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY"><LI>Win32s 1.3</LI></P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"><LI>注意：</LI></P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY"><LI>Visual C++ 4.2</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>及以后版本不再支持</FONT><FONT SIZE=3>Win32s</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>。</LI></P></UL>

</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">　</P><DIR>

</FONT><FONT FACE="Arial" SIZE=3><P>(2)&#9;ActiveX</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=3>控件</P></DIR>

</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">ActiveX</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>控件可用于对话框中，也可用于</FONT><FONT SIZE=3>HTML</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>文档中。这种控件过去被称为</FONT><FONT SIZE=3>OLE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>控件。本书将在专门的章节中来讲述关于</FONT><FONT SIZE=3>ActiveX</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>控件的知识。这里仅指出</FONT><FONT SIZE=3>ActiveX</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>控件使用了与标准控件完全不同的接口和实现方法。</P><DIR>

</FONT><FONT FACE="Arial" SIZE=3><P>(3)&#9;</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=3>其它</FONT><FONT FACE="Arial" SIZE=3>MFC</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=3>控件类</P></DIR>

</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">除了</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>标准控件和自己编写的或者来自于第三方软件开发商的</FONT><FONT SIZE=3>ActiveX</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>控件以外，</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>还提供了另外三种控件，它们由下面的三个类进行封装：</P>

<UL>
<P ALIGN="JUSTIFY"><LI>类</FONT><FONT SIZE=3>CBitmapButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>用于创建以位图作为标签的按钮，位图按钮最多可以包括四个位图图片，分别代表按钮的四种不同状态。</LI></P>
<P ALIGN="JUSTIFY"><LI>类</FONT><FONT SIZE=3>CCheckListBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>用于创建选择列表框，这种列表框中的每一项前面有一个复选框，以决定该项是否被选中。</LI></P>
<P ALIGN="JUSTIFY"><LI>类</FONT><FONT SIZE=3>CDragListBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>用于创建一种特殊的列表框，这种列表框允许用户移动列表项。</LI></P></UL>

<P ALIGN="JUSTIFY">在本章我们仅讲述第一类控件，即</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>标准控件。所涉及的内容包括各个控件的使用及相应的技巧。</P>
</FONT><FONT FACE="仿宋_GB2312" LANG="ZH-CN" SIZE=4><P ALIGN="CENTER"><A NAME="_Toc425697417">第一节</FONT><FONT SIZE=4> </FONT><FONT FACE="仿宋_GB2312" LANG="ZH-CN" SIZE=4>使用对话框编辑器和</FONT><FONT SIZE=4>ClassWizard</A></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">对于大多数</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>标准控件，我们一般都使用对话框编辑器来将它们添加到对话框中。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image367.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image367.gif" WIDTH=254 HEIGHT=247></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 1 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>在</FONT><FONT SIZE=1>ResourceView</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>中选择对话框<BR>
</FONT><FONT SIZE=1>IDD_DIALOGDEMO_DIALOG</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image368.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image368.gif" WIDTH=343 HEIGHT=122></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 2 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>控件的</FONT><FONT SIZE=1>Properties</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对话框</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image369.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image369.gif" WIDTH=36 HEIGHT=172></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 3 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对话框编辑器的</FONT><FONT SIZE=1>Controls</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>工具窗口</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">在下面的过程中，我们将一个编辑框控件添加到在第四章创建的基于对话框的</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>框架应用程序的主对话框窗口中。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">1.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>首先，在</FONT><FONT SIZE=3>Workspace</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>窗口的</FONT><FONT SIZE=3>ResourceView</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>选项内双击</FONT><FONT SIZE=3>DialogDemo resources\Dialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>节点下的</FONT><FONT SIZE=3>IDD_DIALOGDEMO_DIALOG</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>图标。上面的操作如图所示。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">2.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>用鼠标选中标有“要做……”的静态文本控件。右击鼠标，从上下文菜单中选择</FONT><FONT SIZE=3>Properties</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，打开如图</FONT><FONT SIZE=3>6.2</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示的对话框，在</FONT><FONT SIZE=3>Caption</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>文本框中输入新的控件文本：“在下面的文本框中输入一些字符”，然后将静态文本控件拖动到对话框的左上角。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">3.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>从</FONT><FONT SIZE=3>Controls</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>工具窗口</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>如图</FONT><FONT SIZE=3>6.3</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示，如果在你的资源编辑器中看不到该工具窗口，可以在工具条上右击鼠标，从上下文菜单中选择</FONT><FONT SIZE=3>Controls)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中选择编辑控件图标<IMG SRC="Image370.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image370.gif" WIDTH=24 HEIGHT=22>，在对话框中绘制一个编辑框控件，如图</FONT><FONT SIZE=3>6.4</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示。</P>
<P ALIGN="JUSTIFY">在该编辑框控件的</FONT><FONT SIZE=3>Properties</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>窗口的</FONT><FONT SIZE=3>General</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>选项卡中输入其</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为</FONT><FONT SIZE=3>IDC_EDIT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。然后在</FONT><FONT SIZE=3>Styles</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>选项卡下将</FONT><FONT SIZE=3>Multiline</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>复选框划上勾，并消除</FONT><FONT SIZE=3>Auto HScroll</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>复选框前的勾。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">4.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>右击该编辑框控件，从上下文菜单中选择</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>命令，打开</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对话框，该对话框看起来如图</FONT><FONT SIZE=3>6.5</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image371.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image371.gif" WIDTH=184 HEIGHT=98></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 4 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>向对话框中添加一个编辑框控件</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image372.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image372.gif" WIDTH=481 HEIGHT=314></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 5 ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对话框</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">单击</FONT><FONT SIZE=3>Member Variables</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>选项卡，确信在</FONT><FONT SIZE=3>Project</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>处选择了</FONT><FONT SIZE=3>DialogDemo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，在</FONT><FONT SIZE=3>Class name</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>处选择了</FONT><FONT SIZE=3>CDialogDemoDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。现在我们为刚才添加的编辑框控件</FONT><FONT SIZE=3>IDC_EDIT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>添加一个数据映射入口。在</FONT><FONT SIZE=3>Control IDs</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>处选择</FONT><FONT SIZE=3>IDC_EDIT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，单击右边的</FONT><FONT SIZE=3>Add Viable</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>按钮。打开如图</FONT><FONT SIZE=3>6.6</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示的对话框。</P>
<P ALIGN="JUSTIFY">在</FONT><FONT SIZE=3>Member variable name</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>处链接变量名</FONT><FONT SIZE=3>m_strEdit (</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>这里</FONT><FONT SIZE=3>m</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表示该变量为类</FONT><FONT SIZE=3>CDialogDemoDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的一个成员变量，</FONT><FONT SIZE=3>str</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表明其类型为字符串，即类</FONT><FONT SIZE=3>CString)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，在</FONT><FONT SIZE=3>Category</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>下拉列表中选择</FONT><FONT SIZE=3>Value (</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>另一种选择是</FONT><FONT SIZE=3>Control</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，两种选择的不同将在后面的内容中讲述</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，在</FONT><FONT SIZE=3>Variable type</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>下拉列表中选择</FONT><FONT SIZE=3>CString (</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>还有其它很多数据类型可供选择，但由于这里编辑框中的内容为一字符串，因此</FONT><FONT SIZE=3>CString</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>是最恰当的选择</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。单击</FONT><FONT SIZE=3>OK</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>关闭对话框。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image373.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image373.gif" WIDTH=275 HEIGHT=226></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 6 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>为控件映射添加成员变量</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">5.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>检查一下现在的</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对话框</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>图</FONT><FONT SIZE=3>6.7)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>与图</FONT><FONT SIZE=3>6.5</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>相比有何不同。在图</FONT><FONT SIZE=3>6.7</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示的对话框中下方的</FONT><FONT SIZE=3>Maximum characters</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>文本框中输入</FONT><FONT SIZE=3>50</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。由字面意思可以很容易猜出其含义，即将编辑框</FONT><FONT SIZE=3>IDC_EDIT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中可能的最长字符串的大小限制为</FONT><FONT SIZE=3>50</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。单击</FONT><FONT SIZE=3>OK</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>关闭对话框。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image374.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image374.gif" WIDTH=481 HEIGHT=314></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 7 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>使用</FONT><FONT SIZE=1>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>设置数据验证方案</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">6.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>从</FONT><FONT SIZE=3>Workspace</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>窗口的</FONT><FONT SIZE=3>ClassView</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中双击类</FONT><FONT SIZE=3>CDialogDemoDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数，使用下面的代码来代替位于语句</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>return TRUE;</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">前的</FONT><FONT SIZE=3>// TODO</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>注释：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>m_strEdit="您好! 请在这里输入一些字符串。";</P>
<P>UpdateData(FALSE);</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">7.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>在</FONT><FONT SIZE=3>ClassView</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中双击类</FONT><FONT SIZE=3>CDialogDemoApp</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>InitInstance</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数，使用下面的代码来找替位于选择支</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>if (nResponse == IDOK)</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">下的</FONT><FONT SIZE=3>//TODO</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>注释：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>AfxMessageBox(dlg.m_strEdit);</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">然后将同一成员函数中的下面的代码行删掉</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>或注释掉</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>m_pMainWnd = &amp;dlg;</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">8.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>编译并运行该应用程序。显示如图</FONT><FONT SIZE=3>6.8</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示的对话框。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image375.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image375.gif" WIDTH=184 HEIGHT=106></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 8 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>示例程序</FONT><FONT SIZE=1>DialogDemo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>的运行结果</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">在图</FONT><FONT SIZE=3>6.8</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示的文本框中输入一些字符，单击“确定”。随即弹出如图</FONT><FONT SIZE=3>6.9</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示的消息框。该消息框复述了用户在图</FONT><FONT SIZE=3>6.8</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示的对话框中的输入。我们还发现，在图</FONT><FONT SIZE=3>6.8</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示的对话框中，当输入字符串达到一定的长度之后，我们不可以再输入更多的字符，这是我们在前面设置了</FONT><FONT SIZE=3>Maximum characters</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为</FONT><FONT SIZE=3>50</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的结果。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image376.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image376.gif" WIDTH=228 HEIGHT=74></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 9 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>以消息框的形式反馈输入的字符串</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">下面我们来看在上面的步骤中都完成了什么。首先我们使用资源编辑器向对话框模板中添加这些标准控件，这一步的概念很清晰，因此并不难理解。</P>
<P ALIGN="JUSTIFY">然后，我们打开了所绘制的编辑框的</FONT><FONT SIZE=3>Properties (</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对话框。先将其控件</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>设置为</FONT><FONT SIZE=3>IDC_EDIT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。这时如果打开头文件</FONT><FONT SIZE=3>Resource.h</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，就会发现宏</FONT><FONT SIZE=3>IDC_EDIT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>被定义为常量</FONT><FONT SIZE=3>1001</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。不过，事实上在很多情况下我们并不需要关心每一控件的</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的具体值，而只需要记住相应的助记符。对于这里的编辑框控件，我们只需要记住</FONT><FONT SIZE=3>IDC_EDIT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>即可，而不需要关心它等于</FONT><FONT SIZE=3>1001</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。接着，我们在</FONT><FONT SIZE=3>Styles</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>选项卡中设置了</FONT><FONT SIZE=3>Multiline</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性，同时清除了</FONT><FONT SIZE=3>Auto HScroll</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性，两者共同作用使用得编辑框</FONT><FONT SIZE=3>IDC_EDIT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>支持多行文本，并且如文本行的长度超过编辑框宽度时自动回行。</P>
<P ALIGN="JUSTIFY">下面的步骤是最重要的一步，我们动用了功能强大的工具</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。首先，我们将编辑框与一个</FONT><FONT SIZE=3>CString</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对象相关联，这使用了一种被称为</FONT><FONT SIZE=3>Dialog Data Exchange (DDX)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的机制。在这种机制中，我们先在处理函数</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>或对话框类的构造函数中对对话框对象的成员变量进行初始化，在对话框显示之前，框架的</FONT><FONT SIZE=3>DDX</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>机制将成员变量的值传递给对话框中的控件。这个过程在成员函数</FONT><FONT SIZE=3>DoModal</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>或</FONT><FONT SIZE=3>Create</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>被调用的过程中发生。类</FONT><FONT SIZE=3>CDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中对</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数的默认实现调用了类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数</FONT><FONT SIZE=3>UpdateData</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>来初始化对话框中的控件。这时我们就可以看到前面的第</FONT><FONT SIZE=3>6</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>步还可在具有下面的几种变通方案：</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">1.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>将代码行</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>m_strEdit="您好! 请在这里输入一些字符串。";</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">移到对基类的</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数的调用之前，即位于下面的代码之前：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>CDialog::OnInitDialog();</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">2.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>将代码</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>m_strEdit="您好! 请在这里输入一些字符串。";</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">移到类</FONT><FONT SIZE=3>CDialogDemoDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的构造函数中。</P>
<P ALIGN="JUSTIFY">对于上面的两种方法，与前面第</FONT><FONT SIZE=3>6</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>步中使用的方法相比，我们没有必要调用类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数</FONT><FONT SIZE=3>UpdateData</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。因为该函数在类</FONT><FONT SIZE=3>CDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中将被调用。</P>
<P ALIGN="JUSTIFY">这三种方法之间并没有明确的优劣之分，在很多情况下，它们分别适用于不同的场合。</P>
<P ALIGN="JUSTIFY"></P>
<P ALIGN="JUSTIFY">这里我们说一下成员函数</FONT><FONT SIZE=3>UpdateData</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。该函数带有一个布尔类型的参数，如果该参数为</FONT><FONT SIZE=3>FALSE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，函数</FONT><FONT SIZE=3>UpdateData</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>将成员变量的值传递给对话框的变量；而如果该参数为</FONT><FONT SIZE=3>TRUE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，函数</FONT><FONT SIZE=3>UpdateData</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>将进行相反的过程。</P>
<P ALIGN="JUSTIFY">如果用户单击了对话框中</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为</FONT><FONT SIZE=3>IDOK</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的按钮，或者以</FONT><FONT SIZE=3>TRUE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为参数调用函数</FONT><FONT SIZE=3>UpdateData</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，</FONT><FONT SIZE=3>DDX</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>机制从控件中将值传递到成员变量，同时对话框数据验证</FONT><FONT SIZE=3>(dialog data validation</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，</FONT><FONT SIZE=3>DDV)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>机制根据设定的验证规则验证所有数据项。</P>
<P ALIGN="JUSTIFY">在数据交换的过程中，成员函数</FONT><FONT SIZE=3>UpdateData</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>先创建一个</FONT><FONT SIZE=3>CDataExchange</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对象，然后调用对话框对类</FONT><FONT SIZE=3>CDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数</FONT><FONT SIZE=3>DoDataExchange</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的重载版本。该</FONT><FONT SIZE=3>CDataExchange</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对象将作为成员函数</FONT><FONT SIZE=3>DoDataExchange</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的一个参数，该参数定义了数据交换的上下文。</P>
<P ALIGN="JUSTIFY">在</FONT><FONT SIZE=3>DoDataExchange</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中，我们为每一个数据成员指定了一个对</FONT><FONT SIZE=3>DDX</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>函数的调用。每一个函数定义了基于由成员函数</FONT><FONT SIZE=3>UpdateData</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所提供的</FONT><FONT SIZE=3>CDataExchange</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>参数所确定的上下文而进行的双向数据交换。</P>
<P ALIGN="JUSTIFY">下面的代码摘自实现文件</FONT><FONT SIZE=3>DialogDemo.cpp</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中对函数</FONT><FONT SIZE=3>DoDataExchange</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的定义：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CDialogDemoDlg::DoDataExchange(CDataExchange* pDX)</P>
<P>{</P>
<P>&#9;CDialog::DoDataExchange(pDX);</P>
<P>&#9;//{{AFX_DATA_MAP(CDialogDemoDlg)</P>
<P>&#9;DDX_Text(pDX, IDC_EDIT, m_strEdit);</P>
<P>&#9;DDV_MaxChars(pDX, m_strEdit, 50);</P>
<P>&#9;//}}AFX_DATA_MAP</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">在两行注释</FONT><FONT SIZE=3>//{{AFX_DATA_MAP</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>//}}AFX_DATA_MAP</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>之间的代码部分称作数据映射。函数</FONT><FONT SIZE=3>DDX_Text</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>使用</FONT><FONT SIZE=3>CString</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对象</FONT><FONT SIZE=3>m_strEdit</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>与</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为</FONT><FONT SIZE=3>IDC_EDIT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的编辑框控件相关联。函数</FONT><FONT SIZE=3>DDV_MaxChars</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>设置与编辑框控件</FONT><FONT SIZE=3>IDC_EDIT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>相关联</FONT><FONT SIZE=3>CString</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对象</FONT><FONT SIZE=3>m_strEdit</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的最大长度为</FONT><FONT SIZE=3>50</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
<P ALIGN="JUSTIFY">需要注意的是，如果用户在模式对话框中单击了“取消”</FONT><FONT SIZE=3>(Cancel)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>按钮，</FONT><FONT SIZE=3>DoModal</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>函数将返回值</FONT><FONT SIZE=3>IDCANCEL</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，在这种情况下，在对话框和对话框对象之前的数据交换不会发生。</P>
<P ALIGN="JUSTIFY">由于这个原因，如果</FONT><FONT SIZE=3>DoModal</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>函数返回了值</FONT><FONT SIZE=3>IDOK</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，我们可以使用下面的代码来复述用户在对话框中所输入的值：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>AfxMessageBox(dlg.m_strEdit);</P>

<UL>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"><LI>注意：</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"><LI>在前面的第</FONT><FONT SIZE=3>7</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>步中有一个乍看起来有一些费解的过程，这就是我们为什么要将下面的代码从函数</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>中删除：</LI></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>m_pMainWnd = &amp;dlg;</LI></P></UL>
<DIR>
<DIR>

</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">这基于下面的一个事实：</P>
<P ALIGN="JUSTIFY">类</FONT><FONT SIZE=3>CWinThread</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>的数据成员</FONT><FONT SIZE=3>m_pMainWnd</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>有一个有用的特征，如果由该成员所引用的窗口被关闭的话，</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>库将自动的终止</FONT><FONT SIZE=3>CWinThread</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>对象所代表的线程。这样，如果我们将指向</FONT><FONT SIZE=3>dlg</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>的指针赋予了成员变量</FONT><FONT SIZE=3>m_pMainWnd</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>，那么，无论我们单击了“确认”还是“取消”，应用程序的主线程都将被自动终止，之后的代码当然不会得到执行。而在本示例中，我们希望在对话框被关闭后程序继续运行</FONT><FONT SIZE=3>(</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>即弹出一个消息重述用户所输入的内容</FONT><FONT SIZE=3>)</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>，因此不应该将</FONT><FONT SIZE=3>dlg</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>对象的指针赋予成员变量</FONT><FONT SIZE=3>m_pMainWnd</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>，从而需要将前面的代码从函数</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>中删除。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">　</P></DIR>
</DIR>

</FONT><FONT FACE="仿宋_GB2312" LANG="ZH-CN" SIZE=4><P ALIGN="CENTER"><A NAME="_Toc425697418">第二节</FONT><FONT SIZE=4> </FONT><FONT FACE="仿宋_GB2312" LANG="ZH-CN" SIZE=4>所有窗口类的基类：</FONT><FONT SIZE=4>CWnd</A></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">在</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>是一个很重要的类，它封装了</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>窗口句柄</FONT><FONT SIZE=3>HWND</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。在</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>编程中，窗口句柄唯一的标识了一个窗口。然而，尽管类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的对象和窗口句柄之间有着如此紧密的联系，但两者并不是等同的概念。</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对象通过类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的构造函数和析构函数创建和消毁，而</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>窗口是</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>内部的一种数据结构，在类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中，它通过</FONT><FONT SIZE=3>Create</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数创建，通过其析构函数消毁。除此之外，成员函数</FONT><FONT SIZE=3>DestroyWindow</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>可以消毁</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>窗口，而不需要消毁</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对象。</P>
<P ALIGN="JUSTIFY">传统的</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>应用程序中，消息是通过一个称作窗口过程</FONT><FONT SIZE=3>(window procedure</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，通常具有</FONT><FONT SIZE=3>WndProc</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>之类的函数名</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的回调函数来处理的。这种方式在</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中仍然使用，但为</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>类及其消息映射所隐藏。在类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中，</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>通知消息会被自动的通过消息映射传递到类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中合适的</FONT><I><FONT SIZE=3>OnMessage</I></FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>这里</FONT><I><FONT SIZE=3>OnMessage</I></FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>是指这些函数具有的以</FONT><FONT SIZE=3>On</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为前缀的函数名，如</FONT><FONT SIZE=3>OnPaint</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和前面接触到的</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>等</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>进行处理。通常我们都在类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的派生类中重载需要处理的特定消息所对应的</FONT><I><FONT SIZE=3>OnMessage</I></FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数。除了直接从</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>派生新的窗口类以外，我们更倾向于从</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中定义的其它类，如</FONT><FONT SIZE=3>CFrameWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>、</FONT><FONT SIZE=3>CMIDFrameWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>、</FONT><FONT SIZE=3>CMDIChileWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>、</FONT><FONT SIZE=3>CView</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>CDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>以及</FONT><FONT SIZE=3>CButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>之类的控件类派生新的窗口类。在</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中定义的这些类本身也是从</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>派生的。</P>
<P ALIGN="JUSTIFY">通常我们使用两个步骤来创建一个窗口：首先，调用类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的构造函数来构造一个</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对象，然后调用其成员函数</FONT><FONT SIZE=3>Create</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>来创建窗口并将该窗口与所创建的</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对象相关联。</P>
<P ALIGN="JUSTIFY">当用户终止该窗口时，消毁与之相关联的</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对象，或者调用</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对象的成员函数</FONT><FONT SIZE=3>DestroyWindow</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>删除窗口并消毁其数据结构。</P>
<P ALIGN="JUSTIFY">大多数以</FONT><FONT SIZE=3>HWND</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为参数的</FONT><FONT SIZE=3>Win32 API</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>函数都已作为类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数进行了封装，事实上，很多时候我们通过类</FONT><FONT SIZE=3>Wnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的派生类调用的成员函数并不是由派生类本身所提供的，而是在类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中进行定义的。下面我们分类给出在</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>类中定义的各类成员函数。完整而详尽的说明每一个成员函数在本书中是不现实的，这里我们仅给出对每一个成员函数的简短说明，以便读者在编程时能够很快的查找到所需的函数，这时再去查找有关于该函数的详细的说明就不是一件困难的事了。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">1.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的数据成员</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表</FONT><FONT SIZE=3>6.2)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 2 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>类</FONT><FONT FACE="Arial" SIZE=1>CWnd</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>的数据成员</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=380>
<TR><TD WIDTH="20%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">数据成员</FONT></TD>
<TD WIDTH="80%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="20%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">m_hWnd</FONT></TD>
<TD WIDTH="80%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">与该</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象相关联的</FONT><FONT SIZE=1>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>窗口句柄</FONT><FONT SIZE=1>(HWND)</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">2.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>构造函数</FONT><FONT SIZE=3>/</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>析构函数</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表</FONT><FONT SIZE=3>6.3)</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 3 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>类</FONT><FONT FACE="Arial" SIZE=1>CWnd</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>的构造函数和析构函数</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=354>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                D WIDTH="68%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得图标句柄</FONT></TD>
</TR>
<TR><TD WIDTH="32%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetIcon</FONT></TD>
<TD WIDTH="68%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置句柄为一指定图标</FONT></TD>
</TR>
<TR><TD WIDTH="32%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetWindowContextHelpId</FONT></TD>
<TD WIDTH="68%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得帮助上下文标识符</FONT></TD>
</TR>
<TR><TD WIDTH="32%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetWindowContextHelpId</FONT></TD>
<TD WIDTH="68%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置帮助上下文标识符</FONT></TD>
</TR>
<TR><TD WIDTH="32%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ModifyStyle</FONT></TD>
<TD WIDTH="68%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">修改当前窗口样式</FONT></TD>
</TR>
<TR><TD WIDTH="32%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ModifyStyleEx</FONT></TD>
<TD WIDTH="68%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">修改当前窗口的扩展样式</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">5.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>窗口大小和位置函数</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表</FONT><FONT SIZE=3>6.6)</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 6 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>类</FONT><FONT FACE="Arial" SIZE=1>CWnd</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>的窗口大小和位置成员函数</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=469>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetWindowPlacement</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得显示状态和窗口的正常、最小化和最大化位置</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetWindowPlacement</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置显示状态和窗口的正常、最小化和最大化位置</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetWindowRgn</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得窗口的窗口区域的拷贝</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetWindowRgn</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置窗口区域</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IsIconic</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">判断窗口是否被最小化</FONT><FONT SIZE=1>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>图标化</FONT><FONT SIZE=1>)</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IsZoomed</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">判断窗口是否被最大化</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">MoveWindow</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">改变窗口的位置和度量</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetWindowPos</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">改变子窗口、弹出式窗口或顶层窗口的大小、位置和顺序</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ArrangeIconicWindows</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">排列所有最小化的子窗口</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">BringWindowToTop</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">将</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象放到覆盖窗口栈的顶部</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetWindowRect</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象的屏幕坐标</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetClientRect</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象客户区的度量</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">6.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>窗口访问函数&#9;</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 7 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>类</FONT><FONT FACE="Arial" SIZE=1>CWnd</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>的窗口访问成员函数</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=487>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ChildWindowFromPoint</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">判断包含指定点的子窗口</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">FindWindow</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">返回由其窗口名称和窗口类标识的窗口的句柄</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetNextWindow</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">返回窗口管理器列表中的下一个</FONT><FONT SIZE=1>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>或上一个</FONT><FONT SIZE=1>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>窗口</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetOwner</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">返回指向</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象的所有者的指针</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="RIGHT">续表</FONT><FONT FACE="Arial" SIZE=1>6.7</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=487>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetOwner</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">改变</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象的所有者</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetTopWindow</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">返回属于</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象的第一个子窗口</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetWindow</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">返回与当前窗口有指定关系的窗口</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetLastActivePopup</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">判断由</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象所有的弹出窗口中最近激活的窗口</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IsChild</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">判断</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象是否为一个子窗口</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetParent</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">如果存在的话，获得</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象的父窗口</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetSafeOwner</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得给定窗口的安全的所有者</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetParent</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">改变父窗口</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">WindowFromPoint</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">标识包括给定点的窗口</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetDlgItem</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">从指定的对话框获得标准符为指定</FONT><FONT SIZE=1>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>的控件</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetDlgCtrlID</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">如果</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>为一子窗口，返回其</FONT><FONT SIZE=1>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>值</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetDlgCtrlID</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">当</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象为一子窗口</FONT><FONT SIZE=1>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>不仅指对话框中的控件</FONT><FONT SIZE=1>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>时，为其指定控件</FONT><FONT SIZE=1>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>或窗口</FONT><FONT SIZE=1>ID</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetDescendantWindow</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">检查所有下级窗口</FONT><FONT SIZE=1>(descendant window)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>并返回具有指定</FONT><FONT SIZE=1>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>的窗口</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetParentFrame</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象的父框架窗口</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SendMessageToDescendants</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">发送一条消息到窗口的所有下级窗口</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetTopLevelParent</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得窗口的顶层父窗口</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetTopLevelOwner</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得窗口的顶层所有者窗口</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetParentOwner</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">返回指向子窗口的父窗口的指针</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetTopLevelFrame</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得窗口的顶层框架窗口</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">UpdateDialogControls</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">用来更新对话框按钮或其它控件的状态</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">UpdateData</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">初始化对话框或从对话框中获取数据</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CenterWindow</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">相对于父窗口使窗口居中</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">7.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>更新和绘制函数</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表</FONT><FONT SIZE=3>6.8)</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 8 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>类</FONT><FONT FACE="Arial" SIZE=1>CWnd</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>的更新和绘制函数</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=486>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">BeginPaint</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">为重绘操作准备</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">EndPaint</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">标记重绘操作的结束</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="RIGHT">续表</FONT><FONT FACE="Arial" SIZE=1>6.8</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=486>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">Print</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在指定的设备上下文绘制当前窗口</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">PrintClient</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在指定的设备上下文</FONT><FONT SIZE=1>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>通常是打印机</FONT><FONT SIZE=1>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>绘制所有窗口</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">LockWindowUpdate</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">禁止或重新允许绘制指定的窗口</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">UnlockWindowUpdate</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">解除</FONT><FONT SIZE=1>CWnd::LockWindowUpdate</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对窗口的锁定</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetDC</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得客户区的显示上下文</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetDCEx</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得客户区的显示上下文，并在绘制过程中允许裁剪</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">RedrawWindow</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在客户区中更新指定的矩形或区域</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetWindowDC</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得整个窗口的显示上下文，包括标题条，菜单和滚动条</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ReleaseDC</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">释放客户区或窗口设备上下文，并使其可为其它程序所使用</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">UpdateWindow</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">更新客户区</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetRedraw</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">决定在</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象中的改变是否被重绘</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetUpdateRect</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得完全覆盖</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象的更新区域的最小矩形坐标</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetUpdateRgn</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象的更新区域</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">Invalidate</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">使用整个客户区无效</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">InvalidateRect</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">通过将给定矩形添加到当前更新区域来使包括在给定矩形内的客户区无效</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">InvalidateRgn</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">通过将给定区域添加到当前更新区域来使包括在给定区域内的客户区无效</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ValidateRect</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">通过将给定矩形从当前更新区域中移出来使包括在给定矩形内的客户区有效</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ValidateRgn</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">通过将给定区域从当前更新区域中移出来使包括在给定区域内的窗户区有效</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ShowWindow</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">显示或隐藏窗口</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IsWindowVisible</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">判断窗口是否可见</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ShowOwnedPopups</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">显示或隐藏窗口拥有的所有弹出式窗口</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">EnableScrollBar</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">允许或禁止滚动条上的一个或两个箭头</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">8.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>坐标映射函数</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表</FONT><FONT SIZE=3>6.9)</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 9 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>类</FONT><FONT FACE="Arial" SIZE=1>CWnd</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>的坐标映射函数</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=474>
<TR><TD WIDTH="25%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="75%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="25%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">MapWindowPoints</FONT></TD>
<TD WIDTH="75%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">从</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象的坐标空间映射一系列点到另一窗口的坐标空间</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="RIGHT">续表</FONT><FONT FACE="Arial" SIZE=1>6.9</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=474>
<TR><TD WIDTH="25%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="75%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="25%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ClientToScreen</FONT></TD>
<TD WIDTH="75%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">转换给定点的客户坐标或显示矩形到屏幕坐标</FONT></TD>
</TR>
<TR><TD WIDTH="25%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ScreenToClient</FONT></TD>
<TD WIDTH="75%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">转换给定点的屏幕坐标或显示矩形到客户坐标</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">9.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>窗口文本函数</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表</FONT><FONT SIZE=3>6.10)</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 10 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>类</FONT><FONT FACE="Arial" SIZE=1>CWnd</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>的窗口文本函数</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=415>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetWindowText</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置窗口文本或标题条</FONT><FONT SIZE=1>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>如果有的话</FONT><FONT SIZE=1>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>为指定文本</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetWindowText</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得窗口文本或标题条</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetWindowTextLength</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">返回窗口文本或标题条的长度</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetFont</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置当前字体</FONT></TD>
</TR>
<TR><TD WIDTH="34%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetFont</FONT></TD>
<TD WIDTH="66%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得当前字体</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">10.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>滚动函数</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表</FONT><FONT SIZE=3>6.11)</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 11 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>类</FONT><FONT FACE="Arial" SIZE=1>CWnd</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>的滚动成员函数</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=419>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetScrollPos</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得滚动框的当前位置</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetScrollRange</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">拷贝给定滚动框中滚动块的当前最大和最小位置</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ScrollWindow</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">滚动客户区的内容</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ScrollWindowEx</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">滚动客户区内容。与</FONT><FONT SIZE=1>ScrollWindowEx</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>类似，但具有一些附加特性</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetScrollInfo</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得关于某一滚动条的由</FONT><FONT SIZE=1>SCROLLINFO</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>结构维护的信息</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetScrollLimit</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得滚动条的限制</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetScrollInfo</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置关于滚动条的信息</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetScrollPos</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置滚动条的当前位置，并在指定的情况下重绘滚动条以反映新的位置</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetScrollRange</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置给定滚动条的最小和最大位置值</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ShowScrollBar</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">显示或隐藏滚动条</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">EnableScrollBarCtrl</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">允许或禁止兄弟滚动条控件</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetScrollBarCtrl</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">返回兄弟滚动条控件</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">RepositionBars</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在客户区中对控件条重定位</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">11.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>拖放函数</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表</FONT><FONT SIZE=3>6.12)</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 12 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>类</FONT><FONT FACE="Arial" SIZE=1>CWnd</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>的拖放成员函数</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=266>
<TR><TD WIDTH="40%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="60%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="40%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">DragAcceptFiles</FONT></TD>
<TD WIDTH="60%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">使窗口可以接受文件拖放</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">12.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>插入符函数</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表</FONT><FONT SIZE=3>6.13)</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 13 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>类</FONT><FONT FACE="Arial" SIZE=1>CWnd</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>的插入符成员函数</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=425>
<TR><TD WIDTH="25%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="75%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="25%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CreateCaret</FONT></TD>
<TD WIDTH="75%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">新的插入符形状，并获得该插入符的所有权</FONT></TD>
</TR>
<TR><TD WIDTH="25%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CreateSolidCaret</FONT></TD>
<TD WIDTH="75%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">创建方块形状的插入符，并获得该插入符的所有权</FONT></TD>
</TR>
<TR><TD WIDTH="25%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CreateGrayCaret</FONT></TD>
<TD WIDTH="75%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">创建变灰方块形状的插入符，并获得该插入符的所有权</FONT></TD>
</TR>
<TR><TD WIDTH="25%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetCaretPos</FONT></TD>
<TD WIDTH="75%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得插入符当前位置的客户坐标</FONT></TD>
</TR>
<TR><TD WIDTH="25%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetCaretPos</FONT></TD>
<TD WIDTH="75%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">移动插入符到指定的位置</FONT></TD>
</TR>
<TR><TD WIDTH="25%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">HideCaret</FONT></TD>
<TD WIDTH="75%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">隐藏插入符</FONT></TD>
</TR>
<TR><TD WIDTH="25%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ShowCaret</FONT></TD>
<TD WIDTH="75%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在插入符的当前位置显示插入符</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">13.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对话框项函数</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表</FONT><FONT SIZE=3>6.14)</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 14 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>类</FONT><FONT FACE="Arial" SIZE=1>CWnd</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>的对话框项函数</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=427>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="65%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CheckDlgButton</FONT></TD>
<TD WIDTH="65%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在按钮控件前放置选中标记或清除按钮控件的选中标记</FONT></TD>
</TR>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CheckRadioButton</FONT></TD>
<TD WIDTH="65%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">选中指定的单选钮并清除指定给中其它所有单选钮的选中标记</FONT></TD>
</TR>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetCheckedRadioButton</FONT></TD>
<TD WIDTH="65%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">返回一组按钮中当前选中单选钮的</FONT><FONT SIZE=1>ID</FONT></TD>
</TR>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">DlgDirList</FONT></TD>
<TD WIDTH="65%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">使用文件或目录列表填充一列表框</FONT></TD>
</TR>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">DlgDirListComboBox</FONT></TD>
<TD WIDTH="65%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">使用文件或目录列表填充一组合框的列表框</FONT></TD>
</TR>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">DlgDirSelect</FONT></TD>
<TD WIDTH="65%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">从一列表框中获得当前选择</FONT></TD>
</TR>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">DlgDirSelectComboBox</FONT></TD>
<TD WIDTH="65%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">从一组合框的列表框中获得当前选择</FONT></TD>
</TR>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetDlgItemInt</FONT></TD>
<TD WIDTH="65%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">将给定对话框中某一控件的文本转换为一个整数值</FONT></TD>
</TR>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetDlgItemText</FONT></TD>
<TD WIDTH="65%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得与某一控件相关联的标题或文本</FONT></TD>
</TR>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetNextDlgGroupItem</FONT></TD>
<TD WIDTH="65%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">查找同一组中的下一个</FONT><FONT SIZE=1>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>或前一个</FONT><FONT SIZE=1>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>控件</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="RIGHT">续表</FONT><FONT FACE="Arial" SIZE=1>6.14</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=427>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="65%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetNextDlgTabItem</FONT></TD>
<TD WIDTH="65%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">查找在指定控件之前</FONT><FONT SIZE=1>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>或之后</FONT><FONT SIZE=1>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>的第一个具有</FONT><FONT SIZE=1>WS_TABSTOP</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>样式的控件</FONT></TD>
</TR>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IsDlgButtonChecked</FONT></TD>
<TD WIDTH="65%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">判断一个按钮控件是否选中</FONT></TD>
</TR>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IsDialogMessage</FONT></TD>
<TD WIDTH="65%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">判断一个给定消息是否影响非模态对话框，如果是，处理该消息</FONT></TD>
</TR>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SendDlgItemMessage</FONT></TD>
<TD WIDTH="65%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">向指定的控件发送一条消息</FONT></TD>
</TR>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetDlgItemInt</FONT></TD>
<TD WIDTH="65%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">使某一控件的文本为某一给定整数值</FONT></TD>
</TR>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetDlgItemText</FONT></TD>
<TD WIDTH="65%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置指定对话框中某一控件的标题或文本</FONT></TD>
</TR>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SubclassDlgItem</FONT></TD>
<TD WIDTH="65%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">将一个</FONT><FONT SIZE=1>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>控件与</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象相关联，并使其通过</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象的消息映射传递消息</FONT></TD>
</TR>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ExecuteDlgInit</FONT></TD>
<TD WIDTH="65%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">初始化对话框资源</FONT></TD>
</TR>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">RunModalLoop</FONT></TD>
<TD WIDTH="65%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">为一模态窗口获取、翻译或发送消息</FONT></TD>
</TR>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ContinueModal</FONT></TD>
<TD WIDTH="65%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">使一窗口继续保持模态</FONT></TD>
</TR>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">EndModalLoop</FONT></TD>
<TD WIDTH="65%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">结束某一窗口的模态状态</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">14.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>数据绑定函数</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表</FONT><FONT SIZE=3>6.15)</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 15 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>类</FONT><FONT FACE="Arial" SIZE=1>CWnd</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>的数据绑定成员函数</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=427>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">BindDefaultProperty</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">将调用对象的默认简单绑定属性</FONT><FONT SIZE=1>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>该属性在类型库中标记</FONT><FONT SIZE=1>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>绑定至相关联的数据源控件的游标</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">BindProperty</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">将数据绑定控件的游标绑定属性绑定至数据源控件，并使用</FONT><FONT SIZE=1>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>绑定管理器注册绑定关系</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetDSCCursor</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得指向由数据源控件的数据源、用户名、密码和</FONT><FONT SIZE=1>SQL</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>属性定义的底层游标的指针</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">15.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>菜单函数</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表</FONT><FONT SIZE=3>6.16)</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 16 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>类</FONT><FONT FACE="Arial" SIZE=1>CWnd</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>的菜单成员函数</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=375>
<TR><TD WIDTH="29%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="71%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="29%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetMenu</FONT></TD>
<TD WIDTH="71%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得指向指定菜单的指针</FONT></TD>
</TR>
<TR><TD WIDTH="29%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetMenu</FONT></TD>
<TD WIDTH="71%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置菜单为指定的菜单</FONT></TD>
</TR>
<TR><TD WIDTH="29%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">DrawMenuBar</FONT></TD>
<TD WIDTH="71%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">重绘菜单条</FONT></TD>
</TR>
<TR><TD WIDTH="29%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetSystemMenu</FONT></TD>
<TD WIDTH="71%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">允许应用程序访问控制菜单以进行复制和修改</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="RIGHT">续表</FONT><FONT FACE="Arial" SIZE=1>6.16</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=375>
<TR><TD WIDTH="29%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="71%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="29%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">HiliteMenuItem</FONT></TD>
<TD WIDTH="71%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">加亮顶层菜单项或移去顶层菜单项的加亮显示</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">16.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>工具提示函数</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表</FONT><FONT SIZE=3>6.17)</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 17 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>类</FONT><FONT FACE="Arial" SIZE=1>CWnd</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>的工具提示函数</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=428>
<TR><TD WIDTH="31%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="69%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="31%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">EnableToolTip</FONT></TD>
<TD WIDTH="69%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">允许工具提示控件</FONT></TD>
</TR>
<TR><TD WIDTH="31%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CancelToolTip</FONT></TD>
<TD WIDTH="69%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">禁止工具提示控件</FONT></TD>
</TR>
<TR><TD WIDTH="31%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">FilterToolTipMessage</FONT></TD>
<TD WIDTH="69%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得对话框中与某一控件相关联的标题或文本</FONT></TD>
</TR>
<TR><TD WIDTH="31%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">OnToolHitTest</FONT></TD>
<TD WIDTH="69%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">判断一个点是否在指定工具的绑定矩形内，并获得该工具的信息</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">17.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>计时器函数</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表</FONT><FONT SIZE=3>6.18)</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 18 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>类</FONT><FONT FACE="Arial" SIZE=1>CWnd</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>的计时器成员函数</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=391>
<TR><TD WIDTH="19%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="81%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="19%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetTimer</FONT></TD>
<TD WIDTH="81%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">安装系统计时器，计时器触发时发送</FONT><FONT SIZE=1>WM_TIMER</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>消息</FONT></TD>
</TR>
<TR><TD WIDTH="19%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">KillTimer</FONT></TD>
<TD WIDTH="81%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">消除系统计时器</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">18.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>提示函数</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表</FONT><FONT SIZE=3>6.19)</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 19 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>类</FONT><FONT FACE="Arial" SIZE=1>CWnd</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>的提示成员函数</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=410>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">FlashWindow</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">闪烁窗口一次</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">MessageBox</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">创建并显示一个包括应用程序提供的消息和标题的窗口</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">19.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>窗口消息函数</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表</FONT><FONT SIZE=3>6.20)</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 20 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>类</FONT><FONT FACE="Arial" SIZE=1>CWnd</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>的窗口消息成员函数</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=453>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetCurrentMessage</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">返回窗口正在处理的消息的指针。仅当在一个</FONT><I><FONT SIZE=1>OnMessage</I></FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>消息处理函数中调用该成员函数。</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">Default</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">调用默认窗口过程，该过程提供对所有应用程序未处理的消息的默认处理</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">PreTranslateMessage</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">由</FONT><FONT SIZE=1>CWinApp</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>使用，在窗口消息被发送到</FONT><FONT SIZE=1>TranslateMessage</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>和</FONT><FONT SIZE=1>DispatchMessage</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>之前对其进行过滤</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="RIGHT">续表</FONT><FONT FACE="Arial" SIZE=1>6.20</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=453>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SendMessage</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">将一条消息发送到</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象，直至该对象处理该消息之后才返回</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">PostMessage</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">将一条消息放入程序的消息队列，不等待窗口处理该消息就立即返回</FONT></TD>
</TR>
<TR><TD WIDTH="28%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SendNotifyMessage</FONT></TD>
<TD WIDTH="72%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">将指定消息发送到窗口，并尽可能快的返回，这依赖于调用线程如何创建窗口</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">20.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>剪贴板函数</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表</FONT><FONT SIZE=3>6.21)</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 21 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>类</FONT><FONT FACE="Arial" SIZE=1>CWnd</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>的剪贴板函数</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=453>
<TR><TD WIDTH="33%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="67%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="33%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ChangeClipboardChain</FONT></TD>
<TD WIDTH="67%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">从剪贴板查看器链中移去</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象</FONT></TD>
</TR>
<TR><TD WIDTH="33%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetClipboardViewer</FONT></TD>
<TD WIDTH="67%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">添到</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象到窗口链，这些窗口当剪贴板内容改变时会收到通知</FONT></TD>
</TR>
<TR><TD WIDTH="33%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">OpenClipboard</FONT></TD>
<TD WIDTH="67%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">打开剪贴板。其它程序仅当</FONT><FONT SIZE=1>Windows CloseClipboard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>函数被调用时才可以更改剪贴板</FONT></TD>
</TR>
<TR><TD WIDTH="33%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetClipboardOwner</FONT></TD>
<TD WIDTH="67%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得剪贴板的当前拥有者的指针</FONT></TD>
</TR>
<TR><TD WIDTH="33%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetOpenClipboardWindow</FONT></TD>
<TD WIDTH="67%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得指向当前打开剪贴板的窗口的指针</FONT></TD>
</TR>
<TR><TD WIDTH="33%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetClipboardViewer</FONT></TD>
<TD WIDTH="67%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得指向剪贴板查看器链中第一个窗口的指针</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">21.&#9;OLE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>控件函数</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表</FONT><FONT SIZE=3>6.22)</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 22 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>类</FONT><FONT FACE="Arial" SIZE=1>CWnd</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>的</FONT><FONT FACE="Arial" SIZE=1>OLE</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>控件函数</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=328>
<TR><TD WIDTH="39%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="61%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="39%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetProperty</FONT></TD>
<TD WIDTH="61%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置</FONT><FONT SIZE=1>OLE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>控件属性</FONT></TD>
</TR>
<TR><TD WIDTH="39%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">OnAmbientProperty</FONT></TD>
<TD WIDTH="61%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">实现环境属性值</FONT></TD>
</TR>
<TR><TD WIDTH="39%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetControlUnknown</FONT></TD>
<TD WIDTH="61%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得指向一未知</FONT><FONT SIZE=1>OLE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>控件的指针</FONT></TD>
</TR>
<TR><TD WIDTH="39%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetProperty</FONT></TD>
<TD WIDTH="61%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得一</FONT><FONT SIZE=1>OLE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>控件的属性</FONT></TD>
</TR>
<TR><TD WIDTH="39%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">InvokeHelper</FONT></TD>
<TD WIDTH="61%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">调用</FONT><FONT SIZE=1>OLE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>控件方法或属性</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">22.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>可重载函数</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表</FONT><FONT SIZE=3>6.23)</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
<P ALIGN="JUSTIFY">　</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 23 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>类</FONT><FONT FACE="Arial" SIZE=1>CWnd</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>的可重载成员函数</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=452>
<TR><TD WIDTH="24%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="76%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="24%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">WindowProc</FONT></TD>
<TD WIDTH="76%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">为</FONT><FONT SIZE=1>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象提供一个窗口过程。默认的窗口过程通过消息映射发送消息</FONT></TD>
</TR>
<TR><TD WIDTH="24%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">DefWindowProc</FONT></TD>
<TD WIDTH="76%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">调用默认窗口过程，该过程提供应用程序未处理的所有窗口消息的默认处理</FONT></TD>
</TR>
<TR><TD WIDTH="24%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">PostNcDestroy</FONT></TD>
<TD WIDTH="76%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在窗口被消毁后由</FONT><FONT SIZE=1>OnNcDestroy</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>函数调用</FONT></TD>
</TR>
<TR><TD WIDTH="24%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">OnNotify</FONT></TD>
<TD WIDTH="76%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">由框架调用以通知父窗口某一事件在某一控件中发生或者该控件需要信息</FONT></TD>
</TR>
<TR><TD WIDTH="24%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">OnChildNotify</FONT></TD>
<TD WIDTH="76%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">由父窗口调用以给通知控件一个响应控件通知的机会</FONT></TD>
</TR>
<TR><TD WIDTH="24%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">DoDataExchange</FONT></TD>
<TD WIDTH="76%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">用于对话框数据交换和验证。由</FONT><FONT SIZE=1>UpdateData</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>调用</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
<P ALIGN="JUSTIFY">其余函数包括对各种窗口消息的消息处理函数，这些函数为数众多，这里我们限于篇幅不再一一介绍。类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中定义的消息处理函数几乎都具有一致的命名方式，其格式为前缀</FONT><FONT SIZE=3>On</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>再加上相应的消息名，如</FONT><FONT SIZE=3>WM_PAINT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>消息的处理函数在类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中被命名为</FONT><FONT SIZE=3>OnPaint</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。因此，只需知道所需处理的消息，就可以很快的推知该消息的处理函数名。</P>
</FONT><FONT FACE="仿宋_GB2312" LANG="ZH-CN" SIZE=4><P ALIGN="CENTER"><A NAME="_Toc425697419">第三节</FONT><FONT SIZE=4> </FONT><FONT FACE="仿宋_GB2312" LANG="ZH-CN" SIZE=4>按钮</A></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">在本节中要讲述的实际包括四种控件：下压按钮、单选钮、复选框和组框，它们之间无论在外观还是在使用上都有较大的差异。在</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中之所以使用一个类</FONT><FONT SIZE=3>CButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>来封装这四种不同控件纯粹出于历史的原因。这使得一些使用过</FONT><FONT SIZE=3>Visual Basic</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>之类的编程工具的程序员可能会有一点混淆，但相信只需要很短的时间就可以习惯这一点转变。</P>
<P ALIGN="JUSTIFY">下面我们分别讲述这四种按钮控件：</P>
</FONT><FONT FACE="Arial"><P>6.3.1 </FONT><FONT FACE="黑体" LANG="ZH-CN">下压按钮</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">在基于对话框的应用程序中，下压按钮是最常见的控件之一，如图</FONT><FONT SIZE=3>6.10</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image377.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image377.gif" WIDTH=163 HEIGHT=70></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 10 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>下压按钮</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">下面的步骤讲述如何向对话框中添加下压按钮控件。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">1.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>在</FONT><FONT SIZE=3>ResourceView</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中双击需要添加下压按按钮控件的对话框模板，</FONT><FONT SIZE=3>Developer Studio</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>将在资源编辑器中打开该对话框模板。如图</FONT><FONT SIZE=3>6.11</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">2.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>在图</FONT><FONT SIZE=3>6.3</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示的控件工具窗口中选择图标<IMG SRC="Image378.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image378.gif" WIDTH=24 HEIGHT=22>，直接使用鼠标在对话框中绘制出一个下压按钮。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">3.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>右击所绘制的下压按钮，选择</FONT><FONT SIZE=3>Properties</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>命令打开其属性对话框，设置下压按钮的各项属性。下面详细描述这些属性的含义：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image379.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image379.gif" WIDTH=520 HEIGHT=374></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 11 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>在资源编辑器中打开一对话框模板</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image380.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image380.gif" WIDTH=163 HEIGHT=66></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 12 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>在对话框中绘制下压按钮控件</P><DIR>

</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=3><P>一般属性：</P></DIR>
</FONT>
<P ALIGN="RIGHT"><TABLE CELLSPACING=0 BORDER=0 CELLPADDING=7 WIDTH=538>
<TR><TD WIDTH="14%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="86%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">在头文件中定义的符号。类型：符号、整数或用引号括起来的字符串</FONT></TD>
</TR>
<TR><TD WIDTH="14%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Caption</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="86%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">控件标签文本。如果在标题中的某个字母前加上了“</FONT><FONT SIZE=3>&amp;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>”符号，该字母在显示时将被加上下划线，相应的“</FONT><FONT SIZE=3>&amp;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>”符不会被显示。在运行直接按下加有下划线的字母同单击按钮具有同样的效果。默认情况下，资源编辑器对按钮标题的命名依赖于控件的类型，如</FONT><FONT SIZE=3>Button1</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>、</FONT><FONT SIZE=3>Button2</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>等。</FONT></TD>
</TR>
<TR><TD WIDTH="14%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Visible</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="86%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">决定当应用程序第一次运行时控件是否可见。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为真</FONT></TD>
</TR>
<TR><TD WIDTH="14%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Disabled</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="86%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">决定当对话框创建时该控件是否显示为禁止状态。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</FONT></TD>
</TR>
<TR><TD WIDTH="14%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Group</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="86%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">指定一组控件中的第一个控件。在同组控件中用户可以使用箭头键在控件之间移动。以</FONT><FONT SIZE=3>tab order</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为序，在该控件之后的所有该属性值为</FONT><FONT SIZE=3>False</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的控件将被视为同一组控件，直到遇上</FONT><FONT SIZE=3>Group</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性标记为</FONT><FONT SIZE=3>True</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的控件为止。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</FONT></TD>
</TR>
<TR><TD WIDTH="14%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Tabstop</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="86%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">决定用户是否可以使用</FONT><FONT SIZE=3>TAB</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>键来定位到该控件。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</FONT></TD>
</TR>
<TR><TD WIDTH="14%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">HelpID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="86%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">为控件指定一个帮助标识符。该标识符基于相应的资源标识符。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</FONT></TD>
</TR>
</TABLE>
</P>
<DIR>

<FONT FACE="黑体" LANG="ZH-CN" SIZE=3><P>样式：</P></DIR>
</FONT>
<P ALIGN="RIGHT"><TABLE CELLSPACING=0 BORDER=0 CELLPADDING=7 WIDTH=538>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Default button</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">该属性为真时，控件将作为对话框中的默认按钮，默认按钮在对话框第一次显示时具有粗的黑边，用户在对话框中按下</FONT><FONT SIZE=3>ENTER</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>键相当于单击该按钮。一个对话框中只允许有一个默认按钮。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Owner draw</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">创建一个自绘按钮。使用自绘按钮可以定制按钮的外观。使用自绘按钮需要重载下面的两个函数或其中之一：</FONT><FONT SIZE=3>CWnd::OnDrawItem</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>CButton::OnDraw</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Icon</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">在按钮显示时使用一个图标来代替文本。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</FONT><FONT SIZE=3>  </P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">该按钮样式为</FONT><FONT SIZE=3>Windows 95</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中新引入的按钮样式</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Bitmap</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">在按钮显示时使用位图来代替文本。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</P>
<P ALIGN="JUSTIFY">该样式为</FONT><FONT SIZE=3>Windows 95</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中新引入的样式</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Multi-line</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">当按钮文本太长时使用多行回绕的方式进行显示。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Notify</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">按钮控件被单击或双击时通知父窗口。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为真</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Flat</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">使用平面外观代替按钮默认的三维外观。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Horizontal alignment</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">设置按钮标题文本的对齐方式</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>左对齐、右对齐、居中对齐或使用默认位置</FONT><FONT SIZE=3>)</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Vertical alignment</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">设置按钮标题文本的对齐方式</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>向上对齐、向下对齐、居中对齐或使用默认位置</FONT><FONT SIZE=3>)</FONT></TD>
</TR>
</TABLE>
</P>
<DIR>

<FONT FACE="黑体" LANG="ZH-CN" SIZE=3><P>扩展样式</P></DIR>
</FONT>
<P ALIGN="RIGHT"><TABLE CELLSPACING=0 BORDER=0 CELLPADDING=7 WIDTH=538>
<TR><TD WIDTH="32%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Client edge</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="68%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">使按钮看起来有下凹的感觉。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</FONT></TD>
</TR>
<TR><TD WIDTH="32%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Static edge</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="68%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">在按钮边缘创建边框。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</FONT></TD>
</TR>
<TR><TD WIDTH="32%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Modal frame</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="68%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">提供一个三维框架</FONT></TD>
</TR>
<TR><TD WIDTH="32%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Transparent</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="68%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">使控件透明。位于透明窗口下面的窗口不会被该窗口所覆盖。具有透明样式的窗口仅当所有底层兄弟窗口完成更新之后才会收到</FONT><FONT SIZE=3>WM_PAINT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>消息。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认什为假</FONT></TD>
</TR>
<TR><TD WIDTH="32%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Accept files</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="68%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">是否接受文件拖放。如果在控件上放下文件时，控件将接收到</FONT><FONT SIZE=3>WM_DROPFILES</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>消息。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</FONT></TD>
</TR>
<TR><TD WIDTH="32%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">No parent notify</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="68%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">指定子窗口不向父窗口发送</FONT><FONT SIZE=3>WM_PARENTNOTIFY</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>消息。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</FONT></TD>
</TR>
<TR><TD WIDTH="32%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Right aligned text</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="68%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">指定文本为右对齐。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</FONT></TD>
</TR>
<TR><TD WIDTH="32%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Right-to-left reading order</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="68%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">使用从右向左的阅读方式来显示文本。主要用于希伯来语系和阿拉伯语等。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</FONT></TD>
</TR>
</TABLE>
</P>


<UL>
<FONT FACE="黑体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"><LI>技巧：</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"><LI>如果需要在控件的标题文本中使用“</FONT><FONT SIZE=3>&amp;</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>”符，可以使用双写的“</FONT><FONT SIZE=3>&amp;</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>”符，如按钮文本“</FONT><FONT SIZE=3>&amp;File &amp;&amp; Directory</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>”在显示时将成为<IMG SRC="Image381.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image381.gif" WIDTH=81 HEIGHT=16>。</LI></P>
<P ALIGN="JUSTIFY"><LI>如果需要在控件标题中使用多行文本，可以将按钮控件的</FONT><FONT SIZE=3>Multiline</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>属性设置为真，然后在需要换行的地方使用转义字符</FONT><FONT SIZE=3> "\n" </FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>或</FONT><FONT SIZE=3> "\r"</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>。在</FONT><FONT SIZE=3>Multiline</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>属性值为真的情况下，如果文本行的宽度超过了控件的宽度，即使没有使用换行转义字符，文本也将会在合适的地方进行折行处理。但要注意，其它一些转义字符序列，如</FONT><FONT SIZE=3> "\t" </FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>等不被控件所支持。</LI></P></UL>

</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
<P ALIGN="JUSTIFY">我们一般只处理按钮控件一种通知消息：</FONT><FONT SIZE=3>BN_CLICKED</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，该消息表示用户单击了该按钮控件。按钮控件的另外一种通知消息是</FONT><FONT SIZE=3>BN_DOUBLECLICKED</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，它表示用户双击了按钮控件，但是一般情况下我们不需要处理下压按钮的双击事件。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image382.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image382.gif" WIDTH=481 HEIGHT=314></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 13 ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对话框：</FONT><FONT SIZE=1>Message Maps</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>选项卡</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">下面我们介绍如何为下压按钮的单击事件添加消息处理函数和消息映射，这里我们假设所添加的下压按钮</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为</FONT><FONT SIZE=3>IDC_CLICKHERE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，标题文本为“单击这里</FONT><FONT SIZE=3>(&amp;C)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>”，其余属性使用默认设置。</P>
<P ALIGN="JUSTIFY">第一种方法如下：</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">1.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>在资源编辑器右击按钮</FONT><FONT SIZE=3>IDC_CLICKHERE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，选择“</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>”，打开如图</FONT><FONT SIZE=3>6.13</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示的窗口，单击</FONT><FONT SIZE=3>Message Maps</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>选项卡。</P>
<P ALIGN="JUSTIFY">确信在</FONT><FONT SIZE=3>Project</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>处选择的工程为当前工程，</FONT><FONT SIZE=3>Class name</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>处为当前对话框模板所对应的类。</FONT><FONT SIZE=3>Object IDs</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>列表框中给出了当前对话框类中的所有对象标识符，从中选择</FONT><FONT SIZE=3>IDC_CLICKHERE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，即我们刚才添加的下压按钮，这里，在右边的</FONT><FONT SIZE=3>Message</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>列表框中给出了当前对象的消息，这里即</FONT><FONT SIZE=3>BN_CLICKED</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>BN_DOUBLECLICKED</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，从中选择</FONT><FONT SIZE=3>BN_CLICKED (</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>它代表了按钮的单击事件</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，然后单击右边的</FONT><FONT SIZE=3>Add Function</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>按钮</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>注意：</FONT><FONT SIZE=3>Add Function</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>按钮仅当已选择了某一消息时才会出现</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image383.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image383.gif" WIDTH=249 HEIGHT=74></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 14 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>决定是否需要更改命令处理函数名</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image384.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image384.gif" WIDTH=416 HEIGHT=334></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 15 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>为控件通知消息添加处理函数</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">2.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>在随后出现的对话框</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>如图</FONT><FONT SIZE=3>6.14</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中选择是否需要更改命令处理函数的函数名。</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的默认函数名遵从于下面的命令协议：</P>
<P ALIGN="JUSTIFY">前缀</FONT><FONT SIZE=3>On + </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>控件</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中除去</FONT><FONT SIZE=3>IDC_</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>前缀的剩余部分</P>
<P ALIGN="JUSTIFY">这里我们接受默认的命令处理函数名</FONT><FONT SIZE=3>OnClickhere</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">3.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>新添加的命令处理函数</FONT><FONT SIZE=3>OnClickhere</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>已经出现在图</FONT><FONT SIZE=3>6.13</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示的对话框中的下面的</FONT><FONT SIZE=3>Member functions</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>部分。同时，</FONT><FONT SIZE=3>Edit Code</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>按钮获得输入焦点。单击该按钮，</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>将在</FONT><FONT SIZE=3>Developer Studio</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的代码编辑器窗口中打开函数</FONT><FONT SIZE=3>OnClickhere</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，并高亮度显示下面的</FONT><FONT SIZE=3>// TODO</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>注释：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>// TODO: Add your control notification handler code here</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">我们使用下面的代码来替换上面的</FONT><FONT SIZE=3>// TODO</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>注释：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>MessageBox</P>
<P>    ("您刚才单击了按钮 IDC_CLICKHERE, 因此相应的命令处理函数 OnClickhere 被调用!");</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">第二种方法：</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">1.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>在资源编辑器中右击按钮</FONT><FONT SIZE=3>IDC_CLICKHERE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，选择</FONT><FONT SIZE=3>Events</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>命令，打开如图</FONT><FONT SIZE=3>6.15</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示的对话框：</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">2.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>在</FONT><FONT SIZE=3>Class or object to handle</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>列表框中选择</FONT><FONT SIZE=3>IDC_CLICKHERE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，然后在</FONT><FONT SIZE=3>New Windows messages/events</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>列表框中选择</FONT><FONT SIZE=3>BN_CLICKED</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，单击右边的</FONT><FONT SIZE=3>Add and Edit</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，余下的步骤同第一种方法的第</FONT><FONT SIZE=3>2</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>步开始相同。</P>
<P ALIGN="JUSTIFY">这时编译并运行上面的程序，单击标签为“单击这里”的下压按钮，弹出如图所示的消息框。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image385.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image385.gif" WIDTH=307 HEIGHT=62></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 16 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>程序</FONT><FONT SIZE=1>PushButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>的运行结果</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">下面我们来看相应的消息映射。</P>
<P ALIGN="JUSTIFY">首先，在类</FONT><FONT SIZE=3>CPushButtonDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的定义中添加了消息处理函数</FONT><FONT SIZE=3>OnClickhere</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的原型：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>afx_msg void OnClickhere();</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">函数</FONT><FONT SIZE=3>OnClickhere</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的声明被放进了两行注释分隔符</FONT><FONT SIZE=3>//{{AFX_MSG(CPushButtonDlg)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>//}}AFX_MSG</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>之间。前面我们提到过，</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>将由它定义的消息处理函数的声明放入这两行注释分隔符之间。</P>
<P ALIGN="JUSTIFY">下面我们来看相应的消息映射入口。它位于实现文件</FONT><FONT SIZE=3>PushButtonDlg.cpp</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中的两个宏</FONT><FONT SIZE=3>BEGIN_MESSAGE_MAP</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>END_MESSAGE_MAP</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>之间：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>ON_BN_CLICKED(IDC_CLICKHERE, OnClickhere)</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">其中第一个参数</FONT><FONT SIZE=3>IDC_CLICKHERE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为控件的标识符，第二个参数</FONT><FONT SIZE=3>OnClickhere</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为相应的消息处理函数。</P>
<P ALIGN="JUSTIFY">一旦弄清楚了由</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>添加这些代码，我们就可以手动的添加命令消息处理函数的消息映射。但是，从上面的过程中我们可以很明显的看出一点，使用</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>来完成这一点要简单得多。</P>
<P ALIGN="JUSTIFY">下面我们介绍与下压按钮控件有关的几个技巧：</P><DIR>

</FONT><FONT FACE="Arial" SIZE=3><P>(1) </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=3>在运行过程中改变下压按钮的标题文本</P></DIR>

</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">有时候我们需要在程序运行的过程中改变按钮的标题文本。典型的，我们可能需要根据用户所输入的数据来决定按钮上应该写些什么。我们到前面去看一下表</FONT><FONT SIZE=3>6.14</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，看一看有什么成员函数可以完成这种功能。</P>
<P ALIGN="JUSTIFY">很好，类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数</FONT><FONT SIZE=3>SetDlgItemText</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>可以由窗口或对话框所有的控件的标题文本。其原型如下：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void SetDlgItemText( int nID, LPCTSTR lpszString );</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">其中</FONT><FONT SIZE=3>nID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为控件标识符</FONT><FONT SIZE=3>(ID)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，</FONT><FONT SIZE=3>lpszString</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为控件的新标题文本。</P>
<P ALIGN="JUSTIFY">成员函数</FONT><FONT SIZE=3>SetDlgItemText</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>事实上是向控件发送一条</FONT><FONT SIZE=3>WM_SETTEXT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>消息，该消息的</FONT><FONT SIZE=3>wParam</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>参数必须为</FONT><FONT SIZE=3>0</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，而</FONT><FONT SIZE=3>lParam</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为指向窗口标题文本字符串的指针。</P>
<P ALIGN="JUSTIFY">因此，</FONT><FONT SIZE=3>SetDlgItemText</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>等价于下面的函数调用：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>CWnd::SendDlgItemMessage(nID, WM_SETTEXT, 0, LPARAM(lpszString));</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">或</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>::SendDlgItemMessage(GetSafeHwnd(), nID, WM_SETTEXT, 0, LPARAM(lpszString));</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">比如说，我们用以将下面的代码添加到</FONT><FONT SIZE=3>OnClickhere</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中对</FONT><FONT SIZE=3>MessageBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的调用之后：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>SetDlgItemText(IDC_CLICKHERE,"此按钮已被单击过.");</P><DIR>

</FONT><FONT FACE="Arial" SIZE=3><P>(2) </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=3>使用按钮无效</FONT><FONT FACE="Arial" SIZE=3>(</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=3>或有效</FONT><FONT FACE="Arial" SIZE=3>)</P></DIR>

</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">假设我们在上面的例子中希望用户只能单击按钮</FONT><FONT SIZE=3>IDC_CLICKHERE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>一次。那么，按钮</FONT><FONT SIZE=3>IDC_CLICKHERE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>被单击一次之后应该变灰，以禁止用户再次单它。这可以通过下面的步骤来实现：</P>
<P ALIGN="JUSTIFY">首先调用对话框对象的成员函数</FONT><FONT SIZE=3>GetDlgItem (</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>该成员函数在类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中定义</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，该成员函数获得一个指向对话框中的控件的</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>指针，然后再通过该指针调用控件对象的成员函数</FONT><FONT SIZE=3>EnableWindow (</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>该成员函数在类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中定义</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。该成员函数允许或禁止调用它的</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对象对应窗口。整个过程可以使用一行语句来实现，如下所示：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>GetDlgItem(IDC_CLICKHERE)-&gt;EnableWindow(FALSE);</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">其中</FONT><FONT SIZE=3>GetDlgItem</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>函数以控件的</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为参数，返回值的类型为</FONT><FONT SIZE=3>CWnd *</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，如果需要通过该指针调用在类</FONT><FONT SIZE=3>CButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所定义的成员函数，可以使用强制类型转换。</FONT><FONT SIZE=3>EnableWindow</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>以一个布尔值为参数，该参数为真时表示允许该窗口接受鼠标和键盘输入，为假时禁止该窗口接受鼠标和键签署输入。这里再一次强调，控件本身也是一种窗口。</P>
<P ALIGN="JUSTIFY">将上面的代码放到命令处理函数</FONT><FONT SIZE=3>OnClickhere</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的最后，这样，在单击一次按钮“单击这里”之后，对话框如图</FONT><FONT SIZE=3>6.17</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image386.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image386.gif" WIDTH=163 HEIGHT=70></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 17 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>处于禁止状态的控钮控件</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">此外，如果使用了</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为按钮建立了对话框的成员变量的数据映射，则可以通过对话框中的成员变量直接操纵控件。在本例中，如果我们已将下压按钮映射为类型为</FONT><FONT SIZE=3>CButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员变量</FONT><FONT SIZE=3>m_bnClickhere</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，则可以通过下面成员函数调用设置按钮的允许状态：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>m_bnClickhere-&gt;EnableWindow(FALSE);</P><DIR>

</FONT><FONT FACE="Arial" SIZE=3><P>(3) </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=3>使按钮获得输入焦点</P></DIR>

</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">具有输入焦点的窗口将会得到所有的键盘输入消息。我们可以通过类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数</FONT><FONT SIZE=3>GetFocus</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>来使对话框中的控件获得输入焦点。</P>
<P ALIGN="JUSTIFY">试将下面的代码加到消息处理函数</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>return</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>语句前：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>m_bnClickhere.SetFocus();</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">或</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>GetDlgItem(IDC_CLICKHERE)-&gt;SetFocus();</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">编译并运行程序。非常奇怪，输入焦点并没有被设置到下压按钮“单击这里”上。依然是按钮“确定”拥有当前输入焦点。</P>
<P ALIGN="JUSTIFY">请注意这样的事实：</P>

<UL>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"><LI>注意：</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"><LI>如果在消息处理成员函数</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>中将输入焦点设置到指定的控件，则函数应该返回</FONT><FONT SIZE=3>FALSE</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>，这是因为如果</FONT><FONT SIZE=3>WM_INITDIALOG</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>消息的处理函数返回真值，</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>会将输入焦点设置为对话框中的第一个控件。因此，如果在该处理函数中设置了控件的输入焦点，</FONT><FONT SIZE=3>WM_INITDIALOG</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>消息的处理函数应该返回假值。</LI></P></UL>

</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
<P ALIGN="JUSTIFY">将下面的代码</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>return TRUE;</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">修改为</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>return FALSE;</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">这时再编译并运行程序，则输入焦点将被正常地设置到下压按钮“单击这里”上。这时按下空格键相当于在按钮“单击这里”上单击鼠标左键。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">(4) </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>使用图形代替文本</P>
<P ALIGN="JUSTIFY">在一些应用程序，尤其是一些多媒体应用程序中，我们希望按钮的外观看起来更加的美观，比如说我们希望使用多变的图形代替单调乏味的纯文本。对于一般的按钮控件，我们可以使用两种方法来在按钮中使用图形来代替文本。</P>
<P ALIGN="JUSTIFY">第一种方法是使用图标来代替文本。下面的示例说明了这种用法：</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">1.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>使用资源编辑器或其它工作编辑一个图标资源，其</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为</FONT><FONT SIZE=3>IDI_CLICKHERE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，图案如图</FONT><FONT SIZE=3>6.18</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">2.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>在希望使用图标图案的按钮控件的</FONT><FONT SIZE=3>Properties</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性框在</FONT><FONT SIZE=3>Styles</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>选项卡中设置</FONT><FONT SIZE=3>Icon</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性为真。并按图</FONT><FONT SIZE=3>6.19</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>修改对话框及其中控件的大小。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">3.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>在类</FONT><FONT SIZE=3>CPushButtonDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的消息处理成员函数</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中添加下面的代码。这些代码应该在对基类的</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数的调用之后。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image387.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image387.gif" WIDTH=125 HEIGHT=125></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 18 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>图标</FONT><FONT SIZE=1>IDI_CLICKHERE</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image388.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image388.gif" WIDTH=122 HEIGHT=84></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 19 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>为使用图标按钮修改<BR>
对话框中控件的大小</P>
<P>HICON hIcon=AfxGetApp()-&gt;LoadIcon(IDI_CLICKHERE);</P>
<P>m_bnClickhere.SetIcon(hIcon);</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">编译该应用程序，运行结果如图</FONT><FONT SIZE=3>6.20</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image389.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image389.gif" WIDTH=122 HEIGHT=84></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 20 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>在按钮中使用图标的示例</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">这时单击按钮</FONT><FONT SIZE=3>Click Here</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，图标图案会有向右和向下下压的效果。</P>
<P ALIGN="JUSTIFY">第二种方法是使用位图来代替文本。步骤如下：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image390.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image390.gif" WIDTH=107 HEIGHT=89></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 21 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>位图资源</FONT><FONT SIZE=1>IDB_CLICKHERE</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">1.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>向工程资源中添加如图</FONT><FONT SIZE=3>6.21</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的位图资源，其</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为</FONT><FONT SIZE=3>IDB_CLICKHERE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">2.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>在希望使用位图图案的按钮控件的</FONT><FONT SIZE=3>Properties</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性框在</FONT><FONT SIZE=3>Styles</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>选项卡中设置</FONT><FONT SIZE=3>Bitmap</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性为真。我们注意到</FONT><FONT SIZE=3>Icon</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性和</FONT><FONT SIZE=3>Bitmap</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性是互斥的，即选择一属性的同时也清除了另一属性。并按图</FONT><FONT SIZE=3>6.19</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>修改对话框及其中控件的大小。同时参考最终运行结果</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>如图</FONT><FONT SIZE=3>6.22)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>修改对话框及其按钮的大小。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">3.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>在</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数中添加如下的代码：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>HBITMAP hBitmap=LoadBitmap(AfxGetApp()-&gt;m_hInstance,MAKEINTRESOURCE(IDB_CLICKHERE));</P>
<P>m_bnClickhere.SetBitmap(hBitmap);</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">在上面的代码中，我们使用</FONT><FONT SIZE=3>Win32 API</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>函数</FONT><FONT SIZE=3>LoadBitmap (</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>注意它不是类</FONT><FONT SIZE=3>CWinApp</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>来加载位图资源</FONT><FONT SIZE=3>IDB_CLICKHERE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，从而获得位图句柄</FONT><FONT SIZE=3>hBitmap</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，最后以该句柄为参数调用类</FONT><FONT SIZE=3>CButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数</FONT><FONT SIZE=3>SetBitmap</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
<P ALIGN="JUSTIFY">编译并运行上面的程序，得到如图</FONT><FONT SIZE=3>6.22</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示的运行结果。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image391.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image391.gif" WIDTH=122 HEIGHT=146></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 22 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>在按钮中使用位图的示例</P>

<UL>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"><LI>注意：</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"><LI>在上面的示例程序中我们使用了真彩色</FONT><FONT SIZE=3>(24</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>位</FONT><FONT SIZE=3>)</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>的位图。这样的位图不可以使用资源编辑器来进行编辑。上面的位图是使用其它专门的图形工具来进行编辑并保存到文件</FONT><FONT SIZE=3>Clickhere.bmp</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>中的。请按下面的步骤将该文件添加为工程的资源：</LI></P></UL>
<DIR>
<DIR>

</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">1.&#9;</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>选择</FONT><FONT SIZE=3>Insert</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>菜单下的</FONT><FONT SIZE=3>Resource</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>命令，打开如图所示的对话框。</P></DIR>
</DIR>

</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image392.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image392.gif" WIDTH=302 HEIGHT=199></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 23 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>插入新的资源</P><DIR>
<DIR>

</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">2.&#9;</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>从中单击</FONT><FONT SIZE=3>Import</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>按钮，从位图文件</FONT><FONT SIZE=3>Clickhere.bmp</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>中输入资源。注意在文件类型中选择“</FONT><FONT SIZE=3>All files (*.*)</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>”。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">Developer Studio</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>将弹出如图</FONT><FONT SIZE=3>6.24</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>所示的警告对话框。该对话框表明位图资源已被正确添加。但由于使用了多于</FONT><FONT SIZE=3>256</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>色的颜色数，因此该资源不可以在资源编辑器中打开。</P></DIR>
</DIR>

</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image393.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image393.gif" WIDTH=314 HEIGHT=74></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 24 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>试图添加使用了多于</FONT><FONT SIZE=1>256</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>色的位图资源时的警告消息框</P><DIR>
<DIR>

</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">3.&#9;</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>按正常的方法将所添加的位图资源的</FONT><FONT SIZE=3>ID</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>修改为</FONT><FONT SIZE=3>IDB_CLICKHERE</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>。必要时重新编辑资源文件或工程。</P></DIR>
</DIR>

</FONT><FONT FACE="Arial"><P>6.3.2 </FONT><FONT FACE="黑体" LANG="ZH-CN">位图按钮</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">位图按钮是由</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>提供的几种附加控件之一。在前一节的过程中，我们可以使用一个位图来代替文本作为下压按钮的标签。而在位图按钮中，我们可以使用多达四个位图来分别代表按钮处于四种不同的状态</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>凸起、按下、获得焦点或被禁止</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>下的显示。而且，使用位图按钮还可以去除掉令人讨厌的按钮黑边。而使用位图按钮并不复杂，但是相比起标准的按钮控件</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>它由</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>自身所提供</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>而言有一些特殊。下面的过程描述了位图按钮的使用，它们在</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中使用类</FONT><FONT SIZE=3>CBitmapButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>封装。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">1.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>使用</FONT><FONT SIZE=3>AppWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>创建新的基于对话框的</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>工程</FONT><FONT SIZE=3>BitmapButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">2.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>使用资源编辑器绘制一个标准按钮，将其</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>设为</FONT><FONT SIZE=3>IDC_CLICKHERE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，标题文本设为</FONT><FONT SIZE=3>CLICKHERE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，然后在</FONT><FONT SIZE=3>Styles</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>选项卡中将</FONT><FONT SIZE=3>Owner draw</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性设置为真。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">3.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>向工程中添加四个位图资源。</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE CELLSPACING=0 BORDER=0 CELLPADDING=7 WIDTH=498>
<TR><TD WIDTH="25%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="CENTER"><IMG SRC="Image394.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image394.gif" WIDTH=80 HEIGHT=60></FONT></TD>
<TD WIDTH="25%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="CENTER"><IMG SRC="Image395.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image395.gif" WIDTH=80 HEIGHT=60></FONT></TD>
<TD WIDTH="25%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="CENTER"><IMG SRC="Image396.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image396.gif" WIDTH=80 HEIGHT=60></FONT></TD>
<TD WIDTH="25%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="CENTER"><IMG SRC="Image397.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image397.gif" WIDTH=80 HEIGHT=60></FONT></TD>
</TR>
<TR><TD WIDTH="25%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="CENTER">"CLICKHEREU"</FONT></TD>
<TD WIDTH="25%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="CENTER">"CLICKHERED"</FONT></TD>
<TD WIDTH="25%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="CENTER">"CLICKHEREF"</FONT></TD>
<TD WIDTH="25%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="CENTER">"CLICKHEREX"</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 25 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>位图按钮</FONT><FONT SIZE=1>IDC_CLICKHERE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>所使用的四个位图资源</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">所添加的四个位图资源的</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的设置取决于在第一步中的标题文本的设置：按钮未按下去时使用的位图添加了后缀</FONT><FONT SIZE=3>"U"</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>；按钮按下去时使用的位图添加了后缀</FONT><FONT SIZE=3>"D"</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>；按钮拥有焦点时使用的位图添加了后缀</FONT><FONT SIZE=3>"F"</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>；按钮被禁止时使用的位图添加了后缀</FONT><FONT SIZE=3>"X"</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。需要注意的是，由于这些位图资源的</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为字符串，因此在使用属性对话框设置其</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>时一定要加了双引号，否则资源编辑器会将该</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>值看作代表一个整型量的符号。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">4.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>在对话框类</FONT><FONT SIZE=3>CBitmapButtonDlg(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>这里我们沿用上一节中的示例程序</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中添加类型为</FONT><FONT SIZE=3>CBitmapButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的新的成员变量</FONT><FONT SIZE=3>m_bnClickhere</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">5.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>在</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数中的</FONT><FONT SIZE=3>return</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>语句前添加下面的代码：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>m_bnClickhere.AutoLoad(IDC_CLICKHERE, this);</P>

<P>CRect rect1,rect2;</P>
<P>CButton *pClickhere=(CButton*)GetDlgItem(IDC_CLICKHERE);</P>
<P>GetClientRect(&amp;rect1);</P>
<P>pClickhere-&gt;GetWindowRect(&amp;rect2);</P>
<P>ScreenToClient(&amp;rect2);</P>
<P>pClickhere-&gt;MoveWindow(rect2.left,(rect1.Height()-rect2.Height())/2,</P>
<P>                       rect2.Width(),rect2.Height());</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">其中第一个参数</FONT><FONT SIZE=3>IDC_CLICKHERE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>是位图按钮的资源</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，第二个参数为指向该位图按钮的父窗口的</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对象的指针，这里即类</FONT><FONT SIZE=3>CBitmapButtonDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>this</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>指针。类</FONT><FONT SIZE=3>CBitmapButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数</FONT><FONT SIZE=3>AutoLoad</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>完成以下几步工作：</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">(1)&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>将按钮与</FONT><FONT SIZE=3>CBitmapButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对象相关联；</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">(2)&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>自动加载按钮所使用的位图，条件是这些位图资源满足步骤</FONT><FONT SIZE=3>2</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中的命名约定；</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">(3)&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>自动改变控件的大小以适合所加载的位图资源。</P>
<P ALIGN="JUSTIFY">接下来的几行代码将位图按钮在对话框中进行垂直居中。首先类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数</FONT><FONT SIZE=3>GetClientRect</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>返回了对话框的客户区矩形，接着，类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数</FONT><FONT SIZE=3>GetWindowRect</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>返回了控件</FONT><FONT SIZE=3>IDC_CLICKHERE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的窗口矩形，然后使用类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数</FONT><FONT SIZE=3>ScreenToClient</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>将</FONT><FONT SIZE=3>rect2</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>由屏幕坐标转换为对话框的客户坐标，这是因为类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数</FONT><FONT SIZE=3>MoveWindow</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>在移动子窗口时将使用父窗口的客户区坐标，而不是使用屏幕坐标。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">6.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>按图</FONT><FONT SIZE=3>6.26</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>添加下面的下压按钮</FONT><FONT SIZE=3>IDC_DISABLE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，将其标题设置为“禁止使用</FONT><FONT SIZE=3>(&amp;X)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>”。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image398.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image398.gif" WIDTH=166 HEIGHT=93></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 26 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>位图按钮示例程序对话框的设计</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">7.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>将所有下压按钮的</FONT><FONT SIZE=3>Tab stop</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>位于</FONT><FONT SIZE=3>General</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>选项卡中</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>设置为真。并按图</FONT><FONT SIZE=3>6.26</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>调整各控件的大小位置。其中按钮</FONT><FONT SIZE=3>CLICKHERE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的大小的无关紧要的，我们只需要保证对话框左边是否有足够的空间来显示按钮所使用的位图即可。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">8.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为按钮</FONT><FONT SIZE=3>IDC_DISABLE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>BN_CLICKED</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>命令编写下面的命令处理函数：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CBitmapButtonDlg::OnDisable() </P>
<P>{</P>
<P>&#9;CButton *pClickhere=(CButton*)GetDlgItem(IDC_CLICKHERE);</P>
<P>&#9;static int bIsEnabled=pClickhere-&gt;IsWindowEnabled();</P>
<P>&#9;if (bIsEnabled)</P>
<P>&#9;{</P>
<P>&#9;&#9;pClickhere-&gt;EnableWindow(FALSE);</P>
<P>&#9;&#9;SetDlgItemText(IDC_DISABLE,"允许使用(&amp;E)");</P>
<P>&#9;}</P>
<P>&#9;else</P>
<P>&#9;{</P>
<P>&#9;&#9;pClickhere-&gt;EnableWindow(TRUE);</P>
<P>&#9;&#9;SetDlgItemText(IDC_DISABLE,"禁止使用(&amp;X)");</P>
<P>&#9;}</P>
<P>&#9;bIsEnabled=!bIsEnabled;</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">上面的代码实现两个功能，即当位图按钮的状态为允许时，单击按钮</FONT><FONT SIZE=3>IDC_DISABLE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>将其状态设置为不允许；在相反的状态下，单击按钮</FONT><FONT SIZE=3>IDC_DISABLE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>将其状态设置为允许。由于实现该过程的代码比较简单，因此我们在这里不作详细的讲述。</P>
<P ALIGN="JUSTIFY">编译并运行上面的示例程序，其结果如图</FONT><FONT SIZE=3>6.27</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示。</P>
<P ALIGN="JUSTIFY">反复单击位图按钮和禁止使用按钮，以观察位图按钮在不同状态下的外观的改变。还可以使用</FONT><FONT SIZE=3>TAB</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>键改变按钮的输入焦点，以观察位图按钮获得输入焦点和失去输入焦点时的不同外观。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image399.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image399.gif" WIDTH=159 HEIGHT=93></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 27 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>位图按钮示例程序</P>
</FONT><FONT FACE="Arial"><P>6.3.3 </FONT><FONT FACE="黑体" LANG="ZH-CN">组框</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">组框也是一种按钮控件。它常常用来在视觉上将控件</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>典型情况下是一系列的单选钮和复选框</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>进行分组，从而使对话框中的各个控件看起来比较有条理。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image400.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image400.gif" WIDTH=159 HEIGHT=93></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 28 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>组框</FONT><FONT SIZE=1>(Group box)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>控件</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">相对于其它控件来说，组框的使用非常之简单。这里我们需要强调的是，组框仅仅是在视觉上将控件进行分组，事实上控件在编程上的分组依赖于其</FONT><FONT SIZE=3>Group</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性的设置。</P>
<P ALIGN="JUSTIFY">组框也可以发送</FONT><FONT SIZE=3>BN_CLICKED</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>BN_DOUBLECLICKED</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>命令消息。但是在般情况下我们都不对这些命令作响应。此外，组框也可以设置</FONT><FONT SIZE=3>Icon</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>或</FONT><FONT SIZE=3>Bitmap</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>注意它们之间的互斥的</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，即我们可以使用图标或位图来代替默认情况下的文本。但是在绝大多数情况下，我们仅使用纯文本来作为组框的标题。</P>
<P ALIGN="JUSTIFY">与前面讲述的下压按钮类似，我们同样可以使用</FONT><FONT SIZE=3>SetDlgItemText</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数来设置组框控件的标题文本。此外，我们还可以使用</FONT><FONT SIZE=3>GetDlgItem</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>来获得与组框控件相关联的</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对象的指针，然后通过该指针调用成员函数</FONT><FONT SIZE=3>SetWindowText</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>来实现同样的功能。由于在程序中常常不需要频繁的操纵组框控件，因此大多数情况下我们不需要为组框控件进行成员变量的映射，但这种方法是完全可以的。</P>
<P ALIGN="JUSTIFY">对于如何将控件进行分组的方法在讲述单选钮和复选框时再作介绍。</P>
</FONT><FONT FACE="Arial"><P>6.3.4 </FONT><FONT FACE="黑体" LANG="ZH-CN">单选钮</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image401.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image401.gif" WIDTH=163 HEIGHT=117></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 29 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>单选钮示例程序</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">单选钮用来表示一系列的互斥选项，这些互斥选项常常被分成若干个组。下面的示例程序说明了单选钮的使用。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">1.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>创建新的基于对话框的</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>应用程序，将工程名设置为</FONT><FONT SIZE=3>RadioButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">2.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>按图</FONT><FONT SIZE=3>6.29</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>绘制应用程序的主对话框。其中在</FONT><FONT SIZE=3>Control</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>工具箱中单选钮对应的图标是<IMG SRC="Image402.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image402.gif" WIDTH=24 HEIGHT=22>，组框控件对应的图标是<IMG SRC="Image403.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image403.gif" WIDTH=24 HEIGHT=22>。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">3.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>单击</FONT><FONT SIZE=3>Layout</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>菜单下的</FONT><FONT SIZE=3>Tab Order</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>命令，按图</FONT><FONT SIZE=3>6.30</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的顺序单击各控件以设置控件的</FONT><FONT SIZE=3>TAB</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>键顺序</FONT><FONT SIZE=3>(Tab Order)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">4.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>确信所有控件的</FONT><FONT SIZE=3>Group</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性都被设置为假。分别单击组框“性别”和组框“年龄”，将其</FONT><FONT SIZE=3>Group</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性设置为真。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image404.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image404.gif" WIDTH=163 HEIGHT=109></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 30 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>设置控件的</FONT><FONT SIZE=1>Tab Order</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">以</FONT><FONT SIZE=3>Tab Order</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为序，从</FONT><FONT SIZE=3>Group</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性为真的控件开始</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>包括该控件</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，到下一个</FONT><FONT SIZE=3>Group</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性的真的控件结束</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>不包括该控件</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，所有的这些控件将组成一个组。对于单选钮，同一组内同时只能有</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>也应该有</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>一个处于被选中的状态。当其中一个控件被置于选中状态时，同组的其它单选钮应该清除其选中状态。对于由资源编辑器生成的单选钮控件，在默认情况由</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>自动处理同组控件之间的互斥关系。</P>
<P ALIGN="JUSTIFY">下面我们简述一下特定于单选钮的一些属性及其含义，这些属性被列于</FONT><FONT SIZE=3>Styles</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>选项卡内：</P></FONT>
<P ALIGN="RIGHT"><TABLE CELLSPACING=0 BORDER=0 CELLPADDING=7 WIDTH=538>
<TR><TD WIDTH="14%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Auto</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="86%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">在具有</FONT><FONT SIZE=3>Auto</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性的情况下，当用户单击了同一组的某个单选钮时，其余单选钮的选中属性被自动清除。当在一组单选钮中使用</FONT><FONT SIZE=3>Dialog Data Exchange</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>时，该属性必须被设置为</FONT><FONT SIZE=3>True</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：真</FONT></TD>
</TR>
<TR><TD WIDTH="14%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Left text</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="86%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">将单选钮的标题文本显示于圆形标记的左边。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：假</FONT></TD>
</TR>
<TR><TD WIDTH="14%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Push-like</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="86%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">使一个复选框、三态复选框或单选项具有类似于下压按钮的外观和行为。该按钮在选中时显示为凸起，在不被选中时显示为凹下</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>参见图。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：假</FONT></TD>
</TR>
<TR><TD WIDTH="14%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Notify</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="86%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">决定在默认情况下当单选钮被单击或双击时向父窗口发送通知消息。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：真</FONT></TD>
</TR>
</TABLE>
</P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image405.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image405.gif" WIDTH=163 HEIGHT=119></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 31 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>具有</FONT><FONT SIZE=1>Pusk-like</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>样式的单选钮</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">5.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>将性别框内的两个控件的</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>按从上到下的顺序设置为</FONT><FONT SIZE=3>IDC_SEX1</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>IDC_SEX2</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>；将年龄框内的两个控件的</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>按从上到下的顺序设置为</FONT><FONT SIZE=3>IDC_AGE1</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>、</FONT><FONT SIZE=3>IDC_AGE2</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>、</FONT><FONT SIZE=3>IDC_AGE3</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>、</FONT><FONT SIZE=3>IDC_AGE4</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>IDC_AGE5</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
<P ALIGN="JUSTIFY">在程序运行时可以调用</FONT><FONT SIZE=3>CButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数</FONT><FONT SIZE=3>SetCheck</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>设置单选钮的选中状态。该成员函数带有一个类型为整型的参数，该参数为</FONT><FONT SIZE=3>0</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表示清除选中按钮的选中状态，参数为</FONT><FONT SIZE=3>1</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表示设置选中按钮的选中状态。</P>

<UL>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"><LI>注意：</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"><LI>如果我们在程序中调用</FONT><FONT SIZE=3>SetCheck</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>设置同一组中某一单选钮的为选中状态，并不意味着同时清除同一组中其它单选钮的选中状态。以前面创建的工程来举例，请看下面的两行代码：</LI></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>((CButton*)GetDlgItem(IDC_AGE1))-&gt;SetCheck(1);</LI></P>
<P ALIGN="JUSTIFY"><LI>((CButton*)GetDlgItem(IDC_AGE5))-&gt;SetCheck(1);</LI></P></UL>
<DIR>
<DIR>

</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">上面的代码将导致年龄组中的第一个按钮和第五个按钮在对话框第一次显示时同时处于选中状态。这是应该避免的。因此，如果我们通过代码改变了单选钮的选中状态，一定要记得同时清除同组的其它单选钮的选中状态。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P></DIR>
</DIR>

<P ALIGN="JUSTIFY">对于单个的单选钮，我们可以调用类</FONT><FONT SIZE=3>CButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数</FONT><FONT SIZE=3>GetCheck</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，该函数的返回值为</FONT><FONT SIZE=3>0</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>、</FONT><FONT SIZE=3>1</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>或</FONT><FONT SIZE=3>2</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，分别代表按钮处理未选中状态、选中状态或中间状态</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对三态复选框而言</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。但是，对于对话框中的单选锯而言，我们更感兴趣于同一组单选钮中哪一个被选中，因此，调用类</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数</FONT><FONT SIZE=3>GetCheckedRadioButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>要更为方便。该成员函数原型如下：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>int GetCheckedRadioButton( int nIDFirstButton, int nIDLastButton );</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">第一个参数</FONT><FONT SIZE=3>nIDFirstButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>是同一组中的第一个单选钮控件的</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，</FONT><FONT SIZE=3>nIDLastButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>是同一组中最后一个单选钮控件的</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。成员函数</FONT><FONT SIZE=3>GetCheckedRadioButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>返回指定组中第一个所选中的单选钮</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>在正常情况下仅应当有一个单钮被选中</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，如果没有按钮被选中，则返回</FONT><FONT SIZE=3>0</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
<P ALIGN="JUSTIFY">这里需要注意的是，成员函数</FONT><FONT SIZE=3>GetCheckedRadioButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>被没有要求两个参数</FONT><FONT SIZE=3>nIDFirstButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>nIDLastButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所指定的控件一定位于同一组中。</P>

<UL>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"><LI>注意：</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"><LI>若干个单选钮是否属于同一组是以其</FONT><FONT SIZE=3>Tab</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>顺序来排定的，而</FONT><FONT SIZE=3>GetCheckedRadioButton</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>函数是以</FONT><FONT SIZE=3>ID</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>顺序来检查按钮的选定状态的。因此，如果传递给函数</FONT><FONT SIZE=3>GetCheckedRadioButton</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>的第一个参数的值大于第二个参数的值时，其返回值总是为</FONT><FONT SIZE=3>0</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>，而事实上，由这两个参数指定的单选钮的</FONT><FONT SIZE=3>TAB</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>顺序可能恰恰相反。因此，一般情况下我们应该尽量保证同一组单选钮的资源</FONT><FONT SIZE=3>ID</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>是连续递增的。通常这些资源</FONT><FONT SIZE=3>ID</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>是在头文件</FONT><FONT SIZE=3>Resource.h</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>中定义的。如果你同一组的单选钮不是一次创建的，那么它们的资源</FONT><FONT SIZE=3>ID</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>可能不是连续递增的，甚至可能是相反的。这时我们可以手动的修改资源头文件中的宏定义，以保证如</FONT><FONT SIZE=3>GetCheckedRadioButton</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>之类的成员函数得到正确的结果。</LI></P></UL>
<DIR>
<DIR>

<P ALIGN="JUSTIFY">同时，这也说明一点，即使用</FONT><FONT SIZE=3>GetCheck</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>一个一个控件的检查各单选钮的选中状态要安全得多。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P></DIR>
</DIR>

<P ALIGN="JUSTIFY">下面我们来完成应用程序</FONT><FONT SIZE=3>RadioButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
<P ALIGN="JUSTIFY">首先，使用</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>重载类</FONT><FONT SIZE=3>CDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>OnOK</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数，方法是重载</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为</FONT><FONT SIZE=3>IDOK</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的按钮的</FONT><FONT SIZE=3>BN_CLICKED</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>命令处理函数。由</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>生成的默认重载形式如下：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CRadioBoxDlg::OnOK() </P>
<P>{</P>
<P>&#9;// TODO: 在此添加附加的验证</P>
<P>&#9;</P>
<P>&#9;CDialog::OnOK();</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">这里特定的代码来替代前面的</FONT><FONT SIZE=3>// TODO</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>注释后得到如下的程序代码：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CRadioBoxDlg::OnOK() </P>
<P>{</P>
<P>&#9;// 暂时隐藏主对话框</P>
<P>&#9;ShowWindow(SW_HIDE);</P>

<P>&#9;UINT nSex=GetCheckedRadioButton(IDC_SEX1,IDC_SEX2);  // 获得性别选择</P>
<P>&#9;UINT nAge=GetCheckedRadioButton(IDC_AGE1,IDC_AGE5);  // 获得年龄选择</P>

<P>&#9;CString msg="性别: ";    // 保存输出消息字符串</P>
<P>&#9;// 根据用户的选择生成消息串</P>
<P>&#9;// 添加性别信息</P>
<P>&#9;switch (nSex)</P>
<P>&#9;{</P>
<P>&#9;case IDC_SEX1:</P>
<P>&#9;&#9;msg+="男\n";</P>
<P>&#9;&#9;break;</P>
<P>&#9;case IDC_SEX2:</P>
<P>&#9;&#9;msg+="女\n";</P>
<P>&#9;&#9;break;</P>
<P>&#9;default:</P>
<P>&#9;&#9;break;</P>
<P>&#9;}</P>
<P>&#9;// 添加年龄信息</P>
<P>&#9;msg+="年龄: ";</P>
<P>&#9;switch (nAge)</P>
<P>&#9;{</P>
<P>&#9;case IDC_AGE1:</P>
<P>&#9;&#9;msg+="18 岁以下";</P>
<P>&#9;&#9;break;</P>
<P>&#9;case IDC_AGE2:</P>
<P>&#9;&#9;msg+="18 - 25 岁";</P>
<P>&#9;&#9;break;</P>
<P>&#9;case IDC_AGE3:</P>
<P>&#9;&#9;msg+="25 - 35 岁";</P>
<P>&#9;&#9;break;</P>
<P>&#9;case IDC_AGE4:</P>
<P>&#9;&#9;msg+="35 - 45 岁";</P>
<P>&#9;&#9;break;</P>
<P>&#9;case IDC_AGE5:</P>
<P>&#9;&#9;msg+="45 岁以上";</P>
<P>&#9;&#9;break;</P>
<P>&#9;default:</P>
<P>&#9;&#9;break;</P>
<P>&#9;}</P>
<P>&#9;msg+="\n\n以上数据是否正确?";</P>

<P>&#9;// 显示输入消息框询问用户所输入的信息是否正确</P>
<P>&#9;if(MessageBox(msg,NULL,MB_YESNO|MB_ICONQUESTION)==IDNO)</P>
<P>&#9;{</P>
<P>&#9;&#9;// 当用户回答“否”时重新显示对话框以供便用户可以更改所作的选择</P>
<P>&#9;&#9;ShowWindow(SW_SHOW);</P>
<P>&#9;&#9;return;</P>
<P>&#9;}</P>
<P>&#9;// 否则退出应用程序</P>
<P>&#9;CDialog::OnOK();</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">以上应用程序的运行结果如图</FONT><FONT SIZE=3>6.32</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示：</P>
<P ALIGN="JUSTIFY">按如图</FONT><FONT SIZE=3>6.32</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示进行选择，单击确定弹出如图</FONT><FONT SIZE=3>6.33</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示的对话框。</P>
<P ALIGN="JUSTIFY">下一节中我们将讲述复选框的使用。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image406.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image406.gif" WIDTH=163 HEIGHT=119></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 32 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>单选钮示例程序的运行结果</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image407.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image407.gif" WIDTH=115 HEIGHT=89></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 33 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>单击“确定”之后的确认消息框</P>
</FONT><FONT FACE="Arial"><P>6.3.5 </FONT><FONT FACE="黑体" LANG="ZH-CN">复选框</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">复选框与单选钮很相象，不同之处在于在同一组控件中，通常使用复选框来代表多重选择，即选项不是互斥的。从外观上来说，复选框所使用的选中标记是一个方框和方框里面的小叉，而不是单选钮所使用的小圆圈和里面的小点。</P>
<P ALIGN="JUSTIFY">对于编程者来说，复选框和单选钮非常相似。我们通过</FONT><FONT SIZE=3>SetCheck</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数来设置某一复选框的选中状态，通过</FONT><FONT SIZE=3>GetCheck</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数来获取某一复选框的选中状态。一般来说，对于复选框，由于其选项不是互斥的，我们一般不通过</FONT><FONT SIZE=3>GetCheckedRadioButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>之类的函数来获得处于选中状态的按钮。</P>
<P ALIGN="JUSTIFY">以下特定于复选框的样式可以</FONT><FONT SIZE=3>Properties</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对话框的</FONT><FONT SIZE=3>Styles</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性页中进行设置：</P></FONT>
<P ALIGN="RIGHT"><TABLE CELLSPACING=0 BORDER=0 CELLPADDING=7 WIDTH=538>
<TR><TD WIDTH="14%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Auto</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="86%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">对于</FONT><FONT SIZE=3>Auto</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性为真的复选框，在单击时将自动在“选中”和“不选中”之间进行切换。如果在一组复选框中使用了</FONT><FONT SIZE=3>Dialog Data Exchange</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，则必须将该属性设置为真。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：真</FONT></TD>
</TR>
<TR><TD WIDTH="14%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Tri-state</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="86%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">创建三态复选框。除了处于“选中”和“不选中”状态外，三态复选框还可以处于变灰状态。通常，态复选框的变灰状态表示其选中状态不确定。在很多软件的安装程序中，变灰往往表示仅选中该组件中的一部分。</FONT></TD>
</TR>
</TABLE>
</P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image408.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image408.gif" WIDTH=161 HEIGHT=107></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 34 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>工程</FONT><FONT SIZE=1>CheckBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>的主对话框的设计</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">下面的应用程序举例说明了复选框的使用。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">1.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>使用默认选项创建一个基于对话框的</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>工程，设置工程名为</FONT><FONT SIZE=3>CheckBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">2.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>按图</FONT><FONT SIZE=3>6.34</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>绘制对话框中的各个复选框</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>在</FONT><FONT SIZE=3>Control</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>工具箱中复选框所对应的图标为<IMG SRC="Image409.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image409.gif" WIDTH=24 HEIGHT=22></FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，并按表</FONT><FONT SIZE=3>6.24</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>设置各复选框的样式和属性。</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 24 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>工程</FONT><FONT FACE="Arial" SIZE=1>CheckBox</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>中各控件的属性设置</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=451>
<TR><TD WIDTH="14%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">控件</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ID</FONT></TD>
<TD WIDTH="30%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">标题文本</FONT></TD>
<TD WIDTH="34%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">其它</FONT></TD>
</TR>
<TR><TD WIDTH="14%" VALIGN="TOP" ROWSPAN=6>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">复选框</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IDC_PLACE1</FONT></TD>
<TD WIDTH="30%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在家里</FONT><FONT SIZE=1>(&amp;H)</FONT></TD>
<TD WIDTH="34%" VALIGN="TOP" ROWSPAN=3>
<FONT SIZE=1><P ALIGN="JUSTIFY">Auto</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>属性和</FONT><FONT SIZE=1>Tri-state</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>属性均为真</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IDC_PLACE2</FONT></TD>
<TD WIDTH="30%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在公司办公室</FONT><FONT SIZE=1>(&amp;O)</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IDC_PLACE3</FONT></TD>
<TD WIDTH="30%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在学校公共机房</FONT><FONT SIZE=1>(&amp;S)</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IDC_OFTEN</FONT></TD>
<TD WIDTH="30%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">经常</FONT></TD>
<TD WIDTH="34%" VALIGN="TOP" ROWSPAN=3>
<FONT SIZE=1><P ALIGN="JUSTIFY">Auto</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>属性为假，</FONT><FONT SIZE=1>Tri-state</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>属性为真</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IDC_SELDOM</FONT></TD>
<TD WIDTH="30%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">偶尔</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IDC_NEVER</FONT></TD>
<TD WIDTH="30%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">从不</FONT></TD>
</TR>
<TR><TD WIDTH="14%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">组框</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IDC_STATIC</FONT></TD>
<TD WIDTH="30%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">使用计算机的场所</FONT></TD>
<TD WIDTH="34%" VALIGN="TOP">　</TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">3.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>使用下面的代码替换类</FONT><FONT SIZE=3>CCheckBoxDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中的</FONT><FONT SIZE=3>// TODO</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>注释：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>((CButton*)GetDlgItem(IDC_OFTEN))-&gt;SetCheck(1);</P>
<P>((CButton*)GetDlgItem(IDC_SELDOM))-&gt;SetCheck(2);</P>
<P>((CButton*)GetDlgItem(IDC_NEVER))-&gt;SetCheck(0);</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">由于三个复选框</FONT><FONT SIZE=3>IDC_OFTEN</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>、</FONT><FONT SIZE=3>IDC_SELDOM</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>、</FONT><FONT SIZE=3>IDC_NEVER</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>Auto</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性值为假，因此当用户单击这三个复选框时其状态不会发生改变。它们在本示例程序中起了图例的作用。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">4.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>在类</FONT><FONT SIZE=3>CCheckBoxDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中重载类</FONT><FONT SIZE=3>CDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数</FONT><FONT SIZE=3>OnOK</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>如下</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>关于对命令处理成员函数</FONT><FONT SIZE=3>OnOK</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的重载我们已经在前一小节中作了讲述</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CCheckBoxDlg::OnOK() </P>
<P>{</P>
<P>&#9;// 定义和初始化所用的变量</P>
<P>&#9;CString strMsg,      // 消息字符串</P>
<P>&#9;        strMsgA[3];  // 分别对应于三种不同时间频度的消息字符串</P>
<P>&#9;int iCount[3];       // 对应于每种时间频度的情况计数</P>
<P>&#9;// 初始化各变量</P>
<P>&#9;iCount[0]=iCount[1]=iCount[2]=0;</P>
<P>&#9;strMsgA[0]="从不在";</P>
<P>&#9;strMsgA[1]="经常在";</P>
<P>&#9;strMsgA[2]="偶尔在";</P>

<P>&#9;int i;      // 用着循环变量或中间变量</P>

<P>&#9;// 检查各复选框的选中状态，并根据用户的选择生成对应于三种不同时间</P>
<P>&#9;// 频度的消息字符串</P>

<P>&#9;// 检查复选框 IDC_PLACE1</P>
<P>&#9;i=( (CButton*)GetDlgItem(IDC_PLACE1) )-&gt;GetCheck();</P>
<P>&#9;if ( (iCount[i]++)==0 )</P>
<P>&#9;&#9;strMsgA[i]+="家里";</P>
<P>&#9;else</P>
<P>&#9;&#9;strMsgA[i]+="、家里";</P>
<P>&#9;</P>
<P>&#9;// 检查复选框 IDC_PLACE2</P>
<P>&#9;i=( (CButton*)GetDlgItem(IDC_PLACE2) )-&gt;GetCheck();</P>
<P>&#9;if ( (iCount[i]++)==0 )</P>
<P>&#9;&#9;strMsgA[i]+="公司办公室";</P>
<P>&#9;else</P>
<P>&#9;&#9;strMsgA[i]+="、公司办公室";</P>
<P>&#9;</P>
<P>&#9;// 检查复选框 IDC_PLACE3</P>
<P>&#9;i=( (CButton*)GetDlgItem(IDC_PLACE3) )-&gt;GetCheck();</P>
<P>&#9;if ( (iCount[i]++)==0 )</P>
<P>&#9;&#9;strMsgA[i]+="学校开放机房";</P>
<P>&#9;else</P>
<P>&#9;&#9;strMsgA[i]+="、学校开放机房";</P>
<P>&#9;</P>
<P>&#9;// 为了符合汉语的语气转折，判断是否需要在“从不……”分句前添加转折</P>
<P>&#9;// 连词“但”。如果用户对三种情况的选择都是“从不”，那么这个“但”</P>
<P>&#9;// 字是不应该要的。</P>
<P>&#9;if ( !(iCount[1]==0 &amp;&amp; iCount[2]==0) )</P>
<P>&#9;&#9;strMsgA[0]=CString("但")+strMsgA[0];</P>

<P>&#9;// 如果用户对三种情况的选择都不属于某种时间频度，那么该时间频度所对应</P>
<P>&#9;// 的消息字符串应该为空。否则，在该分句的末尾加了字符串“使用计算机，”。</P>
<P>&#9;for (i=0;i&lt;3;i++)</P>
<P>&#9;{</P>
<P>&#9;&#9;if ( iCount[i]==0 )</P>
<P>&#9;&#9;&#9;strMsgA[i]="";</P>
<P>&#9;&#9;else</P>
<P>&#9;&#9;&#9;strMsgA[i]+="使用计算机，";</P>
<P>&#9;}</P>

<P>&#9;// 生成最终显示的消息字符串</P>
<P>&#9;strMsg=CString("您")+strMsgA[1]+strMsgA[2]+strMsgA[0];</P>
<P>&#9;// 处理消息字符串的标点</P>
<P>&#9;strMsg=strMsg.Left( strMsg.GetLength()-2 )+"。";</P>
<P>&#9;// 弹出消息框询问用户所输入的数据是否正确</P>
<P>&#9;if ( MessageBox( strMsg,"确认",MB_YESNO|MB_ICONQUESTION )==IDNO )</P>
<P>&#9;{</P>
<P>&#9;&#9;// 如果用户选择“否”，则重新输入数据</P>
<P>&#9;&#9;return;</P>
<P>&#9;}</P>

<P>&#9;// 调用基类的 OnOK 成员函数，并关闭对话框</P>
<P>&#9;CDialog::OnOK();</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">上面的代码都加上了详细的注释，而且所用的函数也都是我们所熟知的，这里我们就不再重复讲述了。</P>
<P ALIGN="JUSTIFY"></P>
<P ALIGN="JUSTIFY">到目前为止，我们已经讲述完了</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>标准控件中的按钮类控件：下压按钮、组框、单选钮和复选框。此外，我们还介绍了位图按钮，一般来说我们并不把它归入</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>标准控件中，而认为它是由</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>提供的少数几个控件之一。而位图按钮事实上是具有</FONT><FONT SIZE=3>Owner draw</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性的自绘制下压按钮，</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>类</FONT><FONT SIZE=3>CBitmapButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>封装了其内部实现的复杂性，而以简单的接口提供给程序员。</P>
<P ALIGN="JUSTIFY">作为本节的结束，我们来讨论一样如何改变按钮标题文本的字体属性。在</FONT><FONT SIZE=3>Developer Studio</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的资源编辑器中，我们可以统一的修改同一对话框中所有按钮的标题文本的字体属性。方法是打开对话框本身的属性</FONT><FONT SIZE=3>(Properties)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对话框，在</FONT><FONT SIZE=3>General</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>选项卡中单击</FONT><FONT SIZE=3>Font</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>按钮，从弹出</FONT><FONT SIZE=3>Select Dialog Font</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对话框中选择对话框所用的字体。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image410.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image410.gif" WIDTH=343 HEIGHT=122></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 35 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>设置对话框的字体属性</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">通过上面的方法设置的字体对整个对话框中所有的控件都有效。如果需要设置单个控件的字体，我们必须通过编写代码来实现。下面的示例程序</FONT><FONT SIZE=3>ButtonFont</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>演示了如何单独更改某个控件的字体。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image411.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image411.gif" WIDTH=184 HEIGHT=106></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 36 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>示例程序</FONT><FONT SIZE=1>ButtonFont</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>的主对话框</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">按图</FONT><FONT SIZE=3>6.36</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>绘制应用程序主对话框中所有的各按钮控件。其中标签为“我爱你”的按钮</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为</FONT><FONT SIZE=3>IDC_LOVE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，标签为“改变字体”的按钮</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为</FONT><FONT SIZE=3>IDC_CHANGEFONT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
<P ALIGN="JUSTIFY">在类</FONT><FONT SIZE=3>CButtonFontDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中添加类型为</FONT><FONT SIZE=3>CFont</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的私有成员变量</FONT><FONT SIZE=3>m_Font</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
<P ALIGN="JUSTIFY">为按钮</FONT><FONT SIZE=3>IDC_CHANGEFONT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>BN_CLICKED</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>事件编写下面的处理函数：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CButtonFontDlg::OnChangefont() </P>
<P>{</P>
<P>&#9;// 获取按钮 IDC_LOVE 的当前所用字体</P>
<P>&#9;LOGFONT lf;</P>
<P>&#9;GetDlgItem(IDC_LOVE)-&gt;GetFont()-&gt;GetLogFont(&amp;lf);</P>

<P>&#9;// 使用按钮的当前字体初始化字体对话框</P>
<P>&#9;CFontDialog dlgFontDlg(&amp;lf);</P>

<P>&#9;// 显示字体选择对话框</P>
<P>&#9;if (dlgFontDlg.DoModal()==IDOK)</P>
<P>&#9;{</P>
<P>&#9;&#9;// 如果用户在字体选择对话框中单击了“确定”按钮，</P>
<P>&#9;&#9;// 则使用</P>
<P>&#9;&#9;dlgFontDlg.GetCurrentFont(&amp;lf);</P>
<P>&#9;&#9;m_Font.DeleteObject();</P>
<P>&#9;&#9;m_Font.CreateFontIndirect(&amp;lf);</P>
<P>&#9;&#9;GetDlgItem(IDC_LOVE)-&gt;SetFont(&amp;m_Font);</P>
<P>&#9;}</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">编译并运行程序</FONT><FONT SIZE=3>ButtonFont</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，单击“改变字体”按钮，在随后弹出的字体选择对话框中设置字体并单击“确定”按钮。对话框的显示可能如图</FONT><FONT SIZE=3>6.37</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image412.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image412.gif" WIDTH=184 HEIGHT=106></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 37 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>示例程序</FONT><FONT SIZE=1>ButtonFont</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>的运行结果</P>

<UL>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"><LI>注意：</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"><LI>在示例程序中，如果不定义类</FONT><FONT SIZE=3>CButtonFontDlg</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>的成员变量</FONT><FONT SIZE=3>m_Font</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>，命令处理函数</FONT><FONT SIZE=3>OnChangefont</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>可以应该这样编写：</LI></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>void CButtonFontDlg::OnChangefont() </LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>{</LI></P>
<P ALIGN="JUSTIFY"><LI>&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>// </FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1>获取按钮</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1> IDC_LOVE </FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1>的当前所用字体</LI></P>
<P ALIGN="JUSTIFY"><LI>&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>LOGFONT lf;</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>GetDlgItem(IDC_LOVE)-&gt;GetFont()-&gt;GetLogFont(&amp;lf);</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI></LI></P>
<P ALIGN="JUSTIFY"><LI>&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>// </FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1>使用按钮的当前字体初始化字体对话框</LI></P>
<P ALIGN="JUSTIFY"><LI>&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>CFontDialog dlgFontDlg(&amp;lf);</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI></LI></P>
<P ALIGN="JUSTIFY"><LI>&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>// </FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1>显示字体选择对话框</LI></P>
<P ALIGN="JUSTIFY"><LI>&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>if (dlgFontDlg.DoModal()==IDOK)</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>&#9;{</LI></P>
<P ALIGN="JUSTIFY"><LI>&#9;&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>// </FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1>如果用户在字体选择对话框中单击了“确定”按钮，</LI></P>
<P ALIGN="JUSTIFY"><LI>&#9;&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>// </FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1>则将按钮</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1> IDC_LOVE </FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1>的标题文本字体设置为所选定的字体。</LI></P>
<P ALIGN="JUSTIFY"><LI>&#9;&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>static CFont font;</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>&#9;&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>dlgFontDlg.GetCurrentFont(&amp;lf);</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>&#9;&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>font.DeleteObject();</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>&#9;&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>font.CreateFontIndirect(&amp;lf);</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>&#9;&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>GetDlgItem(IDC_LOVE)-&gt;SetFont(&amp;font);</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>&#9;}</LI></P>
<P ALIGN="JUSTIFY"><LI>}</LI></P></UL>
<DIR>
<DIR>

</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">按下面的方式编写命令处理函数</FONT><FONT SIZE=3>OnChangefont</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>不会得到正确的结果：</P></DIR>
</DIR>


<UL>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>void CButtonFontDlg::OnChangefont() </LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>{</LI></P>
<P ALIGN="JUSTIFY"><LI>&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>...</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>if (dlgFontDlg.DoModal()==IDOK)</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>&#9;{</LI></P>
<P ALIGN="JUSTIFY"><LI>&#9;&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>CFont font;</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>&#9;&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>dlgFontDlg.GetCurrentFont(&amp;lf);</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>&#9;&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>font.DeleteObject();</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>&#9;&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>font.CreateFontIndirect(&amp;lf);</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>&#9;&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>GetDlgItem(IDC_LOVE)-&gt;SetFont(&amp;font);</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>&#9;}</LI></P>
<P ALIGN="JUSTIFY"><LI>}</LI></P></UL>
<DIR>
<DIR>

</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">之所以会出现这种情况与用来设置字体的</FONT><FONT SIZE=3>CFont</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>变量的存活期有关。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">　</P></DIR>
</DIR>

</FONT><FONT FACE="仿宋_GB2312" LANG="ZH-CN" SIZE=4><P ALIGN="CENTER"><A NAME="_Toc425697420">第四节</FONT><FONT SIZE=4> </FONT><FONT FACE="仿宋_GB2312" LANG="ZH-CN" SIZE=4>静态控件</A></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">静态控件一般用来显示静态的文本、图标、位图或图元文件，它不能用来接受用户的输入，也很少用来显示输出，而在更多的情况下用作那些没有固定的标题文本属性的控件</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>如文本编辑控件、列表框等</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的标签，或者用来进行控件的分组，或者用来显示一些提示性文本。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>类</FONT><FONT SIZE=3>CStatic</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>封装了标准的</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>静态控件。下面的示例程序</FONT><FONT SIZE=3>StaticDemo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>演示了静态控件的使用。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">1.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>使用</FONT><FONT SIZE=3>AppWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>创建一个基于对话框的</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>应用程序，设置其工程名为</FONT><FONT SIZE=3>StaticDemo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">2.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>按如图</FONT><FONT SIZE=3>6.38</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>绘制主对话框中的控件。其中标签为“静态控件”的静态控件</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为</FONT><FONT SIZE=3>IDC_STATIC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。需要注意是的，由资源管理器添加的静态控件在默认情况下其</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>均为</FONT><FONT SIZE=3>IDC_STATIC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，因此，如果需要在程序中区分和操纵各个不同的静态控件，一般情况下我们都需要更改新添加的静态控件的</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>值。这里我们将静态控件的</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>值设置为</FONT><FONT SIZE=3>IDC_STATICDEMO</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image413.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image413.gif" WIDTH=184 HEIGHT=106></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 38 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>示例程序</FONT><FONT SIZE=1>StaticDemo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>的主对话框</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">以下属性和样式没有在本章前面的内容中涉及，它们可以适用于静态控件。可以通过静态控件的</FONT><FONT SIZE=3>Properties</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性对话框的</FONT><FONT SIZE=3>Styles</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>选项卡进行这些属性或样式的设置。</P></FONT>
<P ALIGN="RIGHT"><TABLE CELLSPACING=0 BORDER=0 CELLPADDING=7 WIDTH=538>
<TR><TD WIDTH="22%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Align text</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="78%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">决定静态文本控件中文本的横向对齐方式。可供选择的值为</FONT><FONT SIZE=3>Left (</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>向左对齐</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>、</FONT><FONT SIZE=3>Center (</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>居中对齐</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>Right (</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>向右对齐</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。默认值：</FONT><FONT SIZE=3>Left</FONT></TD>
</TR>
<TR><TD WIDTH="22%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Center Vertically</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="78%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">在静态文本控件中将文本进行垂直居中。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：假</FONT></TD>
</TR>
<TR><TD WIDTH="22%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">No prefix</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="78%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">不将控件文本中的“</FONT><FONT SIZE=3>&amp;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>”符解释为助记字符。在默认情况下，“</FONT><FONT SIZE=3>&amp;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>”符号在显示时会被去掉，取而代之的是紧接“</FONT><FONT SIZE=3>&amp;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>”符之后的字符被以加下划线的格式进行显示。我们早在前面说过，通过双写“</FONT><FONT SIZE=3>&amp;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>”符可以在控件文本中显示出实际的“</FONT><FONT SIZE=3>&amp;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>”符，但是，对于一些特殊的场合，如使用静态文本控件来显示文件名的时候，将</FONT><FONT SIZE=3>No prefix</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性设置为“真”要更方便。</FONT></TD>
</TR>
<TR><TD WIDTH="22%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">No wrap</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="78%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">以左对齐的方式来显示文本，并且不进行文本的自动回行。超出控件右边界的文本将被裁去。需要注意的是，这时即使使用转义字符序列</FONT><FONT SIZE=3>"\n"</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>也不可以强制控件文本进行换行。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：假</FONT></TD>
</TR>
<TR><TD WIDTH="22%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Simple</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="78%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">禁止设置</FONT><FONT SIZE=3>Text Align</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性和</FONT><FONT SIZE=3>No Wrap</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>样式。在该属性为真的情况下，静态文本控件中的文本不会被自动回行，也不会被剪裁。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：假</FONT></TD>
</TR>
<TR><TD WIDTH="22%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Notify</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="78%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">决定控件在被单击时是否通知父窗口。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：假</FONT></TD>
</TR>
<TR><TD WIDTH="22%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Sunken</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="78%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">使用静态文本控件看上去有下凹的感觉。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：假</FONT></TD>
</TR>
<TR><TD WIDTH="22%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Border</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="78%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">为文本控件创建边框。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：假</FONT></TD>
</TR>
</TABLE>
</P>

<FONT SIZE=3><P ALIGN="JUSTIFY">4.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>静态控件一般不用于输入，但是如果它的</FONT><FONT SIZE=3>Notify</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性设置为真，则当用户单击静态控件时，静态控件将向父窗口发送通知消息。但是，我们不可以使用前面所讲述的方法</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>即使用</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>或从上下文菜单中选择</FONT><FONT SIZE=3>Events</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>命令</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>来为静态控件添加消息处理函数。而要以手动的方式来实现这一点。下面我们结合示例</FONT><FONT SIZE=3>StaticDemo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>来说明如何为静态控件添加单击事件的命令处理程序。在进行下面的步骤之前，请确认静态控件</FONT><FONT SIZE=3>IDC_STATICDEMO</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>Notify</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性值为真。</P>
<P ALIGN="JUSTIFY">在类</FONT><FONT SIZE=3>CStaticDemoDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的定义处添加下面的命令处理函数声明：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>afx_msg void OnStaticDemo();</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">最好把成员函数</FONT><FONT SIZE=3>OnStaticDemo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的声明与其它命令处理函数的声明放在一起，但不要放到</FONT><FONT SIZE=3>//{{AFX_MSG</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>//}}AFX_MSG</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>之间。</P>
<P ALIGN="JUSTIFY">然后，打开类</FONT><FONT SIZE=3>CStaticDemoDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的实现文件</FONT><FONT SIZE=3>StaticDemoDlg.cpp</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，在宏</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>BEGIN_MESSAGE_MAP(CStaticDemoDlg, CDialog)</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">和宏</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>BEGIN_MESSAGE_MAP</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">之间添加如下的消息映射入口：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>ON_BN_CLICKED(IDC_STATICDEMO, OnStaticDemo)</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">同样，不要把手动添加的消息映射入口项放到注释</FONT><FONT SIZE=3>//{{AFX_MSG_MAP</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>//}}AFX_MSG_MAP</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>之间。</P>
<P ALIGN="JUSTIFY">手动添加成员函数</FONT><FONT SIZE=3>OnStaticDemo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>或</FONT><FONT SIZE=3>OnDoubleclickedStaticDemo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的实现代码：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CStaticDemoDlg::OnStaticDemo()</P>
<P>{</P>
<P>&#9;MessageBox("您刚才单击了“静态控件”！");</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">编译上面的示例程序，单击“静态控件”，命令处理函数</FONT><FONT SIZE=3>OnStaticDemo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>将被调用，从而弹出相应的消息框。</P>
<P ALIGN="JUSTIFY"></P>
<P ALIGN="JUSTIFY">下面我们来看一下如果在静态控件中使用图标和位图。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image414.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image414.gif" WIDTH=184 HEIGHT=106></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 39 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>使用图标代替静态控件中的文本</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">首先介绍使用图标代替文本的例子，方法如下：</P>
<P ALIGN="JUSTIFY">假设对话框类为</FONT><FONT SIZE=3>CStaticDemoDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，所需使用图标的静态控件</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为</FONT><FONT SIZE=3>IDC_STATICDEMO</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，相应的图标的</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为</FONT><FONT SIZE=3>IDR_MAINFRAME</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，则可用下面的代码代替类</FONT><FONT SIZE=3>CStaticDemoDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中的</FONT><FONT SIZE=3>// TODO</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>注释：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>// 获得指向静态控件的指针</P>
<P>CStatic *pStaticDemo=(CStatic*)GetDlgItem(IDC_STATICDEMO);</P>

<P>// 加载图标</P>
<P>HICON hIcon=AfxGetApp()-&gt;LoadIcon(IDR_MAINFRAME);</P>
<P>// 设置静态控件的样式以使得可以使用图标，并使图标显示时居中</P>
<P>pStaticDemo-&gt;ModifyStyle(0xF,SS_ICON|SS_CENTERIMAGE);</P>
<P>// 设置静态控件图标</P>
<P>pStaticDemo-&gt;SetIcon(hIcon);</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">运行该程序，显示如图</FONT><FONT SIZE=3>6.39</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
<P ALIGN="JUSTIFY">接着我们来看如何使用位图代替文本，方法如下：</P>
<P ALIGN="JUSTIFY">假设所用位图的资源</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为</FONT><FONT SIZE=3>IDB_STATICDEMO</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，其余设置如上。用以下代码来代替成员函数</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中的</FONT><FONT SIZE=3>// TODO</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>注释：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>// 获得指向静态控件的指针</P>
<P>CStatic *pStaticDemo=(CStatic*)GetDlgItem(IDC_STATICDEMO);</P>

<P>// 获得位图句柄</P>
<P>HBITMAP hBitmap=::LoadBitmap(AfxGetApp()-&gt;m_hInstance, </P>
<P>                             MAKEINTRESOURCE(IDB_STATICDEMO));</P>
<P>// 设置静态控件的样式以使得可以使用位图，并使位图在显示时居中</P>
<P>pStaticDemo-&gt;ModifyStyle(0xF,SS_BITMAP|SS_CENTERIMAGE);</P>
<P>// 设置静态控件显示时使用的位图</P>
<P>pStaticDemo-&gt;SetBitmap(hBitmap);</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">编译并运行该程序，对话框显示如图</FONT><FONT SIZE=3>6.40</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image415.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image415.gif" WIDTH=184 HEIGHT=106></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 40 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>使用位图代替文本的静态控件</P>

<UL>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"><LI>注意：</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"><LI>在使用位图的例子中，传递给</FONT><FONT SIZE=3>ModifyStyle</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>的第一个参数的值绝对不可以为</FONT><FONT SIZE=3>0</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>，否则将得不到正常的运行结果。</LI></P></UL>

</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">　</P>
</FONT><FONT FACE="仿宋_GB2312" LANG="ZH-CN" SIZE=4><P ALIGN="CENTER"><A NAME="_Toc425697421">第五节</FONT><FONT SIZE=4> </FONT><FONT FACE="仿宋_GB2312" LANG="ZH-CN" SIZE=4>文本编辑控件</A></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">静态文本控件只能用来显示文本，而不可以用来输入文本。如果需要提供输入文本的功能应该使用文本编辑控件。文本编辑控件在</FONT><FONT SIZE=3>Control</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>工具箱中对应的图标为<IMG SRC="Image370.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image370.gif" WIDTH=24 HEIGHT=22>。对于文本编辑控件，除了我们在前面所涉及的一些外，还可以设置以下的一些属性样式：</P></FONT>
<P ALIGN="RIGHT"><TABLE CELLSPACING=0 BORDER=0 CELLPADDING=7 WIDTH=538>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Align text</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">决定当</FONT><FONT SIZE=3>Multiline</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性为真时文本的对齐方式。默认值为：</FONT><FONT SIZE=3>Left</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Multi-line</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">创建一个多行文本编辑控件。当一个多行文本编辑控件具有输入焦点时，如果用户按下了</FONT><FONT SIZE=3>ENTER</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>键，以默认情况下的行为是选择对话框中的默认命令按钮，而不是向文本编辑控件中插入新行。将</FONT><FONT SIZE=3>AutoHScroll</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性或</FONT><FONT SIZE=3>Want return</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性设置为真可以将用户按下的</FONT><FONT SIZE=3>ENTER</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>键解释为插入新行，而不是选择默认命令按钮。</P>
<P ALIGN="JUSTIFY">在选择了</FONT><FONT SIZE=3>AutoHScroll</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性时，如果插入点超过了控件的右边界，多行文本编辑控件自动进行水平滚动。用户可以使用</FONT><FONT SIZE=3>ENTER</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>键来开始新行。</P>
<P ALIGN="JUSTIFY">如果没有选择</FONT><FONT SIZE=3>AutoHScroll</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性，多行文本编辑控件将视需要将文本进行自动折行。而仅当</FONT><FONT SIZE=3>Want return</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性为真时，用户才可以使用</FONT><FONT SIZE=3>ENTER</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>键来开始新行。</P>
<P ALIGN="JUSTIFY">多行文本编辑控件也可以拥有自己的滚动条。具有滚动条的编辑控件处理自己的滚动条消息，而不具有滚动条的编辑控件也可以由父窗口发送的滚动条消息。</P>
<P ALIGN="JUSTIFY">类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：假</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Number</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">用户不能输入非数字字符。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：假</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Horizontal scroll</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">为多行控件提供水平滚动条。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：假</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Auto HScroll</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">当用户输入的字符超过了编辑框的右边界时自动水平向右滚动文本。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：真</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Vertical scroll</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">为多行控件提供垂直滚动条。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：假</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Auto VScroll</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">在多行控件中，当用户在最后一行按下</FONT><FONT SIZE=3>ENTER</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>键时自动向上滚动文本</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Password</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">当用户键入时将所有字符显示为星号</FONT><FONT SIZE=3>(*)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。该属性对于多行控件不可用。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：假</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">No hide selection</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">改变当编辑框失去和重新获得焦点时文本的显示方式。如果该属性为真，在编辑框中选中的文本在任何时候都显示为选中状态</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>即反白状态</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：假</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">OEM convert</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">将键入的文本从</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>字符集转换为</FONT><FONT SIZE=3>OEM</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>字符集，再转换回</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>字符集。该操作确认应用程序在调用</FONT><FONT SIZE=3>AnsiToOem</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>函数将编辑框中的字符串转换为</FONT><FONT SIZE=3>OEM</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>字符串时进行正确的字符转换，因此该样式对于包括文件名的编辑控件特别有用。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：假</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Want return</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">指定当用户在多行编辑控件中按下</FONT><FONT SIZE=3>ENTER</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>键时插入一个回车符，否则用户按下</FONT><FONT SIZE=3>ENTER</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>将被解释为选择了对话框中的默认命令按钮。该样式对于单行编辑框控件没有任何影响。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：假</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Border</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">在编辑框边缘创建边框。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：真</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Uppercase</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">将用户在编辑框中输入的字符转换为大写。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：假</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Lowercase</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">将用户在编辑框中输入的字符转换为小写。</P>
<P ALIGN="JUSTIFY">类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：假</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Read-only</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">防止用户编辑和更改编辑框中的文本。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值：假</FONT></TD>
</TR>
</TABLE>
</P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">相比我们在前面所讲述的几个类</FONT><FONT SIZE=3>CButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>、</FONT><FONT SIZE=3>CBitmapButton</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>CStatic</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>而言，封装标准编辑控件的</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>类</FONT><FONT SIZE=3>CEdit</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>要复杂得多。表给出了在类</FONT><FONT SIZE=3>CEdit</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中定义的成员函数：</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 25 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>类</FONT><FONT FACE="Arial" SIZE=1>CEdit</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>中定义的成员函数</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=448>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CEdit</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">构造</FONT><FONT SIZE=1>CEdit</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>控件对象</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">Create</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">创建</FONT><FONT SIZE=1>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>编辑控件，并将其与</FONT><FONT SIZE=1>CEdit</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象相关联</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetSel</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得编辑控件中当前选择的开始和结束字符的位置</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ReplaceSel</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">使用特定的文本来替换编辑控件中的当前选择</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetSel</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置编辑控件中所选定的字符范围</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">Clear</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">删除编辑控件中当前选定的字符</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">Copy</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">使用</FONT><FONT SIZE=1>CF_TEXT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>格式将编辑控件中当前选定的文本复制到剪贴板</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">Cut</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">删除当前选定的字符，并将所删除的字符复制到剪贴板</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">Paste</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">将剪贴板中格式为</FONT><FONT SIZE=1>CF_TEXT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>的数据</FONT><FONT SIZE=1>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>如果有的话</FONT><FONT SIZE=1>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>插入到编辑框中的当前位置。</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">Undo</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">撤销最后一次编辑操作</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CanUndo</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">决定编辑控件的操作是否可以被撤销</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">EmptyUndoBuffer</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">重置编辑控件的</FONT><FONT SIZE=1>undo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>标志</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetModify</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">判断编辑控件中的内容是否被修改过</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetModify</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置或清除编辑控件中的修改标志</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetReadOnly</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置编辑控件的只读状态</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetPasswordChar</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">当用户输入文本时获得编辑控件中显示的密码字符</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetPasswordChar</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置或移去当用户输入文本时编辑控件中显示的密码字符</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetFirstVisibleLine</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得编辑控件中最上面的可见行</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">LineLength</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得编辑控件中一行的长度</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">LineScroll</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">滚动多行编辑控件中的文本</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">LineFromChar</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得包含指定索引字符的行的行号</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetRect</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得编辑控件的格式矩形</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">LimitText</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">限制用户可以在编辑控件中输入的文本的长度</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetLineCount</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得多行编辑控件中行的数目</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetLine</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得编辑控件中的一行文本</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">LineIndex</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得多行编辑控件中一行的字符索引</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">FmtLines</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在多行编辑控件中设置是否包含软换行符的开关</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="RIGHT">续表</FONT><FONT FACE="Arial" SIZE=1>6.25</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=448>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetTabStops</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在多行编辑控件中设置制表位</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetRect</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置多行文本编辑控件的格式矩形，并更新控件</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetRectNP</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置多行文本编辑控件的格式矩形，但不重绘控件窗口</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetHandle</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得为多行编辑控件分配的内存的句柄</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetHandle</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置供多行编辑控件使用的本地内存句柄</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetMargins</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得当前</FONT><FONT SIZE=1>CEdit</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象的左右页边距</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetMargins</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置当前</FONT><FONT SIZE=1>CEdit</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象的左右页边距</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetLimitText</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得当前</FONT><FONT SIZE=1>CEdit</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象可以包括的最大文本量</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetLimitText</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置当前</FONT><FONT SIZE=1>CEdit</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象可以包括的最大文本量</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CharFromPos</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得最接近于指定位图的行和字符的索引</FONT></TD>
</TR>
<TR><TD WIDTH="27%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">PosFromChar</FONT></TD>
<TD WIDTH="73%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得指定字符索引的左上角的坐标</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
<P ALIGN="JUSTIFY">上面的成员函数涵盖了编辑控件在使用中的很多方面，可以满足我们在很多情况下的绝大部分需要。这里要注意的是，一些</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中定义的成员函数也是很重要的，比如说我们常用</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数</FONT><FONT SIZE=3>GetWindowText</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>SetWindowText</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>来获取和设置编辑控件的文本，使用成员函数</FONT><FONT SIZE=3>GetFont</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>SetFont</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>来获取和设置编辑控件显示文本时所使用的字体。</P>
<P ALIGN="JUSTIFY">编辑控件可以向父窗口发送的通知消息也要比前面讲述的几种控件多。这些消息有：</P></FONT>
<P ALIGN="LEFT"><TABLE CELLSPACING=0 BORDER=0 CELLPADDING=7>
<TR><TD WIDTH=385 VALIGN="TOP" COLSPAN=2></TD>
<TD></TD>
</TR>
<TR><TD WIDTH=152 VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">ON_EN_CHANGE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT><FONT SIZE=3>ON_EN_ERRSPACE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH=619 VALIGN="TOP" COLSPAN=2>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">编辑控件不能按选定需要分配足够的内存</FONT></TD>
</TR>
<TR><TD WIDTH=152 VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">ON_EN_HSCROLL</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH=619 VALIGN="TOP" COLSPAN=2>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">用户单击了编辑控件中的水平滚动条。父窗口在屏幕更新前获得此消息</FONT></TD>
</TR>
<TR><TD WIDTH=152 VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">ON_EN_KILLFOCUS</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH=619 VALIGN="TOP" COLSPAN=2>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">编辑控件失去输入焦点</FONT></TD>
</TR>
<TR><TD WIDTH=152 VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">ON_EN_MAXTEXT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH=619 VALIGN="TOP" COLSPAN=2>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">当前插入内容超过了编辑控件中的指定的字符数，该插入内容已被裁剪。如果控件没有设置</FONT><FONT SIZE=3>ES_AUTOHSCROLL</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>样式，那么在插入的字符超出了编辑控件的宽度也发送该通知消息。同样，如果控件没有指定</FONT><FONT SIZE=3>ES_AUTOVSCROLL</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>样式，该通知也以插入操作导致总行数超过编辑控件的高度时发送。</FONT></TD>
</TR>
<TR><TD WIDTH=152 VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">ON_EN_SETFOCUS</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH=619 VALIGN="TOP" COLSPAN=2>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">编辑按钮获得输入焦点</FONT></TD>
</TR>
<TR><TD WIDTH=152 VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">ON_EN_UPDATE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH=619 VALIGN="TOP" COLSPAN=2>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">控件已对文本作了格式化，但尚未显示文本。通常可以处理该消息以决定是否需要对窗口的大小作改变等。</FONT></TD>
</TR>
<TR><TD WIDTH=152 VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">ON_EN_VSCROLL</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH=619 VALIGN="TOP" COLSPAN=2>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">用户单击了编辑控件的垂直滚动条。父窗口在屏幕更新前收到该消息。</FONT></TD>
</TR>
</TABLE>
</P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">示例程序</FONT><FONT SIZE=3>EditDemo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>演示了编辑控件的一般使用方法。按如下步骤创建该工程：</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">1.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>使用</FONT><FONT SIZE=3>AppWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>创建基于对话框的工程</FONT><FONT SIZE=3>EditDemo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">2.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>向工程中添加菜单资源</FONT><FONT SIZE=3>IDR_MAINMENU</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，该菜单资源包括两个顶层菜单项“文件</FONT><FONT SIZE=3>(&amp;F)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>”和“编辑</FONT><FONT SIZE=3>(&amp;E)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>”，“文件</FONT><FONT SIZE=3>(&amp;F)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>”下包括如图</FONT><FONT SIZE=3>6.41</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示的菜单命令。各菜单命令</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>不包括具有</FONT><FONT SIZE=3>Separator</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>样式的菜单项</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的资源</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>依次为</FONT><FONT SIZE=3>ID_FILE_NEW</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>ID_FILE_EXIT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。“编辑</FONT><FONT SIZE=3>(&amp;E)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>”菜单下包括如图</FONT><FONT SIZE=3>6.42</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示菜单命令。各菜单命令的资源</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>依次为</FONT><FONT SIZE=3>ID_EDIT_UNDO</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>、</FONT><FONT SIZE=3>ID_EDIT_CUT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>、</FONT><FONT SIZE=3>ID_EDIT_COPY</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>、</FONT><FONT SIZE=3>ID_EDIT_PASTE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>、</FONT><FONT SIZE=3>ID_EDIT_DEL</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>、</FONT><FONT SIZE=3>ID_EDIT_SELECTALL</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>ID_EDIT_SETFONT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image416.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image416.gif" WIDTH=57 HEIGHT=40></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 41 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>“文件”菜单下的菜单命令</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image417.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image417.gif" WIDTH=73 HEIGHT=101></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 42 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>“编辑”菜单下的菜单命令</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">3.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>按图</FONT><FONT SIZE=3>6.43</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>在应用程序的主对话框上绘制编辑框</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对应于</FONT><FONT SIZE=3>Control</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>工具箱中的图标为<IMG SRC="Image370.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image370.gif" WIDTH=24 HEIGHT=22></FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，设置其</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为</FONT><FONT SIZE=3>IDC_EDIT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，并将其</FONT><FONT SIZE=3>Multiline</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性、</FONT><FONT SIZE=3>Auto VScroll</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性和</FONT><FONT SIZE=3>Want return</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性设置为真，同时将</FONT><FONT SIZE=3>Auto HScroll</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性设置为假。这里，编辑框</FONT><FONT SIZE=3>IDC_EDIT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>在大小和位置并不重要，我们将在程序中对其进行调整。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">4.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>删除原有的“确定”按钮和“取消”按钮。接着打开对话框本身的属性对话框，从</FONT><FONT SIZE=3>Menu</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>下拉列表框中选择</FONT><FONT SIZE=3>IDR_MAINMENU</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image418.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image418.gif" WIDTH=343 HEIGHT=122></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 43 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>设置主对话框的</FONT><FONT SIZE=1>Menu</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>属性</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">5.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>在资源管理器中打开菜单资源</FONT><FONT SIZE=3>IDR_MAINMENU</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，如图</FONT><FONT SIZE=3>6.44</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示。在任一菜单项上单击鼠标右键，选择命令</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。这时</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>将弹出如图</FONT><FONT SIZE=3>6.45</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示的对话框，单击</FONT><FONT SIZE=3>Cancel</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。在</FONT><FONT SIZE=3>Object IDs</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>处选择</FONT><FONT SIZE=3>ID_FILE_EXIT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，在</FONT><FONT SIZE=3>Messages</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>处选择</FONT><FONT SIZE=3>COMMAND</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，单击</FONT><FONT SIZE=3>And function</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>按钮并接受默认的处理函数名</FONT><FONT SIZE=3>OnFileExit</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，在函数</FONT><FONT SIZE=3>OnFileExit</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中调用类</FONT><FONT SIZE=3>CDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数</FONT><FONT SIZE=3>OnCancel</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，如下面的代码所示：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CEditDemoDlg::OnFileExit() </P>
<P>{</P>
<P>&#9;// 调用基类成员函数 OnCancel 终止对话框</P>
<P>&#9;OnCancel();&#9;</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">按同样的方法为</FONT><FONT SIZE=3>ID_FILE_NEW</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>COMMAND</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>命令添加处理函数</FONT><FONT SIZE=3>OnFileNew</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>如下：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CEditDemoDlg::OnFileNew() </P>
<P>{</P>
<P>&#9;// 将编辑控件中的文本初始化为零，</P>
<P>&#9;// 并清除其撤消缓冲区。</P>
<P>&#9;CEdit *pEdit=(CEdit*)GetDlgItem(IDC_EDIT);</P>
<P>&#9;pEdit-&gt;SetWindowText("");</P>
<P>&#9;pEdit-&gt;EmptyUndoBuffer();</P>
<P>}}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image419.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image419.gif" WIDTH=520 HEIGHT=374></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 44 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>在</FONT><FONT SIZE=1>Developer Studio</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>的资源编辑器中打开菜单资源</FONT><FONT SIZE=1>IDR_MAINMENU</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">为</FONT><FONT SIZE=3>ID_EDIT_UNDO</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>COMMAND</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>命令添加处理函数</FONT><FONT SIZE=3>OnEditUndo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>如下：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CEditDemoDlg::OnEditUndo() </P>
<P>{</P>
<P>&#9;// 直接调用类 CEdit 的成员函数 Undo</P>
<P>&#9;CEdit *pEdit=(CEdit*)GetDlgItem(IDC_EDIT);</P>
<P>&#9;pEdit-&gt;Undo();</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image420.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image420.gif" WIDTH=304 HEIGHT=150></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 45 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>询问是否将菜单</FONT><FONT SIZE=1>IDR_MAINMENU</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>与某一视类相关联</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">为</FONT><FONT SIZE=3>ID_EDIT_CUT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>COMMAND</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>命令添加处理函数</FONT><FONT SIZE=3>OnEditCut</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>如下：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CEditDemoDlg::OnEditCut() </P>
<P>{</P>
<P>&#9;// 直接调用类 CEdit 的成员函数 Cut</P>
<P>&#9;((CEdit*)GetDlgItem(IDC_EDIT))-&gt;Cut();&#9;</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">为</FONT><FONT SIZE=3>ID_EDIT_COPY</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>COMMAND</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>命令添加处理函数</FONT><FONT SIZE=3>OnEditCopy</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>如下：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CEditDemoDlg::OnEditCopy() </P>
<P>{</P>
<P>&#9;// 直接调用类 CEdit 的成员函数 Copy</P>
<P>&#9;((CEdit*)GetDlgItem(IDC_EDIT))-&gt;Copy();&#9;</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">为</FONT><FONT SIZE=3>ID_EDIT_PASTE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>COMMAND</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>命令添加处理函数</FONT><FONT SIZE=3>OnEditPaste</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>如下：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CEditDemoDlg::OnEditPaste() </P>
<P>{</P>
<P>&#9;// 直接调用类 CEdit 的成员函数 Paste</P>
<P>&#9;((CEdit*)GetDlgItem(IDC_EDIT))-&gt;Paste();</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">为</FONT><FONT SIZE=3>ID_EDIT_DEL</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>COMMAND</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>命令添加处理函数</FONT><FONT SIZE=3>OnEditDel</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>如下：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CEditDemoDlg::OnEditDel() </P>
<P>{</P>
<P>&#9;// 直接调用类 CEdit 的成员函数 Clear</P>
<P>&#9;((CEdit*)GetDlgItem(IDC_EDIT))-&gt;Clear();&#9;</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">为</FONT><FONT SIZE=3>ID_EDIT_SELECT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>COMMAND</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>命令添加处理函数</FONT><FONT SIZE=3>OnEditSelectall</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>如下：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CEditDemoDlg::OnEditSelectall() </P>
<P>{</P>
<P>&#9;int nStart,nEnd;</P>
<P>&#9;// 设置选定字符的开始</P>
<P>&#9;nStart=0;</P>
<P>&#9;// 设置选定字符的结尾。函数 GetWindowTextLength 返回编辑控件中文本的长度</P>
<P>&#9;nEnd=((CEdit*)GetDlgItem(IDC_EDIT))-&gt;GetWindowTextLength();</P>
<P>&#9;// 以 nStart 和 nEnd 为参数调用类 CEdit 的成员函数 SetSel</P>
<P>&#9;((CEdit*)GetDlgItem(IDC_EDIT))-&gt;SetSel(nStart,nSel);</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">为</FONT><FONT SIZE=3>ID_EDIT_SETFONT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>COMMAND</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>命令添加处理函数</FONT><FONT SIZE=3>OnEditSetfont</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>如下：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CEditDemoDlg::OnEditSetfont() </P>
<P>{</P>
<P>&#9;LOGFONT lf;</P>
<P>&#9;static CFont font;</P>
<P>&#9;// 获得编辑框原来使用的字体信息，并使用该信息初始化字体对话框</P>
<P>&#9;CEdit *pEdit=(CEdit*)GetDlgItem(IDC_EDIT);</P>
<P>&#9;pEdit-&gt;GetFont()-&gt;GetLogFont(&amp;lf);</P>
<P>&#9;CFontDialog dlg(&amp;lf);</P>
<P>&#9;// 弹出字体对话框以供用户选择新的字体，</P>
<P>&#9;// 并在用户确认的情况下更改编辑控件所使用的字体。</P>
<P>&#9;if (dlg.DoModal()==IDOK)</P>
<P>&#9;{</P>
<P>&#9;&#9;dlg.GetCurrentFont(&amp;lf);</P>
<P>&#9;&#9;font.DeleteObject();</P>
<P>&#9;&#9;font.CreateFontIndirect(&amp;lf);</P>
<P>&#9;&#9;pEdit-&gt;SetFont(&amp;font);</P>
<P>&#9;}</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">在成员函数</FONT><FONT SIZE=3>OnEditSetfont</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中所使用的方法和技巧已在第三节的末尾讲述如何为按钮控件设置字体时进行了介绍。因此对于函数</FONT><FONT SIZE=3>OnEditSetfont</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>我们不进行详细的注解。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">6.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>考虑下面的情况：如果当前没有可供撤消的操作，“编辑”菜单下的“撤消”应该处于不可用</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>变灰</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>状态；同样的，如果当前编辑控件中没有选定任何文本，那么“剪贴”、“复制”以及“删除”命令也应该不可用；如果当前剪贴板中没有任何文本数据，“粘贴”命令应该不可用。我们通过为消息</FONT><FONT SIZE=3>WM_INITMENUPOPUP</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>添加消息处理函数来设置各菜单命令的可用状态。该消息在用户单击某菜单之后在菜单项弹出之前发送。</P>
<P ALIGN="JUSTIFY">对于类</FONT><FONT SIZE=3>CEditDemoDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，我们不能使用</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>来为消息</FONT><FONT SIZE=3>WM_INITMENUPOPUP</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>添加消息处理函数，但事实上，对话框也可以接收到消息</FONT><FONT SIZE=3>WM_INITMENUPOPUP</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。这里，我们可以手动来添加相应的消息映射项。</P>
<P ALIGN="JUSTIFY">第一步是在类</FONT><FONT SIZE=3>CEditDemoDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的定义中添加消息处理函数</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>afx_msg void OnInitMenuPopup( CMenu* pPopupMenu, UINT nIndex, BOOL bSysMenu );</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">可以把该处理函数的声明添加到由</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>生成的消息处理函数的后面。由</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>生成的消息处理函数位于两行注释标记</FONT><FONT SIZE=3>//{{AFX_MSG</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>//}}AFX_MSG</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>之间。同我们在此之前强调过的一样，不要将</FONT><FONT SIZE=3>OnInitMenuPopup</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的声明添加到两行注释之间。以后如果再遇到与此相似的情况，我们将不再强调。</P>
<P ALIGN="JUSTIFY">接着添加相应的消息映射入口，在类</FONT><FONT SIZE=3>CEditDemoDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的实现文件</FONT><FONT SIZE=3>EditEemoDlg.cpp</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中找到宏</FONT><FONT SIZE=3>BEGIN_MESSAGE_MAP(CEditDemoDlg, CDialog)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，在它之后，宏</FONT><FONT SIZE=3>END_MESSAGE_MAP</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>之前添加下面的宏代码：</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">ON_WM_INITMENUPOPUP()</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">我们仍应将上面的代码添加到注释标记</FONT><FONT SIZE=3>//{{AFX_MSG_MAP</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>//}}AFX_MSG_MAP</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>之外。同样的，以后如果再遇到这种情况我们将不再强调。</P>
<P ALIGN="JUSTIFY">最后添加函数</FONT><FONT SIZE=3>OnInitMenuPopup</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的定义：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CEditDemoDlg::OnInitMenuPopup( CMenu* pPopupMenu, UINT nIndex, BOOL bSysMenu )</P>
<P>{</P>
<P>&#9;CEdit *pEdit=(CEdit*)GetDlgItem(IDC_EDIT);</P>
<P>&#9;// 当用户单击的是窗口的控制菜单时 bSysMenu 参数为真，否则为假</P>
<P>&#9;if (!bSysMenu)</P>
<P>&#9;{</P>
<P>&#9;&#9;// 检查编辑控件是否有可撤消的操作</P>
<P>&#9;&#9;if (pEdit-&gt;CanUndo())</P>
<P>&#9;&#9;{</P>
<P>&#9;&#9;&#9;pPopupMenu-&gt;EnableMenuItem(ID_EDIT_UNDO,MF_ENABLED);</P>
<P>&#9;&#9;}</P>
<P>&#9;&#9;else</P>
<P>&#9;&#9;{</P>
<P>&#9;&#9;&#9;pPopupMenu-&gt;EnableMenuItem(ID_EDIT_UNDO,MF_GRAYED);</P>
<P>&#9;&#9;}</P>
<P>&#9;&#9;// 检查编辑控件中是否有选定的文本</P>
<P>&#9;&#9;int nStart,nEnd;</P>
<P>&#9;&#9;pEdit-&gt;GetSel(nStart,nEnd);</P>
<P>&#9;&#9;if (nStart==nEnd)</P>
<P>&#9;&#9;{</P>
<P>&#9;&#9;&#9;pPopupMenu-&gt;EnableMenuItem(ID_EDIT_CUT,MF_GRAYED);</P>
<P>&#9;&#9;&#9;pPopupMenu-&gt;EnableMenuItem(ID_EDIT_COPY,MF_GRAYED);</P>
<P>&#9;&#9;&#9;pPopupMenu-&gt;EnableMenuItem(ID_EDIT_DEL,MF_GRAYED);</P>
<P>&#9;&#9;}</P>
<P>&#9;&#9;else</P>
<P>&#9;&#9;{</P>
<P>&#9;&#9;&#9;pPopupMenu-&gt;EnableMenuItem(ID_EDIT_CUT,MF_ENABLED);</P>
<P>&#9;&#9;&#9;pPopupMenu-&gt;EnableMenuItem(ID_EDIT_COPY,MF_ENABLED);</P>
<P>&#9;&#9;&#9;pPopupMenu-&gt;EnableMenuItem(ID_EDIT_DEL,MF_ENABLED);</P>
<P>&#9;&#9;}</P>
<P>&#9;&#9;// 检查剪贴板中是否有文本格式的数据可供粘贴</P>
<P>&#9;&#9;// 该过程通过调用 Win32 API 函数 IsClipboardFormatAvailable 来实现</P>
<P>&#9;&#9;if (IsClipboardFormatAvailable(CF_TEXT))</P>
<P>&#9;&#9;{</P>
<P>&#9;&#9;&#9;pPopupMenu-&gt;EnableMenuItem(ID_EDIT_PASTE,MF_ENABLED);</P>
<P>&#9;&#9;}</P>
<P>&#9;&#9;else</P>
<P>&#9;&#9;{</P>
<P>&#9;&#9;&#9;pPopupMenu-&gt;EnableMenuItem(ID_EDIT_PASTE,MF_GRAYED);</P>
<P>&#9;&#9;}</P>
<P>&#9;}</P>
<P>}</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">7.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>最后我们希望一点，就是说用户可以改变对话框的大小，而且当用户改变对话框的大小时，编辑框自动的改变其大小以适应父窗口大小的变化。方法是为</FONT><FONT SIZE=3>WM_SIZE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>添加消息处理函数。在进行这一步操作之前，打开对话框的</FONT><FONT SIZE=3>Dialog Properties</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对话框，在</FONT><FONT SIZE=3>Styles</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>选项卡中将其</FONT><FONT SIZE=3>Border</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性设置为</FONT><FONT SIZE=3>Resizing (</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>即可以改变大小</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，同时将</FONT><FONT SIZE=3>Maximize box</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性值设置为真。然后，使用</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为消息</FONT><FONT SIZE=3>WM_SIZE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>添加消息处理函数</FONT><FONT SIZE=3>OnSize</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，其定义如下：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CEditDemoDlg::OnSize(UINT nType, int cx, int cy) </P>
<P>{</P>
<P>&#9;// 调用基类的 OnSize 成员函数</P>
<P>&#9;CDialog::OnSize(nType, cx, cy);</P>
<P>&#9;</P>
<P>&#9;CRect rect;</P>
<P>&#9;// 获得父窗口的客户区矩形</P>
<P>&#9;GetClientRect(&amp;rect);</P>
<P>&#9;CEdit *pEdit=(CEdit*)GetDlgItem(IDC_EDIT);</P>
<P>&#9;if (pEdit)</P>
<P>&#9;{</P>
<P>&#9;&#9;// 改变编辑控件的大小以适应父窗口大小的改变</P>
<P>&#9;&#9;pEdit-&gt;MoveWindow(&amp;rect);</P>
<P>&#9;}</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">由于</FONT><FONT SIZE=3>OnSize</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>会在对话框第一次显示时被调用，因此使用</FONT><FONT SIZE=3>if</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>语句检查</FONT><FONT SIZE=3>pEdit</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>是否为</FONT><FONT SIZE=3>NULL</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>是必要的。出于同样的目的，我们还需要使用下面的代码来替换成员函数</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中的</FONT><FONT SIZE=3>// TODO</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>注释：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>CRect rect;</P>
<P>GetClientRect(&amp;rect);</P>
<P>CEdit *pEdit=(CEdit*)GetDlgItem(IDC_EDIT);</P>
<P>if (pEdit)</P>
<P>{</P>
<P>&#9;pEdit-&gt;MoveWindow(&amp;rect);</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">它在对话框第一次显示时完成与上面的</FONT><FONT SIZE=3>OnSize</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数同样的操作。以保证在第一次显示对话框时编辑框控件以正确的大小进行显示。</P>
<P ALIGN="JUSTIFY">编译并运行上面的程序</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>如图</FONT><FONT SIZE=3>6.46)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，并测试其各项功能是否正常。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image421.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image421.gif" WIDTH=254 HEIGHT=214></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 46 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>示例程序</FONT><FONT SIZE=1>EditDemo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>的运行结果</P>
</FONT><FONT FACE="仿宋_GB2312" LANG="ZH-CN" SIZE=4><P ALIGN="CENTER"><A NAME="_Toc425697422">第六节</FONT><FONT SIZE=4> </FONT><FONT FACE="仿宋_GB2312" LANG="ZH-CN" SIZE=4>列表框控件</A></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">列表框控件通常用来列出一系列可供用户从中进行选择的项，这些项一般来说都在字符串的形式给出，但也可以采用其它的形式，如图形等。列表框可以只允许单一选择，也就是说用户同时只能选择所有列表项中的一项；除此之外，列表框也可以是多项选择的，用户可以在多项选择列表框中选择多于一项的列表项。当用户选择了某项时，该项被反白显示，同时列表框向父窗口发送一条通知消息。</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>类</FONT><FONT SIZE=3>CListBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>封装了</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>标准列表框控件，其成员函数</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>参见表</FONT><FONT SIZE=3>6.26)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>提供了对标准列表框的绝大多数操作。</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 26 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>在类</FONT><FONT FACE="Arial" SIZE=1>CListBox</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>中定义的成员函数</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=487>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">AddString</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">向列表框中添加字符串</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CharToItem</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">为不包含字符串的自绘制列表框提供对</FONT><FONT SIZE=1>WM_CHAR</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>的定制处理</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CListBox</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">构造一个</FONT><FONT SIZE=1>CListBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CompareItem</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">由框架调用以决定新添加的项在有序自绘制列表框中的位置</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">Create</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">创建一个</FONT><FONT SIZE=1>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>列表框控件，并将它与</FONT><FONT SIZE=1>CListBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象相关联</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">DeleteItem</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">当用户从自绘制列表框中删除一项时由框架调用</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">DeleteString</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">从列表框中删除字符串</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">Dir</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">从当前目录向列表框中添加文件名</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">DrawItem</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">当自绘列表框的可视部分改变时由框架调用</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">FindString</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在列表框中查询指定的字符串</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">FindStringExact</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">查找与指定字符串相匹配的第一个列表框字符串</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetAnchorIndex</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">返回列表框中当前“锚点”项的基于零的索引</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="RIGHT">续表</FONT><FONT FACE="Arial" SIZE=1>6.26</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=487>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetCaretIndex</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在多重选择列表框中获得当前拥有焦点矩形的项的索引</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetCount</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">返回列表框中字符串的数目</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetCurSel</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">返回列表框中当前选择字符串的基于零的索引值</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetHorizontalExtent</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">以象素为单位返回列表框横向可滚动的宽度</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetItemData</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">返回下列表框项相关联的</FONT><FONT SIZE=1>32</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>位值</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetItemDataPtr</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">返回指向列表框项的指针</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetItemHeight</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">决定列表框中项的高度</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetLocale</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得列表框使用的区域标识符</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetSel</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">返回列表框项的选定状态</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetSelItems</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">返回当前选定字符串的索引</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetSelCount</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在多重选择列表框中获得当前选定字符串的数目</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetText</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">拷贝列表框项到缓冲区</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetTextLen</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">以字节为单位返回列表框项的长度</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetTopIndex</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">返回列表框中第一个可视项的索引</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">InitStorage</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">为列表框项和字符串预先分配内存</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">InsertString</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在列表框中的指定位置插入一个字符串</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ItemFromPoint</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">返回与指定点最接近的列表框项的索引</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">MeasureItem</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">当自绘列表框创建时由框架调用以获得列表框的尺寸</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ResetContent</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">从列表框中清除所有的项</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SelectString</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">从单项选择列表框中查找并选定一个字符串</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SelItemRange</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在多重选择列表框中选中某一范围的字符串或清除某一范围的字符串的选定状态</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetAnchorIndex</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在多重选择列表框的设置扩展选定的起点</FONT><FONT SIZE=1>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>“锚点”项</FONT><FONT SIZE=1>)</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetCaretIndex</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在多重选择列表框中设置当前拥有焦点矩形的项的索引</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetColumnWidth</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置多列列表框的列宽</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetCurSel</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在列表框中选定一字符串</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetHorizontalExtent</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">以象素为单位设置列表框横向可滚动的宽度</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetItemHeight</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置列表框中项的高度</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetItemRect</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">返回列表框项当前显示的边界矩形</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetLocale</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">为列表框指定区域标识符</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="RIGHT">续表</FONT><FONT FACE="Arial" SIZE=1>6.26</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=487>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetSel</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在多重选择列表框中选定一列表框项或清除某一列表框项的选定状态</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetTabStops</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置列表框的制表位</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetTopIndex</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置列表框中第一个可视项的基于零的索引</FONT></TD>
</TR>
<TR><TD WIDTH="26%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">VKeyToItem</FONT></TD>
<TD WIDTH="74%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">为具有</FONT><FONT SIZE=1>LBS_WANTKEYBOARDINPUT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>样式的列表框提供定制的</FONT><FONT SIZE=1>WM_KEYDOWN</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>消息处理</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
<P ALIGN="JUSTIFY">以下是列表框可能向父窗口发送的通知消息及其说明：</P></FONT>
<P ALIGN="RIGHT"><TABLE CELLSPACING=0 BORDER=0 CELLPADDING=7 WIDTH=538>
<TR><TD WIDTH="32%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">ON_LBN_DLBCLK</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="68%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">用户双击了列表框中的字符串。仅当列表框具有</FONT><FONT SIZE=3>LBS_NOTIFY</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>样式时会发送该通知消息</FONT></TD>
</TR>
<TR><TD WIDTH="32%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">ON_LBN_ERRSPACE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="68%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">列表框不能按需要分配足够的内存</FONT></TD>
</TR>
<TR><TD WIDTH="32%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">ON_LBN_KILLFOCUS</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="68%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">列表框失去输入焦点</FONT></TD>
</TR>
<TR><TD WIDTH="32%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">ON_LBN_SELCANCEL</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="68%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">列表框中的当前选择被取消。仅当列表框具有</FONT><FONT SIZE=3>LBS_NOTIFY</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>样式时才会发送该通知消息</FONT></TD>
</TR>
<TR><TD WIDTH="32%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">ON_LBN_SELCHANGE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="68%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">列表框中的选择将被更新。需要注意的是，当使用成员函数</FONT><FONT SIZE=3>CListBox::SetCurSel</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>时不会发送该通知消息，同时，该消息也仅当列表框具有</FONT><FONT SIZE=3>LBS_NOTIFY</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>样式才会发送。对于多重选择列表框，当用户按下光标键时，即使所选择的内容没有改变，也会发送</FONT><FONT SIZE=3>LBN_SELCHANGE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>通知消息。</FONT></TD>
</TR>
<TR><TD WIDTH="32%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">ON_LBN_SETFOCUS</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="68%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">列表框获得输入焦点</FONT></TD>
</TR>
<TR><TD WIDTH="32%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">ON_WM_CHARTOITEM</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="68%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">不包括字符串的列表框收到</FONT><FONT SIZE=3>WM_CHAR</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>消息</FONT></TD>
</TR>
<TR><TD WIDTH="32%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">ON_WM_VKEYTOITEM</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="68%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">具有</FONT><FONT SIZE=3>LBS_WANTKEYBOARDINPUT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>样式的列表框接收到</FONT><FONT SIZE=3>WM_KEYDOWN</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>消息</FONT></TD>
</TR>
</TABLE>
</P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">在资源编辑器中，对应于列表框的</FONT><FONT SIZE=3>Control</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>工具箱图标为<IMG SRC="Image422.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image422.gif" WIDTH=24 HEIGHT=22>。在绘制列表框的同时可以在</FONT><FONT SIZE=3>Properties</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性对话框中指定其属性。除了在前面几节中所讲述的以外，我们还可以为列表框设置以下的属性，这些属性可以在</FONT><FONT SIZE=3>Styles</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>选项卡中设置。</P></FONT>
<P ALIGN="RIGHT"><TABLE CELLSPACING=0 BORDER=0 CELLPADDING=7 WIDTH=538>
<TR><TD WIDTH="23%" VALIGN="TOP" HEIGHT=23>
<FONT SIZE=3><P ALIGN="JUSTIFY">Selection</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP" HEIGHT=23>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">决定列表框的选择方式。可以设置的值如下：</P><DIR>

</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">Single</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：用户同时只能选择列表框中的一项</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">Multiple</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：用户可以同时选择多于一个的列表框项，但不可以从开始项扩展选定内容。在鼠标单击时可以使用</FONT><FONT SIZE=3>SHIFT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>键和</FONT><FONT SIZE=3>CTRL</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>键选定和取消选定，同时选定项不一定需要连续。单击或双击未选定项时将选定该项；单击或双击已选定项时将取消对该项的选定。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">Extended</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：用户可以通过拖动来扩展选定内容。用户可以鼠标和</FONT><FONT SIZE=3>SHIFT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>键和</FONT><FONT SIZE=3>CTRL</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>键进行选定或取消选定，选择成组的项或不连续的项。</P></DIR>

<P ALIGN="JUSTIFY">默认值为</FONT><FONT SIZE=3>Single</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP" HEIGHT=23>
<FONT SIZE=3><P ALIGN="JUSTIFY">Owner draw</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP" HEIGHT=23>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">控制列表框的自绘特性。可以设置的值如下：</P><DIR>

</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">No</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：关闭自绘制样式，列表框中包含的内容为字符串。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">Fixed</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：指定列表框的所有者负责绘制其内容，并且列表框中的项具有相同的高度。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">Variable</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：指定列表框的所有者负责绘制其内容，并且列表框的项具有不同的高度。</P></DIR>

<P ALIGN="JUSTIFY">当列表框创建时</FONT><FONT SIZE=3>CWnd::OnMeasureItem</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>将被调用；当列表框的可视部分改变时</FONT><FONT SIZE=3>CWnd::OnDrawItem</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>将被调用。</P>
<P ALIGN="JUSTIFY">默认值为</FONT><FONT SIZE=3>No</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP" HEIGHT=23>
<FONT SIZE=3><P ALIGN="JUSTIFY">Has strings</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP" HEIGHT=23>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">指定自绘制列表框包括由字符串组成的项。列表框为字符串维护内存和指针，因此应用程序可以使用</FONT><FONT SIZE=3>LB_GETTEXT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>消息来获得特定项的文本。在默认情况下，除了自绘制按钮以外，所有的列表框都具有该项属性。由应用程序创建的自绘制列表框可以具有或不具有该样式。</P>
<P ALIGN="JUSTIFY">该样式仅当自绘制属性被设置为</FONT><FONT SIZE=3>Fixed</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>或</FONT><FONT SIZE=3>Variable</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>时可用。如果自绘制属性被设置为</FONT><FONT SIZE=3>No</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，列表框在默认情况下包括字符串。</P>
<P ALIGN="JUSTIFY">类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP" HEIGHT=23>
<FONT SIZE=3><P ALIGN="JUSTIFY">Sort</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP" HEIGHT=23>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">以字母为序对列表框内容进行排序。</P>
<P ALIGN="JUSTIFY">类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为真</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP" HEIGHT=23>
<FONT SIZE=3><P ALIGN="JUSTIFY">Notify</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP" HEIGHT=23>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">如果列表项被单击或双击时通知父窗口。</P>
<P ALIGN="JUSTIFY">类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为真</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP" HEIGHT=23>
<FONT SIZE=3><P ALIGN="JUSTIFY">Multi-colume</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP" HEIGHT=23>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">指定多列列表框，多列列表框可以在水平方向上进行滚动。消息</FONT><FONT SIZE=3>LB_SETCOLUMNWIDTH</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>用来设置列宽。</P>
<P ALIGN="JUSTIFY">类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP" HEIGHT=23>
<FONT SIZE=3><P ALIGN="JUSTIFY">Horizontal scroll</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP" HEIGHT=23>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">创建具有水平滚动条的列表框。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP" HEIGHT=23>
<FONT SIZE=3><P ALIGN="JUSTIFY">Vertical scroll</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP" HEIGHT=23>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">创建具有垂直滚动条的列表框。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为真</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP" HEIGHT=23>
<FONT SIZE=3><P ALIGN="JUSTIFY">No redraw</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP" HEIGHT=23>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">指定当发生改变时列表框外观不进行更新。可以通过发送</FONT><FONT SIZE=3>WM_SETREDRAW</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>消息或调用</FONT><FONT SIZE=3>CWnd::SetRedraw</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>函数改变该属性。</P>
<P ALIGN="JUSTIFY">类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP" HEIGHT=23>
<FONT SIZE=3><P ALIGN="JUSTIFY">Use tabstops</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP" HEIGHT=23>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">允许列表框在绘制字符串辨认和扩展制表符。默认的制表位为</FONT><FONT SIZE=3>32</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>个对话框单位</FONT><FONT SIZE=3>(DLU)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP" HEIGHT=23>
<FONT SIZE=3><P ALIGN="JUSTIFY">Want key input</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP" HEIGHT=23>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">指定当用户有按键动作并且列表框具有输入焦点时列表框的所有者收到</FONT><FONT SIZE=3>WM_VKEYTOITEM</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>WM_CHARTOITEM</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>消息，以允许应用程序在使用键盘输入时进行特定的处理。如果列表框具有了</FONT><FONT SIZE=3>Has Strings</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>样式，列表框将接收到</FONT><FONT SIZE=3>WM_VKEYTOITEM</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>消息；如果列表框不具有</FONT><FONT SIZE=3>WM_CHARTOITEM</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>消息，则列表框将接收到</FONT><FONT SIZE=3>WM_CHARTOITEM</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>消息。</P>
<P ALIGN="JUSTIFY">类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP" HEIGHT=23>
<FONT SIZE=3><P ALIGN="JUSTIFY">Disable no scroll</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP" HEIGHT=23>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">当列表框不具有足够多的项时显示不可用的滚动条。如果不使用该属性，在这种情况下将不使用滚动条。类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP" HEIGHT=23>
<FONT SIZE=3><P ALIGN="JUSTIFY">No integral height</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP" HEIGHT=23>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">设置对话框的大小严格等于创建对话框时由应用程序指定的大小。一般情况下，</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>改变列表框的大小以使得它不会只显示某一项的一部分，即列表框客户区的高度为项高的整数倍。</P>
<P ALIGN="JUSTIFY">类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为真</FONT></TD>
</TR>
</TABLE>
</P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">下面的示例程序演示了列表框控件的使用。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">1.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>使用</FONT><FONT SIZE=3>AppWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>创建名为</FONT><FONT SIZE=3>ListBoxDemo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的基于对话框的</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>应用程序工程。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">2.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>按图</FONT><FONT SIZE=3>6.47</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>设计应用程序的主对话框。各控件的属性值如表</FONT><FONT SIZE=3>6.27</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image423.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image423.gif" WIDTH=338 HEIGHT=191></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 47 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>应用程序</FONT><FONT SIZE=1>ListBoxDemo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>的主对话框</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">3.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>单击</FONT><FONT SIZE=3>Insert</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>菜单下的</FONT><FONT SIZE=3>Resource</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>命令，插入</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为</FONT><FONT SIZE=3>IDD_INPUT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的对话框，按图</FONT><FONT SIZE=3>6.48</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>添加对话框的各个控件。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image424.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image424.gif" WIDTH=186 HEIGHT=78></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 48 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>应用程序</FONT><FONT SIZE=1>ListBoxDemo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>的</FONT><FONT SIZE=1>IDD_INPUT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对话框</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">各控件的属性如表</FONT><FONT SIZE=3>6.28</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">4.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为对话框</FONT><FONT SIZE=3>IDD_INPUT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>创建新的对话框类</FONT><FONT SIZE=3>CInputDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。方法是在资源编辑器中打开对话框</FONT><FONT SIZE=3>IDD_INPUT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，此时按下</FONT><FONT SIZE=3>Ctrl+W</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>键打开</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，由于尚没有类与对话框</FONT><FONT SIZE=3>IDD_INPUT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>相关联，因此</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>将弹出如图</FONT><FONT SIZE=3>6.49</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示的对话框，询问是否为对话框创建新的类。选择</FONT><FONT SIZE=3>Create a new class (</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>这也是默认选项</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，单击</FONT><FONT SIZE=3>OK</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，弹出如图</FONT><FONT SIZE=3>6.50</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示的</FONT><FONT SIZE=3>New class</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对话框。在</FONT><FONT SIZE=3>Name</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>处输入</FONT><FONT SIZE=3>CInputDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，其余采用默认设置，单击</FONT><FONT SIZE=3>OK</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>即为对话框</FONT><FONT SIZE=3>IDD_INPUT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>创建了新类</FONT><FONT SIZE=3>CInputDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。这时就可以使用</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>Member Variables</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>选项卡为对话框进行如表</FONT><FONT SIZE=3>6.28</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示的成员变量映射了。</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 27 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>应用程序</FONT><FONT FACE="Arial" SIZE=1>ListBoxDemo</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>主对话框各控件的属性设置</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=511>
<TR><TD WIDTH="15%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">控件类型</FONT></TD>
<TD WIDTH="30%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">资源</FONT><FONT SIZE=1>ID</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">控件标题</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">其他</FONT></TD>
</TR>
<TR><TD WIDTH="15%" VALIGN="TOP" ROWSPAN=2>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">列表框</FONT></TD>
<TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IDC_LISTSELECTABLE</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">　</TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">位于图</FONT><FONT SIZE=1>6.47</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>左边的列表框，其</FONT><FONT SIZE=1>Selection</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>属性为</FONT><FONT SIZE=1>Extended</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>。对应的</FONT><FONT SIZE=1>DDX</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>变量映射</FONT><FONT SIZE=1>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>使用</FONT><FONT SIZE=1>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>的</FONT><FONT SIZE=1>Member Vari-ables</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>选项卡进行设置</FONT><FONT SIZE=1>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>为</FONT><FONT SIZE=1>CListBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>类型变量</FONT><FONT SIZE=1>m_lsSelectable</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>。</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IDC_LISTSELECTED</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">　</TD>
<TD WIDTH="33%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">位于图</FONT><FONT SIZE=1>6.47</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>右边的列表框，其</FONT><FONT SIZE=1>Selection</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>属性为</FONT><FONT SIZE=1>Extended</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>。对应的</FONT><FONT SIZE=1>DDX</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>变量映射为</FONT><FONT SIZE=1>CListBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>类型变量</FONT><FONT SIZE=1>m_lsSelected</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>。</FONT></TD>
</TR>
<TR><TD WIDTH="15%" VALIGN="TOP" ROWSPAN=2>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">静态控件</FONT></TD>
<TD WIDTH="30%" VALIGN="TOP" ROWSPAN=2>
<FONT SIZE=1><P ALIGN="JUSTIFY">(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>无需更改</FONT><FONT SIZE=1>)</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">待选择的文件</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">　</TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">已选择的文件</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">　</TD>
</TR>
<TR><TD WIDTH="15%" VALIGN="TOP" ROWSPAN=4>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">下压按钮</FONT></TD>
<TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IDC_BTNCHANGEDIR</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">&lt;- 改变目录(&amp;H)</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">　</TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IDC_BTNADD</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">添加到(&amp;A) -&gt;</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">　</TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IDC_BTNDEL</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">删除(&amp;D) &lt;-</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">　</TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IDC_BTNCLEAR</FONT></TD>
<TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">全部清除(&amp;L) &lt;-</FONT></TD>
<TD WIDTH="33%" VALIGN="TOP">　</TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">　</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 28 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>对话框</FONT><FONT FACE="Arial" SIZE=1>IDD_INPUT</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>各控件的属性设置</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=475>
<TR><TD WIDTH="16%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">控件类型</FONT></TD>
<TD WIDTH="22%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">资源</FONT><FONT SIZE=1>ID</FONT></TD>
<TD WIDTH="18%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">控件标题</FONT></TD>
<TD WIDTH="44%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">其他</FONT></TD>
</TR>
<TR><TD WIDTH="16%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">静态控件</FONT></TD>
<TD WIDTH="22%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IDC_PROMPT</FONT></TD>
<TD WIDTH="18%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">提示字符串</FONT></TD>
<TD WIDTH="44%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">对应的</FONT><FONT SIZE=1>DDX</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>变量映射为</FONT><FONT SIZE=1>CString</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>类型成员变量</FONT><FONT SIZE=1>m_strPrompt</FONT></TD>
</TR>
<TR><TD WIDTH="16%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">编辑框</FONT></TD>
<TD WIDTH="22%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IDC_INPUT</FONT></TD>
<TD WIDTH="18%" VALIGN="TOP">　</TD>
<TD WIDTH="44%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">对应的</FONT><FONT SIZE=1>DDX</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>变量映射为</FONT><FONT SIZE=1>CString</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>类型成员变量</FONT><FONT SIZE=1>m_strInput</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
<P ALIGN="JUSTIFY">接着为类添加类型为</FONT><FONT SIZE=3>CString</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的保护成员变量</FONT><FONT SIZE=3>m_strTitle</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。然而在类</FONT><FONT SIZE=3>CInputDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中添加成员函数</FONT><FONT SIZE=3>GetInput</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的声明：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>CString GetInput(LPCTSTR lpszTitle="输入", </P>
<P>                 LPCTSTR lpszPrompt="请在下面的文本框中输入字符串: ");</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">该函数显示对话框</FONT><FONT SIZE=3>IDD_INPUT (</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>如图</FONT><FONT SIZE=3>6.51</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，并返回用户在对话框中输入的字符串，如果用户单击了输入对话框的“取消”按钮，则函数返回空字符串，参数</FONT><FONT SIZE=3>lpszTitle</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为输入对话框的标题，</FONT><FONT SIZE=3>lpszPrompt</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为输入对话框的提示字符串。其实现如下：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image425.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image425.gif" WIDTH=304 HEIGHT=150></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 49 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>询问是否为对话框</FONT><FONT SIZE=1>IDD_INPUT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>创建新类</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image426.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image426.gif" WIDTH=348 HEIGHT=289></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 50 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>为对话框</FONT><FONT SIZE=1>IDD_INPUT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>创建新类</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image427.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image427.gif" WIDTH=186 HEIGHT=78></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 51 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>输入对话框</P>
<P>CString CInputDlg::GetInput(LPCTSTR lpszTitle, LPCTSTR lpszPrompt)</P>
<P>{</P>
<P>&#9;// 设置标题字符串和提示字符串</P>
<P>&#9;m_strTitle=lpszTitle;</P>
<P>&#9;m_strPrompt=lpszPrompt;</P>
<P>&#9;// 显示输入对话框并返回用户输入的字符串</P>
<P>&#9;if (DoModal()==IDOK)</P>
<P>&#9;{</P>
<P>&#9;&#9;return m_strInput;</P>
<P>&#9;}</P>
<P>&#9;else</P>
<P>&#9;{</P>
<P>&#9;&#9;return CString("");</P>
<P>&#9;}</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">为类</FONT><FONT SIZE=3>CInputDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>重载</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>BOOL CInputDlg::OnInitDialog() </P>
<P>{</P>
<P>&#9;CDialog::OnInitDialog();</P>
<P>&#9;</P>
<P>&#9;// TODO: 在这里添加额外的初始化代码</P>
<P>&#9;SetWindowText(m_strTitle);</P>
<P>&#9;GetDlgItem(IDC_INPUT)-&gt;SetFocus();</P>
<P>&#9;</P>
<P>&#9;// 由于为控件 IDC_INPUT 设置了输入焦点，因此函数 OnInitDialog 应该返回 FALSE</P>
<P>&#9;return FALSE;</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">成员函数</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的重载版本设置输入对话框的标题文本和提示字符串。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">5.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>用下面的代码替代类</FONT><FONT SIZE=3>CListBoxDemoDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数中的</FONT><FONT SIZE=3>// TODO</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>注释：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>m_lsSelectable.ResetContent();</P>
<P>m_lsSelectable.Dir(0x17,"*.*");</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">上面的代码先调用成员函数</FONT><FONT SIZE=3>ResetContent</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>清除列表框</FONT><FONT SIZE=3>IDC_LISTSELECTABLE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中的所有项，再调用成员函数</FONT><FONT SIZE=3>Dir</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>使用当前目录下的文件名来填充该列表框。第一个参数</FONT><FONT SIZE=3>0x17</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>是文件类型屏蔽位，它等于</FONT><FONT SIZE=3>0x01|0x02|0x04|0x10</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，它包括了所有常规属性文件、只读文件、系统文件和目录名，第二个参数为所显示的文件名，在参数中可以使用通配符。</P>
<P ALIGN="JUSTIFY">为按钮</FONT><FONT SIZE=3>IDC_BTNCHANGEDIR</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>BN_CLICKED</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>命令添加下面的处理函数</FONT><FONT SIZE=3>OnBtnChangeDir</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CListBoxDemoDlg::OnBtnChangeDir() </P>
<P>{</P>
<P>&#9;CInputDlg dlg;</P>
<P>&#9;CString str=dlg.GetInput("输入目录","输入新的目录名:");</P>
<P>&#9;if (str!="" &amp;&amp; str.Left(1)!="\\")</P>
<P>&#9;{</P>
<P>&#9;&#9;str+="\\";</P>
<P>&#9;}</P>
<P>&#9;if (str!="")</P>
<P>&#9;{</P>
<P>&#9;&#9;m_lsSelectable.ResetContent();</P>
<P>&#9;&#9;int iResult=m_lsSelectable.Dir(0x17,str+"*.*");</P>
<P>&#9;&#9;if (iResult==LB_ERR)</P>
<P>&#9;&#9;{</P>
<P>&#9;&#9;&#9;MessageBox("添加文件名出错!");</P>
<P>&#9;&#9;}</P>
<P>&#9;&#9;else if (iResult==LB_ERRSPACE)</P>
<P>&#9;&#9;{</P>
<P>&#9;&#9;&#9;MessageBox("无法为列表框分配足够的内存!");</P>
<P>&#9;&#9;}</P>
<P>&#9;}</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">上面的代码首先定义一个类型为</FONT><FONT SIZE=3>CInputDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员变量，然后调用其成员函数</FONT><FONT SIZE=3>GetInput (</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>我们已在前面讨论过该成员函数</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>获得用户输入的列表目录名，如果用户输入的目录名不为空字符串，则调用类</FONT><FONT SIZE=3>CListBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数将指定目录下的文件名添加到列表框</FONT><FONT SIZE=3>IDC_LISTSELECTABLE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中，如果添加失败，则弹出相应的出错信息。</P>
<P ALIGN="JUSTIFY">为按钮</FONT><FONT SIZE=3>IDC_BTNADD</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>BN_CLICKED</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>命令添加下面的处理函数</FONT><FONT SIZE=3>OnBtnAdd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CListBoxDemoDlg::OnBtnAdd() </P>
<P>{</P>
<P>&#9;CString str;</P>
<P>&#9;for (int i=0; i&lt;m_lsSelectable.GetCount(); i++)</P>
<P>&#9;{</P>
<P>&#9;&#9;if (m_lsSelectable.GetSel(i))</P>
<P>&#9;&#9;{</P>
<P>&#9;&#9;&#9;m_lsSelectable.GetText(i, str);</P>
<P>&#9;&#9;&#9;m_lsSelected.AddString(str);</P>
<P>&#9;&#9;}</P>
<P>&#9;}</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">其中，类</FONT><FONT SIZE=3>CListBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数</FONT><FONT SIZE=3>GetCount</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>返回了列表框中项的数目，然后使用</FONT><FONT SIZE=3>GetSel</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数获得每一项的选定状态，这里要注意列表框中项的索引是基于零的。如果该项的已被选定</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>即</FONT><FONT SIZE=3>GetSel</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数返回真值</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，则使用</FONT><FONT SIZE=3>GetText</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数获得该项的文本，并将它放到</FONT><FONT SIZE=3>CString</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>类型的变量</FONT><FONT SIZE=3>str</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中，接着，调用类</FONT><FONT SIZE=3>CListBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中定义的成员函数</FONT><FONT SIZE=3>AddString</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>将字符串</FONT><FONT SIZE=3>str</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>添加到列表框</FONT><FONT SIZE=3>IDC_LISTSELECTED</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中。</P>
<P ALIGN="JUSTIFY">为按钮</FONT><FONT SIZE=3>IDC_BTNDEL</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>BN_CLICKED</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>命令添加如下的处理函数</FONT><FONT SIZE=3>OnBtnDel</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CListBoxDemoDlg::OnBtnDel() </P>
<P>{</P>
<P>&#9;for (int i=m_lsSelected.GetCount()-1; i&gt;-1; i--)</P>
<P>&#9;{</P>
<P>&#9;&#9;if (m_lsSelected.GetSel(i))</P>
<P>&#9;&#9;{</P>
<P>&#9;&#9;&#9;m_lsSelected.DeleteString(i);</P>
<P>&#9;&#9;}</P>
<P>&#9;}</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">上面的代码从最末一项开始，检查列表框</FONT><FONT SIZE=3>IDC_LISTSELECTED</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中每一项的选定状态，如果发现该项被选定，则将它从列表框中删除。从列表框中删除一项使用类</FONT><FONT SIZE=3>CListBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数</FONT><FONT SIZE=3>DeleteString</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，其参数为所删除项的索引值。</P>

<UL>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"><LI>注意：</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"><LI>我们在上面的代码中使用的</FONT><FONT SIZE=3>for</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>循环为</LI></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>for (int i=m_lsSelected.GetCount()-1; i&gt;-1; i--)</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>{</LI></P>
<P ALIGN="JUSTIFY"><LI>&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>...</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>}</LI></P></UL>
<DIR>
<DIR>

</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">而不是</P></DIR>
</DIR>


<UL>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>for (int i=0; i&lt;m_lsSelected.GetCount(); i++)</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>{</LI></P>
<P ALIGN="JUSTIFY"><LI>&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>...</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY"><LI>}</LI></P></UL>
<DIR>
<DIR>

</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">这是因为成员函数</FONT><FONT SIZE=3>DeleteString</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>的使用将导致所删除项之后的所有项的索引值发生改变，这里，如果所删除的项的下一项仍被选定的话，该项将不会被删除。与此相反，删除一项并不会导致此项之前的项的索引值发生改变，因此，从最末一项开始进行检查是可行的。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P></DIR>
</DIR>

<P ALIGN="JUSTIFY">按钮</FONT><FONT SIZE=3>IDC_BTNCLEAR</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>BN_CLICKED</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>命令的处理成员函数</FONT><FONT SIZE=3>OnBtnClear</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>具有最简单的结构，它直接调用类</FONT><FONT SIZE=3>CListBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数</FONT><FONT SIZE=3>ResetContent</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>删除列表框</FONT><FONT SIZE=3>IDC_LISTSELECTED</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中的所有项。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CListBoxDemoDlg::OnBtnClear() </P>
<P>{</P>
<P>&#9;m_lsSelected.ResetContent();&#9;</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image428.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image428.gif" WIDTH=338 HEIGHT=191></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 52 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>示例程序</FONT><FONT SIZE=1>ListBoxDemo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>的运行结果</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">编译并运行上面的示例程序，其运行结果如图</FONT><FONT SIZE=3>6.52</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示。单击“改变目录”按钮，输入一个新的目录名，查看左边列表框中项的改变情况。从左边列表框中选定若干项，单击“添加到”，将所选定的项添加到右边列表框</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>注意列表框中可以包括相同字符串的项</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。再从右边列表框中选定若干项，验证按钮“删除”和“全部清除”是否正常工作。</P>
</FONT><FONT FACE="仿宋_GB2312" LANG="ZH-CN" SIZE=4><P ALIGN="CENTER"><A NAME="_Toc425697423">第七节</FONT><FONT SIZE=4> </FONT><FONT FACE="仿宋_GB2312" LANG="ZH-CN" SIZE=4>组合框</A></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">组合框</FONT><FONT SIZE=3>(combo box)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>可以看作是一个编辑框或静态文本框与一个列表框的组合，组合框的名称也正是由此而来。当前选定的项将显示在组合框的编辑框或静态文本框中。如果组合框具有下拉列表</FONT><FONT SIZE=3>(drop-down list)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>样式，则用户可以在编辑框中键入列表框中某一项的首字母，在列表框可见时，与该首字母相匹配的最近的项将被加亮显示。</P>
<P ALIGN="JUSTIFY">组合框对应于</FONT><FONT SIZE=3>Controls</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>工具箱内的按钮为<IMG SRC="Image429.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image429.gif" WIDTH=24 HEIGHT=22>。在绘制组合框的同时可以使用控件的</FONT><FONT SIZE=3>Properties</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对话框设置控件的各种属性样式。一些样式已在前面的几节中作了介绍，因此这里不再重复，下面给出一些在前面的内容中没有进行说明的样式及其含义：</P></FONT>
<P ALIGN="RIGHT"><TABLE CELLSPACING=0 BORDER=0 CELLPADDING=7 WIDTH=538>
<TR><TD WIDTH="16%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Type</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="84%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">指定组合框的类型。可以使用的类型如下：</P><DIR>

</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">Simple</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：创建包括编辑框控件和列表框的简单组合框，其中编辑框控件用来接受用户的输入。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">Dropdown</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：创建下拉组合框。该类型与简单组合框类似。但仅当用户单击了编辑框控件部分右边的下拉箭头时组合框的列表框部分才被显示。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">Drop List</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：该类型类似于下拉样式</FONT><FONT SIZE=3>(drop-down)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，只是使用静态文本项代替编辑框控件来显示列表框中的当前选择。</P></DIR>

<P ALIGN="JUSTIFY">默认值为</FONT><FONT SIZE=3>Dropdown</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</FONT></TD>
</TR>
<TR><TD WIDTH="16%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Uppercase</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="84%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">将选择域或列表中的所有文本转换为大写。</P>
<P ALIGN="JUSTIFY">类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</FONT></TD>
</TR>
<TR><TD WIDTH="16%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">Lowercase</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="84%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">将选择域或列表中的所有文本转换为小写。</P>
<P ALIGN="JUSTIFY">类型：布尔值</FONT><FONT SIZE=3>  </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>默认值为假</FONT></TD>
</TR>
</TABLE>
</P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">与列表框不同的是，在绘制组合框的同时可以预先为组合框添加一些可选项，方法是单击</FONT><FONT SIZE=3>Properties</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对话框中的</FONT><FONT SIZE=3>Data</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>选项卡</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>如图所示</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，直接在</FONT><FONT SIZE=3>Enter listbox items</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>处键入组合框中的可选项，每一行为一个选项，使用</FONT><FONT SIZE=3>Ctrl+Enter</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>键开始新的一行。在运行时这些选项将出现在组合框的列表框中。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image430.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image430.gif" WIDTH=343 HEIGHT=122></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 53 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>为组合框预置选项</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>类</FONT><FONT SIZE=3>CComboBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>封装了</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>标准组合框，其成员函数提供了对组合框控件的常见操作的实现。表给出了对在类</FONT><FONT SIZE=3>CListBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中定义的成员函数的描述。</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 29 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>在类</FONT><FONT FACE="Arial" SIZE=1>CListBox</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>中定义的成员函数</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=499>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CComboBox</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">构造一个</FONT><FONT SIZE=1>CComboBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">Create</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">创建一个组合框并将它与</FONT><FONT SIZE=1>CComboBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象相关联</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">InitStorage</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">为组合框的列表框部分的项和字符串预先分配内存块</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetCount</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得组合框中列表框项的数目</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetCurSel</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">如果存在的话，返回组合框中列表框的当前选定项的索引</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetCurSel</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">选择组合框中列表框内的一条字符串</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetEditSel</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得组合框中编辑控件的当前选定的起始和终止字符位置</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetEditSel</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在组合框的编辑控件中选定字符</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetItemData</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置与组合框中指定项相关联的</FONT><FONT SIZE=1>32</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>位值</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetItemDataPtr</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">将与组合框中指定项相关联的</FONT><FONT SIZE=1>32</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>位值设置为指定的</FONT><FONT SIZE=1>void</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>指针</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetItemData</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得由应用程序提供的与指定组合框项相关联的</FONT><FONT SIZE=1>32</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>位值</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetItemDataPtr</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">以</FONT><FONT SIZE=1>void</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>指针的形式返回由应用程序提供的与指定组合框项相关联的</FONT><FONT SIZE=1>32</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>位值</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetTopIndex</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">返回组合框中列表框部分的第一个可视项的索引</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetTopIndex</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在组合框中的列表框部分的顶部显示指定索引对应的项</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetHorizontalExtent</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">以象素为单位指定组合框的列表框部分可以横向滚动的宽度</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetHorizontalExtent</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">以象素为单位获得组合框中列表框部分可以横向滚动的宽度</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetDroppedWidth</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">为组合框的下拉列表框部分设置最小允许宽度</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetDroppedWidth</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得组合框的下拉列表框部分的最小允许宽度</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">Clear</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">如果存在的话，删除编辑控件中当前选定的内容</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">Copy</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">如果存在的话，将当前选定以</FONT><FONT SIZE=1>CF_TEXT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>格式复制到剪贴板</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">Cut</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">如果存在的话，删除编辑控件中当前选定的内容，并将其以</FONT><FONT SIZE=1>CF_TEXT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>格式复制到剪贴板</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">Paste</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">当剪贴板包括</FONT><FONT SIZE=1>CF_TEXT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>格式的数据时，从剪贴板复制数据到编辑控件的当前插入位置</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">LimitText</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置用户可以在组合框的编辑控件中输入的文本的长度限制</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetItemHeight</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置组合框中列表项的高度或编辑控件</FONT><FONT SIZE=1>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>或静态文本控件</FONT><FONT SIZE=1>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>部分的高度</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetItemHeight</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得组合框中列表项的高度</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetLBText</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">从组合框中的列表框获取字符串</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="RIGHT">续表</FONT><FONT FACE="Arial" SIZE=1>6.29</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=499>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetLBTextLen</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得组合框的列表框中某一字符串的长度</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ShowDropDown</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">对于具有</FONT><FONT SIZE=1>CBS_DROPDOWN</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>或</FONT><FONT SIZE=1>CBS_DROPDOWNLIST</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>属性的组合框，显示或隐藏其列表框</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetDroppedControlRect</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得下拉组合框的可视</FONT><FONT SIZE=1>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>下拉</FONT><FONT SIZE=1>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>列表框的屏幕坐标</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetDroppedState</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">判断下拉组合框的列表框是否可见</FONT><FONT SIZE=1>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>处理下拉状态</FONT><FONT SIZE=1>)</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetExtendedUI</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">对于具有</FONT><FONT SIZE=1>CBS_DROPDOWN</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>或</FONT><FONT SIZE=1>CBS_DROPDOWNLIST</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>样式的组合框，选择默认用户界面或扩展用户界面</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetExtendedUI</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">判断组合框具有默认用户界面还是扩展用户界面</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetLocale</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得组合框的区域标识符</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetLocale</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置组合框的区域标识符</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">AddString</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">向组合框的列表框添加一字符串，对于具有</FONT><FONT SIZE=1>CBS_SORT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>样式的组合框，新增加的字符串将被排序并插入到合适的位置，否则将被添加到列表框框的末尾</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">DeleteString</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">从组合框的列表框中删除字符串</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">InsertString</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">向组合框的列表框中插入一字符串</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ResetContent</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">清除组合框的列表框和编辑控件中的所有内容</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">Dir</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">添加文件名列表到组合框的列表框中</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">FindString</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在组合框的列表框中查找包括指定前缀的第一个字符串</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">FindStringExact</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在组合框的列表框中查找与指定字符串匹配的字符串</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SelectString</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在组合框的列表框中查找字符串，如果找到的话，在列表框中选择该字符串，并将字符串复制到编辑控件中</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">DrawItem</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">当一个自绘制组合框的可视部分改变时由框架调用</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">MeasureItem</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">在创建自绘制组合框时，由框架调用以判断组合框的尺寸</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CompareItem</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">当将一新项插入到排序的自绘制框中时由框架调用以判断项的相对位置</FONT></TD>
</TR>
<TR><TD WIDTH="30%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">DeleteItem</FONT></TD>
<TD WIDTH="70%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">当一列表项被从自绘制组合框中删除时由框架调用</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
<P ALIGN="JUSTIFY">下面的示例程序演示了自绘制组合框的使用。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">1.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>使用</FONT><FONT SIZE=3>AppWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>创建名为</FONT><FONT SIZE=3>ComboDemo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的基于对话框的工程，按图</FONT><FONT SIZE=3>6.54</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>添加工程的主对话框</FONT><FONT SIZE=3>(IDD_COMBODEMO_DIALOG)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中的各个控件。每个控件的属性如表</FONT><FONT SIZE=3>6.30</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">2.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>在</FONT><FONT SIZE=3>ClassView</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中用鼠标右击</FONT><FONT SIZE=3>ComboDemo classes</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，选择</FONT><FONT SIZE=3>New Class</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>命令。上面的操作将弹出如图</FONT><FONT SIZE=3>6.55</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示的对话框，确认在</FONT><FONT SIZE=3>Class type</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>下拉列表框</FONT><FONT SIZE=3>[</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>注</FONT><FONT SIZE=3>] </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中选择了</FONT><FONT SIZE=3>MFC Class</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。然后在</FONT><FONT SIZE=3>Name</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>处输入新的类名</FONT><FONT SIZE=3>CClrComboBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，在</FONT><FONT SIZE=3>Base class</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>下拉列表框中选择</FONT><FONT SIZE=3>CComboBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。如果需要修改新类的头文件或实现文件的文件名，可以单击</FONT><FONT SIZE=3>Change</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>按钮，这里，我们接受默认的文件名</FONT><FONT SIZE=3>ClrComboBox.cpp</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>ClrComboBox.h</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image431.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image431.gif" WIDTH=284 HEIGHT=163></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 54 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>工程</FONT><FONT SIZE=1>ComboDemo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>的主对话框</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 30 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>对话框</FONT><FONT FACE="Arial" SIZE=1>IDD_COMBODEMO_DIALOG</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>的控件属性设置</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=351>
<TR><TD WIDTH="21%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">控件类型</FONT></TD>
<TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ID</FONT></TD>
<TD WIDTH="44%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">属性值</FONT></TD>
</TR>
<TR><TD WIDTH="21%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">组合框</FONT></TD>
<TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IDC_CLRCOMBO</FONT></TD>
<TD WIDTH="44%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">Type</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>：</FONT><FONT SIZE=1>Dropdown</P>
<P ALIGN="JUSTIFY">Owner draw</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>：</FONT><FONT SIZE=1>Fixed</P>
<P ALIGN="JUSTIFY">Sort</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>：真</P>
</FONT><FONT SIZE=1><P ALIGN="JUSTIFY">Vertical scroll</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>：真</P>
</FONT><FONT SIZE=1><P ALIGN="JUSTIFY">Has string</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>：假</FONT></TD>
</TR>
<TR><TD WIDTH="21%" VALIGN="TOP" ROWSPAN=2>
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">下压按钮</FONT></TD>
<TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IDC_ADDCLR</FONT></TD>
<TD WIDTH="44%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">Caption</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>：添加颜色</FONT><FONT SIZE=1>(&amp;A)</FONT></TD>
</TR>
<TR><TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IDC_CHGCLR</FONT></TD>
<TD WIDTH="44%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">Caption</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>：改变颜色</FONT><FONT SIZE=1>(&amp;C)</FONT></TD>
</TR>
<TR><TD WIDTH="21%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">静态控件</FONT></TD>
<TD WIDTH="35%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">IDC_STATICCLR</FONT></TD>
<TD WIDTH="44%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">Caption</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>属性值为空</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">3.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>使用</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>Message Map</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>选项卡在类</FONT><FONT SIZE=3>CClrComboBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中重载基类的</FONT><FONT SIZE=3>MeasureItem</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数，其重载版本的代码如下：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CClrComboBox::MeasureItem(LPMEASUREITEMSTRUCT lpMeasureItemStruct) </P>
<P>{</P>
<P>&#9;// 由于组合框具有 CBS_OWNERDRAWFIXED 样式，因此以 0 为参数调用成员函数</P>
<P>&#9;// GetItemHeight 获得每一项的固定高度</P>

<P>&#9;lpMeasureItemStruct-&gt;itemHeight=GetItemHeight(0);</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image432.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image432.gif" WIDTH=348 HEIGHT=312></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 55 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>从</FONT><FONT SIZE=1>CComboBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>派生新类</FONT><FONT SIZE=1>CClrComboBox</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">函数</FONT><FONT SIZE=3>MeasureItem</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>在自绘制样式的组合框创建时由框架调用。该函数将每一项的高度放入</FONT><FONT SIZE=3>MEASUREITEMSTRUCT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>结构的成员中。如果对话框以</FONT><FONT SIZE=3>CBS_OWNERDRAWVARIABLE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>样式创建，框架将为列表框中的每一项调用一次该成员函数，否则，该成员函数只被调用一次。</P>
<P ALIGN="JUSTIFY">接着，在</FONT><FONT SIZE=3>CClrComboBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的重载基类的</FONT><FONT SIZE=3>DrawItem</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数，其代码如下：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CClrComboBox::DrawItem(LPDRAWITEMSTRUCT lpDrawItemStruct) </P>
<P>{</P>
<P>&#9;CDC* pDC=CDC::FromHandle(lpDrawItemStruct-&gt;hDC);</P>
<P>&#9;COLORREF cr=(COLORREF)lpDrawItemStruct-&gt;itemData;</P>

<P>&#9;// 注意到在出错的情况下，GetCurSel 和 GetItemData 返回 CB_ERR，而常量</P>
<P>&#9;// CB_ERR 被定义为 -1，这时不应把它视为一种系统颜色。</P>
<P>&#9;if (cr==CB_ERR)</P>
<P>&#9;&#9;cr=GetSysColor(COLOR_WINDOW);</P>

<P>&#9;if (lpDrawItemStruct-&gt;itemAction &amp; ODA_DRAWENTIRE)</P>
<P>&#9;{</P>
<P>&#9;&#9;// 需要重绘整个项</P>

<P>&#9;&#9;// 以该项所对应的颜色填充整个项</P>
<P>&#9;&#9;CBrush br(cr);</P>
<P>&#9;&#9;pDC-&gt;FillRect(&amp;lpDrawItemStruct-&gt;rcItem, &amp;br);</P>

<P>&#9;&#9;// 反色居中显示该颜色的 RGB 组成</P>
<P>&#9;&#9;CString str;</P>
<P>&#9;&#9;str.Format("R: %d G: %d B: %d", GetRValue(cr), GetGValue(cr), GetBValue(cr));</P>
<P>&#9;&#9;CSize size;</P>
<P>&#9;&#9;size=pDC-&gt;GetTextExtent(str);</P>
<P>&#9;&#9;CRect rect=lpDrawItemStruct-&gt;rcItem;</P>
<P>&#9;&#9;COLORREF tcr;</P>
<P>&#9;&#9;tcr=~cr &amp; 0x00FFFFFF;  &#9;&#9;// 获得背景色的反色，不能简单的使用 ~cr</P>
<P>&#9;&#9;pDC-&gt;SetTextColor(tcr);</P>
<P>&#9;&#9;pDC-&gt;SetBkColor(cr);</P>
<P>&#9;&#9;pDC-&gt;TextOut(rect.left+(rect.Width()-size.cx)/2, </P>
<P>&#9;&#9;             rect.top+(rect.Height()-size.cy)/2, str);</P>
<P>&#9;}</P>

<P>&#9;if ((lpDrawItemStruct-&gt;itemState &amp; ODS_SELECTED) &amp;&amp;</P>
<P>&#9;&#9;(lpDrawItemStruct-&gt;itemAction &amp; (ODA_SELECT | ODA_DRAWENTIRE)))</P>
<P>&#9;{</P>
<P>&#9;&#9;// 选中状态由未选中变为选中，其边框被加亮显示</P>

<P>&#9;&#9;COLORREF crHilite=~cr &amp; 0x00FFFFFF;</P>
<P>&#9;&#9;CBrush br(crHilite);</P>
<P>&#9;&#9;pDC-&gt;FrameRect(&amp;lpDrawItemStruct-&gt;rcItem, &amp;br);</P>
<P>&#9;}</P>

<P>&#9;if (!(lpDrawItemStruct-&gt;itemState &amp; ODS_SELECTED) &amp;&amp;</P>
<P>&#9;&#9;(lpDrawItemStruct-&gt;itemAction &amp; ODA_SELECT))</P>
<P>&#9;{</P>
<P>&#9;&#9;// 选中状态由选中变为非选中，清除其边框的加亮显示</P>

<P>&#9;&#9;CBrush br(cr);</P>
<P>&#9;&#9;pDC-&gt;FrameRect(&amp;lpDrawItemStruct-&gt;rcItem, &amp;br);</P>
<P>&#9;}</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">对于自绘制组合框来说，成员函数</FONT><FONT SIZE=3>DrawItem</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>是需要重载的一个很重要的成员函数。该函数在自绘制组合框的可视部分发生改变时由框架调用。在默认情况下，该成员函数不做任何操作。其参数</FONT><FONT SIZE=3>lpDrawItemStruct</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所指向的</FONT><FONT SIZE=3>DRAWITEMSTRUCT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>结构包括了重绘制所需要的各种信息，如所需重绘的项、其设备上下文以及所执行的重绘行为等。在该成员函数终止前，应用程序应该恢复由该</FONT><FONT SIZE=3>DRAWITEMSTRUCT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>结构所提供的为该显示上下文所选定图形设备接口。</P>
<P ALIGN="JUSTIFY">由表</FONT><FONT SIZE=3>6.30</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>可知在本示例程序中所使用的自绘组合框中的可选项是有序的，而它们都是一些颜色值，框架如何知道当一个新的颜色值被添加到组合框的列表框中时，它应该处于哪个颜色值之前，哪个颜色值之后呢？这时通过调用成员函数</FONT><FONT SIZE=3>CompareItem</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数来实现的。如果在创建组合框时指定了</FONT><FONT SIZE=3>LBS_SORT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>样式，则必须重载该成员函数以提供足够的理由来帮助框架对新添加入组合框的列表框中的颜色项进行排序。这里，我们首先根据颜色亮度的大小来对颜色进行排序，对于亮度相同的颜色，我们依次以从蓝色到红色的优先级来判定其相对位置。这个操作是以下面的代码来实现的：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>int CClrComboBox::CompareItem(LPCOMPAREITEMSTRUCT lpCompareItemStruct) </P>
<P>{</P>
<P>&#9;// TODO: 添加判断指定项的排序顺序的代码</P>
<P>&#9;// 当项 1 在项 2 之前时返回 -1</P>
<P>&#9;// 当项 1 和项 2 顺序相同时返回 0</P>
<P>&#9;// 当项 1 在项 2 之后时返回 1</P>

<P>&#9;// 获得项 1 和项 2 的颜色值</P>
<P>&#9;COLORREF cr1 = (COLORREF)lpCompareItemStruct-&gt;itemData1;</P>
<P>&#9;COLORREF cr2 = (COLORREF)lpCompareItemStruct-&gt;itemData2;</P>
<P>&#9;if (cr1 == cr2)</P>
<P>&#9;{</P>
<P>&#9;&#9;// 项 1 和项 2 具有相同的颜色</P>
<P>&#9;&#9;return 0;</P>
<P>&#9;}</P>

<P>&#9;// 进行亮度比较, 亮度低的排列顺序在前</P>
<P>&#9;int intensity1 = GetRValue(cr1) + GetGValue(cr1) + GetBValue(cr1);</P>
<P>&#9;int intensity2 = GetRValue(cr2) + GetGValue(cr2) + GetBValue(cr2);</P>
<P>&#9;if (intensity1 &lt; intensity2)</P>
<P>&#9;&#9;return -1;</P>
<P>&#9;else if (intensity1 &gt; intensity2)</P>
<P>&#9;&#9;return 1;</P>

<P>&#9;// 如果亮度相同, 按颜色进行排序, (蓝色最前, 红色最后)</P>
<P>&#9;if (GetBValue(cr1) &gt; GetBValue(cr2))</P>
<P>&#9;&#9;return -1;</P>
<P>&#9;else if (GetGValue(cr1) &gt; GetGValue(cr2))</P>
<P>&#9;&#9;return -1;</P>
<P>&#9;else if (GetRValue(cr1) &gt; GetRValue(cr2))</P>
<P>&#9;&#9;return -1;</P>
<P>&#9;else</P>
<P>&#9;&#9;return 1;</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">上面的代码同时也说明了</FONT><FONT SIZE=3>CompareItem</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数的不同返回值所代表的不同含义。这里要注意的是，由于同亮度的不同颜色给人的眼睛的亮度感觉是不一样的</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>这好比人耳对声音的高频段和低频段的听觉灵敏度要比对中频段的听觉灵敏度要小一样</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，上面的排序结果给人感觉并不象我们所想象的那样，是通过颜色的亮度来进行的。但我们没有必要在这个问题上过分的纠缠而浪费时间。另外我们解释一下，为什么要使用</FONT><FONT SIZE=3>~cr &amp; 0x00FFFFFF</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>来代替</FONT><FONT SIZE=3>~cr</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。很多人会认为直接将颜色值按位取反就可以得到其对比色，但事实不是这样的。这是因为如果</FONT><FONT SIZE=3>32</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>位颜色值的高位字节不为零的话，该颜色值将不被当作一个</FONT><FONT SIZE=3>RGB</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>颜色值，而使用某个</FONT><FONT SIZE=3>32</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>位值与</FONT><FONT SIZE=3>0x00FFFFFF</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>按位与恰可以使其高位字节为零，而其它位则不变。</P>
<P ALIGN="JUSTIFY">到目前为止我们完成了自绘制组合框对应的类</FONT><FONT SIZE=3>CClrComboBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的设计，下面我们来看如何在程序中将类</FONT><FONT SIZE=3>CClrComboBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的对象与对话框模板中的现存组合框相关联，这是使用函数</FONT><FONT SIZE=3>SubclassDlgItem</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>来实现的。首先在类</FONT><FONT SIZE=3>CComboDemoDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中添加一个类型为</FONT><FONT SIZE=3>CClrComboBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员变量</FONT><FONT SIZE=3>m_clrCombo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，其访问限制在本工程中是不重要的，可以将它设置为</FONT><FONT SIZE=3>protected</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。然后，在类</FONT><FONT SIZE=3>CComboDemoDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数中的</FONT><FONT SIZE=3>// TODO</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>注释之后添加下面的一行代码，这行代码将对象</FONT><FONT SIZE=3>m_clrCombo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>与</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为</FONT><FONT SIZE=3>IDC_CLRCOMBO</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>相关联，第一个参数为控件的父窗口的指针。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>m_clrCombo.SubclassDlgItem(IDC_CLRCOMBO, this);</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">这样就可以通过</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的消息映射机制和消息传递路径在类</FONT><FONT SIZE=3>CClrComboBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中处理</FONT><FONT SIZE=3>IDC_CLRCOMBO</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中事件了。比如当组合框中的项需要重绘时，在</FONT><FONT SIZE=3>CClrComboBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中定义的</FONT><FONT SIZE=3>DrawItem</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数将被调用，在正确的绘制组合框中的内容。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">4.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>这里，我们在初始时没有为组合框添加任何选择项，用户可以单击如图</FONT><FONT SIZE=3>6.54</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的对话框中所示的“添加颜色”按钮向组合框的列表框中添加新颜色项。单击该按钮首先将弹出一个颜色选择对话框，用户如果从颜色选择对话框中选择了一种具体的颜色，该颜色将被添加到组合框的列表框中以供选择。基于这个要求，我们为按钮</FONT><FONT SIZE=3>IDC_ADDCLR</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>BN_CLICKED</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>事件添加如下的命令处理成员函数</FONT><FONT SIZE=3>OnAddClr</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CComboDemoDlg::OnAddClr() </P>
<P>{</P>
<P>&#9;CColorDialog dlg(0, 0, this);</P>
<P>&#9;int iRes=dlg.DoModal();</P>
<P>&#9;if (iRes==IDOK)</P>
<P>&#9;{</P>
<P>&#9;&#9;COLORREF cr=dlg.GetColor();</P>
<P>&#9;&#9;m_clrCombo.AddString( (LPCTSTR)cr );</P>
<P>&#9;}</P>
<P>&#9;else</P>
<P>&#9;{</P>
<P>&#9;}</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">虽然使用颜色对话框在本书的前面内容中没有讲述过，但即使是对初学者而言，上面的代码也是非常之简单的，我们这里就不过多的作讲解了。</P>
<P ALIGN="JUSTIFY">下面来看如何为“改变颜色”按钮</FONT><FONT SIZE=3>(IDC_CHGCLR)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>添加单击命令处理成员函数。我们希望用户在单击该按钮时，改变静态文本控件</FONT><FONT SIZE=3>IDC_CLRSTATIC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的颜色以反映用户所选择的颜色。如果改变静态文本控件的颜色呢？我们这里使用了将自绘制静态文本控件的办法。这并不是最简单的方法。最简单的方法是处理对话框的</FONT><FONT SIZE=3>WM_CTLCOLOR</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>消息，该消息在控件将要被重绘前发送给该控件的父窗口。这里我们舍近而求远，主要是为了附带讲述一下自绘制静态文本控件的用法，它和自绘制组合框的用法存在一些区别。但是，在资源编辑器中我们不可以设置一个静态文本控件的自绘制样式，不过这并不意味将不可以使用自绘制静态控件。方法并不复杂。首先，为静态文本控件添加自绘制样式，将下面的代码添加到类</FONT><FONT SIZE=3>CComboDemoDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数中的</FONT><FONT SIZE=3>// TODO</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>注释之后：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>GetDlgItem(IDC_CLRSTATIC)-&gt;ModifyStyle(0, SS_OWNERDRAW);</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">上面的代码将静态文本控件修改为具有</FONT><FONT SIZE=3>SS_OWNERDRAW</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>样式的自绘制静态控件。下面我们来看如何在需要的时候重新绘制静态文本控件</FONT><FONT SIZE=3>IDC_CLRSTATIC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，方法是在类</FONT><FONT SIZE=3>CComboDemoDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中为消息</FONT><FONT SIZE=3>WM_DRAWITEM</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>添加处理函数</FONT><FONT SIZE=3>OnDrawItem</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，而使用</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>很容易办到这一点。重载版本的</FONT><FONT SIZE=3>OnDrawItem</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数的定义如下：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CComboDemoDlg::OnDrawItem(int nIDCtl, LPDRAWITEMSTRUCT lpDrawItemStruct) </P>
<P>{</P>
<P>&#9;CDialog::OnDrawItem(nIDCtl, lpDrawItemStruct);</P>

<P>&#9;if (nIDCtl==IDC_CLRSTATIC)</P>
<P>&#9;{</P>
<P>&#9;&#9;CDC *pDC=CDC::FromHandle(lpDrawItemStruct-&gt;hDC);</P>
<P>&#9;&#9;CBrush br(m_crClrStatic);</P>
<P>&#9;&#9;CRect rc=lpDrawItemStruct-&gt;rcItem;</P>
<P>&#9;&#9;pDC-&gt;FillRect(&amp;rc, &amp;br);</P>
<P>&#9;}</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">要使上面的代码正常工作，我们还需要在类</FONT><FONT SIZE=3>CComboDemoDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中定义类型为</FONT><FONT SIZE=3>COLORREF</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员变量</FONT><FONT SIZE=3>m_crClrStatic</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，该成员变量保存了静态文本控件应该具有的颜色。我们注意到了在重载版本的</FONT><FONT SIZE=3>OnDrawItem</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员变量调用了基类的</FONT><FONT SIZE=3>OnDrawItem</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数，这是必要的，不要忘记在我们的对话框中还有一个自绘制组合框，基类的</FONT><FONT SIZE=3>OnDrawItem</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数调用自绘制组合框所对应的</FONT><FONT SIZE=3>CComboBox</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的派生类的</FONT><FONT SIZE=3>DrawItem</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数来绘制组合框中的各个项。</P>
<P ALIGN="JUSTIFY">下面来看下压按钮</FONT><FONT SIZE=3>IDC_CHGCLR</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的</FONT><FONT SIZE=3>BN_CLICKED</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>事件的处理函数</FONT><FONT SIZE=3>OnChgClr</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，其代码如下：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CComboDemoDlg::OnChgClr() </P>
<P>{</P>
<P>&#9;int nSel=m_clrCombo.GetCurSel();</P>
<P>&#9;COLORREF cr=(COLORREF)m_clrCombo.GetItemData(nSel);</P>

<P>&#9;if (cr!=-1)</P>
<P>&#9;{</P>
<P>&#9;&#9;DRAWITEMSTRUCT drawItemStruct;</P>
<P>&#9;&#9;drawItemStruct.CtlID=IDC_CLRSTATIC;</P>
<P>&#9;&#9;drawItemStruct.hwndItem=GetDlgItem(IDC_CLRSTATIC)-&gt;GetSafeHwnd();</P>
<P>&#9;&#9;drawItemStruct.hDC=::GetDC(drawItemStruct.hwndItem);</P>
<P>&#9;&#9;GetDlgItem(IDC_CLRSTATIC)-&gt;GetClientRect(&amp;(drawItemStruct.rcItem));</P>
<P>&#9;&#9;m_crClrStatic=cr;</P>
<P>&#9;&#9;OnDrawItem(IDC_CLRSTATIC, &amp;drawItemStruct);</P>
<P>&#9;}</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">该成员函数将当前选中的颜色值</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>如果不为</FONT><FONT SIZE=3>CB_ERR</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的话</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>放入成员变量</FONT><FONT SIZE=3>m_crClrStatic</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中，然后构造一个</FONT><FONT SIZE=3>DRAWITEMSTRUCT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>结构变量，并对它进行必要的初始化，最后调用该结构对象调用</FONT><FONT SIZE=3>OnDrawItem</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数重绘对话框。以后在需要重绘时，</FONT><FONT SIZE=3>OnDrawItem</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数会由框架自动调用。</P>
<P ALIGN="JUSTIFY">这时即可编辑并运行上面的示例程序了，其运行结果如图</FONT><FONT SIZE=3>6.56</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示。单击“添加颜色”向组合框的列表框中添加几种颜色选项，再来调试程序的各项功能是否正常。还可以不同的窗口之前进行切换和相互覆盖或移开，以观察自绘制组合框和自绘制静态文本控件是否正确的绘制了自身。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image433.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image433.gif" WIDTH=184 HEIGHT=106></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 56 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>示例程序</FONT><FONT SIZE=1>ComboDemo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>的运行结果</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">相比较标准的组合框而言，自绘制组合框要复杂得多，我们得自己考虑很多特殊的问题，但是如示例程序所示，它的确可以实现一些很有趣的特性，因此在很多程序中得到广泛的使用。而掌握了自绘制控件的使用，就可以使你所编写的应用程序界面更加的缤纷多彩，但是，要注意一切事物的使用都有一个“度”，不适宜的将应用程序的用户界面做得过分的“花哩呼哨”，很多时候只会适得其反。</P>
</FONT><FONT FACE="仿宋_GB2312" LANG="ZH-CN" SIZE=4><P ALIGN="CENTER"><A NAME="_Toc425697424">第八节</FONT><FONT SIZE=4> </FONT><FONT FACE="仿宋_GB2312" LANG="ZH-CN" SIZE=4>滚动条控件</A></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">滚动条</FONT><FONT SIZE=3>(</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>如图</FONT><FONT SIZE=3>6.57</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>所示</FONT><FONT SIZE=3>)</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>本身也可以作为一种控件，通常我们使用这种控件来进行如定位之类的操作。滚动条控件分为水平滚动条和垂直滚动条两种，它们对应于</FONT><FONT SIZE=3>Controls</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>工具箱中的图标分别为<IMG SRC="Image434.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image434.gif" WIDTH=24 HEIGHT=22>和<IMG SRC="Image435.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image435.gif" WIDTH=24 HEIGHT=22>。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image436.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image436.gif" WIDTH=257 HEIGHT=16></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 57 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>滚动条控件</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">对于滚动条控件，可以在</FONT><FONT SIZE=3>Properties</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>对话框的</FONT><FONT SIZE=3>Styles</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>选项卡内设置的属性只有一种：即</FONT><FONT SIZE=3>Align</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>属性，该属性可以为三种值之一：</FONT><FONT SIZE=3>None</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>、</FONT><FONT SIZE=3>Top/Left</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>Bottom/Right</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。其中，</FONT><FONT SIZE=3>Top/Left</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>表示将滚动条控件的左上边与由</FONT><FONT SIZE=3>CreateWindowEx</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>函数的参数定义的矩形的左上边对齐，而</FONT><FONT SIZE=3>Botton/Right</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>则表示以右下边进行对齐。该属性的默认值为</FONT><FONT SIZE=3>None</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，即不进行任何对齐操作。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>标准滚动条的行为由</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>类</FONT><FONT SIZE=3>CScrollBar</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>封装。表中列出了在类</FONT><FONT SIZE=3>CScrollBar</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中定义的成员函数及其说明。</P>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">表</FONT><FONT FACE="Arial" SIZE=1>6. 31 </FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>在类</FONT><FONT FACE="Arial" SIZE=1>CScrollBar</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=1>中定义的成员函数</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE BORDER CELLSPACING=2 BORDERCOLOR="#808080" CELLPADDING=7 WIDTH=442>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">成员函数</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">描述</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">CScrollBar</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">构造一个</FONT><FONT SIZE=1>CScrollBar</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">Create</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">创建一个</FONT><FONT SIZE=1>Windows</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>滚动条，并将它与</FONT><FONT SIZE=1>CScrollBar</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>对象相关联</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetScrollPos</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得滚动条的当前位置</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetScrollPos</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置滚动条的当前位置</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetScrollRange</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得给定滚动条的当前最大和最小位置</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetScrollRange</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置给定滚动条的当前最大和最小位置</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">ShowScrollBar</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">显示或隐藏滚动条</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">EnableScrollBar</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">允许或禁止滚动条上的一个或两个箭头</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">SetScrollInfo</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">设置关于滚动条的信息</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetScrollInfo</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得滚动条的信息</FONT></TD>
</TR>
<TR><TD WIDTH="23%" VALIGN="TOP">
<FONT SIZE=1><P ALIGN="JUSTIFY">GetScrollLimit</FONT></TD>
<TD WIDTH="77%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="JUSTIFY">获得滚动条的限制</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"></P>
<P ALIGN="JUSTIFY">当用户单击了滚动条时，父窗口将收到</FONT><FONT SIZE=3>WM_HSCROLL</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>或</FONT><FONT SIZE=3>WM_VSCROLL</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>消息，在</FONT><FONT SIZE=3>CWnd</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>类的定义了处理该消息的成员函数为</FONT><FONT SIZE=3>OnHScroll</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>和</FONT><FONT SIZE=3>OnVScroll</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。成员函数</FONT><FONT SIZE=3>OnHScroll</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的原型如下：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>afx_msg void OnHScroll( UINT nSBCode, UINT nPos, CScrollBar* pScrollBar );</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">第一个参数</FONT><FONT SIZE=3>nSBCode</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>指定如下之一的滚动条代码，这些代码代表用户所作的滚动请求：</P></FONT>
<P ALIGN="CENTER"><CENTER><TABLE CELLSPACING=0 BORDER=0 CELLPADDING=7 WIDTH=515>
<TR><TD WIDTH="31%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">SB_LEFT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="69%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">向左滚动较远距离</FONT></TD>
</TR>
<TR><TD WIDTH="31%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">SB_ENDSCROLL</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="69%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">结束滚动</FONT></TD>
</TR>
<TR><TD WIDTH="31%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">SB_LINELEFT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="69%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">向左滚动</FONT></TD>
</TR>
<TR><TD WIDTH="31%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">SB_LINERIGHT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="69%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">向右滚动</FONT></TD>
</TR>
<TR><TD WIDTH="31%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">SB_PAGELEFT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="69%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">向左滚动一页</FONT></TD>
</TR>
<TR><TD WIDTH="31%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">SB_PAGERIGHT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="69%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">向右滚动一页</FONT></TD>
</TR>
<TR><TD WIDTH="31%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">SB_RIGHT</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="69%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">向右滚动较远距离</FONT></TD>
</TR>
<TR><TD WIDTH="31%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">SB_THUMBPOSITION</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="69%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">滚动到绝对位置。当前位置由</FONT><FONT SIZE=3>nPos</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>参数指定</FONT></TD>
</TR>
<TR><TD WIDTH="31%" VALIGN="TOP">
<FONT SIZE=3><P ALIGN="JUSTIFY">SB_THUMBTRACK</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>：</FONT></TD>
<TD WIDTH="69%" VALIGN="TOP">
<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">拖动滚动条到指定的位置。当前位置由</FONT><FONT SIZE=3>nPos</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>参数指定</FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">通常，</FONT><FONT SIZE=3>SB_THUMBTRACK</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>滚动条代码由应用程序使用，以便在滚动条被拖动时给以反馈。如果应用程序滚动了由滚动条控制的内容，它必须使用</FONT><FONT SIZE=3>SetScrollPos</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>来重置滚动条的位置。</P>
<P ALIGN="JUSTIFY">传递给函数</FONT><FONT SIZE=3>OnHScroll</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的参数反映了当收到消息时由框架获得的值，如果在重载版本的函数中调用了基类的实现，该实现将使用最初由消息传递的参数，而不是向函数提供的参数。</P>
<P ALIGN="JUSTIFY">消息</FONT><FONT SIZE=3>WM_VSCROLL</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的处理函数</FONT><FONT SIZE=3>OnVScroll</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>与</FONT><FONT SIZE=3>OnHScroll</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>类似，我们这里就不再重复讲述了。下面我们来看一个例子：</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">1.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>创建一个名为</FONT><FONT SIZE=3>ScrollDemo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的基于对话框的</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>工程，按图设置对话框的各控件。其中水平滚动条控件的</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为</FONT><FONT SIZE=3>IDC_SCROLL</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，编辑框控件的</FONT><FONT SIZE=3>ID</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为</FONT><FONT SIZE=3>IDC_CURPOS</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER"><IMG SRC="Image437.gif" tppabs="http://166.111.167.223/computer/cai/visual_c++_5.0_programming/Image437.gif" WIDTH=184 HEIGHT=84></P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P ALIGN="CENTER">图</FONT><FONT SIZE=1>6. 58 </FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>示例程序</FONT><FONT SIZE=1>ScrollDemo</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1>的主对话框的设计</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">2.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>使用</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为编辑框控件</FONT><FONT SIZE=3>IDC_CURPOS</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>映射类型为</FONT><FONT SIZE=3>int</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员变量</FONT><FONT SIZE=3>m_iCurPos</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，并设置其最大值为</FONT><FONT SIZE=3>100</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，最小值为</FONT><FONT SIZE=3>-100</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">3.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>使用</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>在类</FONT><FONT SIZE=3>CScrollDemoDlg</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中为消息</FONT><FONT SIZE=3>WM_HSCROLL</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>添加处理函数</FONT><FONT SIZE=3>OnHScroll</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，其代码如下：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CScrollDemoDlg::OnHScroll(UINT nSBCode, UINT nPos, CScrollBar* pScrollBar) </P>
<P>{</P>
<P>&#9;// 获得原有的滚动条位置</P>
<P>&#9;int iPos=pScrollBar-&gt;GetScrollPos();</P>
<P>&#9;</P>
<P>&#9;// 根据不同的拖动方式设置新的滚动条位置</P>
<P>&#9;switch (nSBCode)</P>
<P>&#9;{</P>
<P>&#9;// 向右滚动一行</P>
<P>&#9;case SB_LINERIGHT:</P>
<P>&#9;&#9;iPos+=1;</P>
<P>&#9;&#9;break;</P>
<P>&#9;</P>
<P>&#9;// 向左滚动一行</P>
<P>&#9;case SB_LINELEFT:</P>
<P>&#9;&#9;iPos-=1;</P>
<P>&#9;&#9;break;</P>

<P>&#9;// 向右滚动一页</P>
<P>&#9;case SB_PAGERIGHT:</P>
<P>&#9;&#9;iPos+=10;</P>
<P>&#9;&#9;break;</P>

<P>&#9;// 向左滚动一页</P>
<P>&#9;case SB_PAGELEFT:</P>
<P>&#9;&#9;iPos-=10;</P>
<P>&#9;&#9;break;</P>

<P>&#9;// 直接拖动滚动块</P>
<P>&#9;case SB_THUMBTRACK:</P>
<P>&#9;&#9;iPos=nPos;</P>
<P>&#9;&#9;break;</P>

<P>&#9;default:</P>
<P>&#9;&#9;break;</P>
<P>&#9;}</P>

<P>&#9;// 滚动条的最大位置不超过 100, 最小位置不小于 -100</P>
<P>&#9;if (iPos&lt;-100) iPos=-100;</P>
<P>&#9;if (iPos&gt;100) iPos=100;</P>

<P>&#9;// 必须手动的更新滚动条的当前位置</P>
<P>&#9;pScrollBar-&gt;SetScrollPos(iPos);</P>
<P>&#9;</P>
<P>&#9;// 在编辑框中显示滚动条的当前位置</P>
<P>&#9;SetDlgItemInt(IDC_CURPOS, iPos);</P>

<P>&#9;CDialog::OnHScroll(nSBCode, nPos, pScrollBar);</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">上面的代码暗示了一点，这就是在被拖动时，滚动条不会自动更新其位置，我们必须自己在程序中做到这一点，即通过分析不同的滚动方式来改变并设置新的滚动条位置，上面的代码演示了这一过程。</P>
<P ALIGN="JUSTIFY">编译上面的程序代码，我们发现滚动条不能正常工作！这是因为在默认情况下，滚动条的滚动范围为从</FONT><FONT SIZE=3>0</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>到</FONT><FONT SIZE=3>0</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。这时，我们根本不可能对滚动条进行有意义的操作。因此，我们需要将下面的代码添加到</FONT><FONT SIZE=3>OnInitDialog</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>成员函数：</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>CScrollBar *pScroll=(CScrollBar*)GetDlgItem(IDC_SCROLL);</P>
<P>pScroll-&gt;SetScrollRange(-100, 100);</P>
<P>pScroll-&gt;SetScrollPos(0);</P>
<P>SetDlgItemInt(IDC_CURPOS, 0);</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">上面的代码设定了滚动条的滚动范围和默认的滚动条位置，然后，将当前滚动条位置显示在编辑控件</FONT><FONT SIZE=3>IDC_CURPOS</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>中。</P>
</FONT><FONT SIZE=3><P ALIGN="JUSTIFY">4.&#9;</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>最后我们来实现一个功能，这就是我们希望当编辑控件中的文本发生改变时，滚动条上的滑块的位置也相应的变化。要实现这一点，使用</FONT><FONT SIZE=3>ClassWizard</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>为控件</FONT><FONT SIZE=3>IDC_CURPOS</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的通知消息</FONT><FONT SIZE=3>EN_CHANGE</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>添加消息处理函数</FONT><FONT SIZE=3>OnChangeCurPos</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=1><P>void CScrollDemoDlg::OnChangeCurPos() </P>
<P>{</P>
<P>&#9;CString str;</P>
<P>&#9;GetDlgItemText(IDC_CURPOS, str);</P>
<P>&#9;str.TrimLeft();</P>
<P>&#9;str.TrimRight();</P>

<P>&#9;int iPos=0;</P>

<P>&#9;if (str!="-" &amp;&amp; str!="")</P>
<P>&#9;{</P>
<P>&#9;&#9;if (!UpdateData())</P>
<P>&#9;&#9;{</P>
<P>&#9;&#9;&#9;return;</P>
<P>&#9;&#9;}</P>
<P>&#9;&#9;iPos=m_iCurPos;</P>
<P>&#9;}</P>

<P>&#9;CScrollBar *pScroll=(CScrollBar*)GetDlgItem(IDC_SCROLL);</P>
<P>&#9;pScroll-&gt;SetScrollPos(iPos);</P>
<P>}</P>
</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY">由于需要检验用户输入数据的有效性，上面的代码比较长。首先，如果用户只输入一个负号“</FONT><FONT FACE="Symbol" SIZE=3>?</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>”或刚将原有的数据删除，此时不应该报错。这里我们可以将滚动条的位置设置为</FONT><FONT SIZE=3>0</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>。由于用户可能在所输入的数据之前或之后插入一些空格，这种情况下我们也不应该报错，因此，我们使用了一些额外的代码来避免了这种情况。最后，我们使用了</FONT><FONT SIZE=3>UpdateData</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>函数来使用控件</FONT><FONT SIZE=3>IDC_CURPOS</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的值更新成员变量</FONT><FONT SIZE=3>m_iCurPos</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>，这样的目的是便于使用</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>提供的对话框数据检验机制。但有个不好的地方是，如果用户输入的数据有错，出现的报错消息是英文的。如果我们需要的是一个完全中文化的软件，这不能不算是一个瑕疵，这时，我们应该编写自己的数据检验代码。但是在本示例程序中，并不需要这样要求，这里使用</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的对话框数据检验机制是很有效的。回到程序代码中去，如果用户在编辑控件中输入的值有效的话，使用这个值去更新滚动条的当前位置，这是通过类</FONT><FONT SIZE=3>CScrollBar</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>的成员函数</FONT><FONT SIZE=3>SetScrollPos</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>来实现的。</P>
<P ALIGN="JUSTIFY">其它的一些控件，如</FONT><FONT SIZE=3>CSliderCtrl</FONT><FONT FACE="宋体" LANG="ZH-CN" SIZE=3>类所封装的滑块控件等，与滚动条控件的使用有很大的共通之处，读者完全可以根据本章中所讲述的内容通过举一反三来用于其它的场合。</P>

<UL>
</FONT><FONT FACE="黑体" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"><LI>注意：</LI></P>
</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3><P ALIGN="JUSTIFY"><LI>由于篇幅有限，在本章中我们不打算介绍更多的</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>控件。事实上，</FONT><FONT SIZE=3>Windows</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>控件的使用的有规律可寻的。只需要弄清楚几种控件的用法，以及</FONT><FONT SIZE=3>MFC</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>在处理控件时的机制，就很容易借助</FONT><FONT SIZE=3>Visual C++</FONT><FONT FACE="楷体_GB2312" LANG="ZH-CN" SIZE=3>所提供的丰富的联机文档来学习其它控件的使用。本章中所介绍的控件，还只是所有控件中很小的一个部分，而且，即使是对所介绍的几种控件的讲述也不是面面俱到的。我们的目的不再于详尽的罗列各种控件的使用方法，而在于起到一种“抛砖引玉”的作用。</LI></P></UL>
</FONT></BODY>
</HTML>
