<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>





  
  
  
  
  
  <link rel="stylesheet" href="stdlayout.css" tppabs="http://caterpillar.onlyfun.net/Gossip/AlgorithmGossip/css/stdlayout.css" type="text/css">





  
  
  
  
  
  <link rel="stylesheet" href="print.css" tppabs="http://caterpillar.onlyfun.net/Gossip/AlgorithmGossip/css/print.css" type="text/css">





  
  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type">





  
  
  
  
  
  <title>河內塔</title>
</head>


<body>





<h3><a href="javascript:if(confirm('http://caterpillar.onlyfun.net/Gossip/index.html  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://caterpillar.onlyfun.net/Gossip/index.html'" tppabs="http://caterpillar.onlyfun.net/Gossip/index.html">From
Gossip@caterpillar</a></h3>





<h1><a href="AlgorithmGossip.htm" tppabs="http://caterpillar.onlyfun.net/Gossip/AlgorithmGossip/AlgorithmGossip.htm">Algorithm Gossip: 河內塔</a></h1>

<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">

  <tbody>

    <tr>

      <td style="width: 676px; vertical-align: top;"> 




      <h2>&nbsp;說明</h2>
      <small>


河內之塔(Towers of
Hanoi)是法國人M.Claus(Lucas)於1883年從泰國帶至法國的，河內為越戰時北越的首都，即現在的胡志明市；1883年法國數學家
Edouard
Lucas曾提及這個故事，據說創世紀時Benares有一座波羅教塔，是由三支鑽石棒（Pag）所支撐，開始時神在第一根棒上放置64個由上至下依由小
至大排列的金盤（Disc），並命令僧侶將所有的金盤從第一根石棒移至第三根石棒，且搬運過程中遵守大盤子在小盤子之下的原則，若每日僅搬一個盤子，則當
盤子全數搬運完畢之時，此塔將毀損，而也就是世界末日來臨之時。</small><br>



      <h2>解法</h2>
      <small>


如果柱子標為ABC，要由A搬至C，在只有一個盤子時，就將它直接搬至C，當有兩個盤子，就將B當作輔助柱。 </small><br>





      <div style="text-align: center;"><img style="width: 214px; height: 108px;" alt="河內塔" title="河內塔" src="hanoi-1.jpg" tppabs="http://caterpillar.onlyfun.net/Gossip/AlgorithmGossip/images/hanoi-1.jpg"> &nbsp; <img style="width: 208px; height: 112px;" alt="河內塔" title="河內塔" src="hanoi-2.jpg" tppabs="http://caterpillar.onlyfun.net/Gossip/AlgorithmGossip/images/hanoi-2.jpg"> &nbsp; <img style="width: 212px; height: 104px;" alt="河內塔" title="河內塔" src="hanoi-3.jpg" tppabs="http://caterpillar.onlyfun.net/Gossip/AlgorithmGossip/images/hanoi-3.jpg"><br>



      </div>



      <br>
      <small>


如果盤數超過2個，將第三個以下的盤子遮起來，就很簡單了，每次處理兩個盤子，也就是：A-&gt;B、A -&gt;C、B-&gt;C這三個步驟，而被遮住的部份，其實就是進入程式的遞迴處理。</small><br>



      <div style="text-align: center;"><img style="width: 242px; height: 86px;" alt="河內塔" title="河內塔" src="hanoi-4.jpg" tppabs="http://caterpillar.onlyfun.net/Gossip/AlgorithmGossip/images/hanoi-4.jpg"><br>



      <br>



      <div style="text-align: left;"><small>事實上，若有n個盤子，則移動完畢所需之次數為2^n - 1，所以當盤數為64時，則所需次數為：<br>



      <br>



2<sup>64</sup>- 1 = 18446744073709551615<br>



      <br>



為5.05390248594782e+16年，也就是約5000世紀，如果對這數字沒什麼概念，就假設每秒鐘搬一個盤子好了，也要約5850億年左右。&nbsp;</small></div>



      </div>





      <h2> 演算法</h2>





      <pre>Procedure HANOI(n, A, B, C) [<br>    IF(n == 1) [<br>        PRINT("Move sheet " n " from " A " to " C);<br>    ]<br>    ELSE [<br>        HANOI(n-1, A, C, B);<br>        PRINT("Move sheet " n " from " A " to " C);<br>        HANOI(n-1, B, A, C); <br>    ]    <br>] <br></pre>





      <h2> 實作</h2>





      <ul>
        <li> C
  </li>
      </ul>




      <pre>#include &lt;stdio.h&gt;<br><br>void hanoi(int n, char A, char B, char C) {<br>    if(n == 1) {<br>        printf("Move sheet %d from %c to %c\n", n, A, C);<br>    }<br>    else {<br>        hanoi(n-1, A, C, B);<br>        printf("Move sheet %d from %c to %c\n", n, A, C);<br>        hanoi(n-1, B, A, C);<br>    }<br>}<br><br>int main() {<br>    int n;<br>    printf("請輸入盤數：");<br>    scanf("%d", &amp;n);<br>    hanoi(n, 'A', 'B', 'C');<br>    return 0;<br>} <br></pre>





      <ul>
        <li>Java
  </li>
      </ul>




      <pre>import java.io.*;<br><br>public class Hanoi {<br>    public static void main(String args[]) throws IOException {<br>        int n;<br>        BufferedReader buf;<br>        buf = new BufferedReader(new InputStreamReader(System.in));<br><br>        System.out.print("請輸入盤數：");<br>        n = Integer.parseInt(buf.readLine());<br><br>        Hanoi hanoi = new Hanoi();<br>        hanoi.move(n, 'A', 'B', 'C');<br>    }<br><br>    public void move(int n, char a, char b, char c) {<br>        if(n == 1)<br>            System.out.println("盤 " + n + " 由 " + a + " 移至 " + c);<br>        else {<br>            move(n - 1, a, c, b);<br>            System.out.println("盤 " + n + " 由 " + a + " 移至 " + c);<br>            move(n - 1, b, a, c);<br>        }<br>    }<br>} </pre>


 </td>

      <td style="width: 250px; text-align: center; vertical-align: top;">
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      <script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>

      <br>

      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      <script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js">
      </script></td>

    </tr>

  </tbody>
</table>

<br>
<br>



<br>





</body>
</html>
