<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>





  
  
  
  
  
  <link rel="stylesheet" href="stdlayout.css" tppabs="http://caterpillar.onlyfun.net/Gossip/AlgorithmGossip/css/stdlayout.css" type="text/css">





  
  
  
  
  
  <link rel="stylesheet" href="print.css" tppabs="http://caterpillar.onlyfun.net/Gossip/AlgorithmGossip/css/print.css" type="text/css">





  
  
  
  
  
  <meta content="text/html; charset=Big5" http-equiv="content-type">





  
  
  
  
  
  <title>約瑟夫問題（Josephus Problem）</title>
</head>


<body>





<h3><a href="javascript:if(confirm('http://caterpillar.onlyfun.net/Gossip/index.html  \n\nThis file was not retrieved by Teleport Pro, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?'))window.location='http://caterpillar.onlyfun.net/Gossip/index.html'" tppabs="http://caterpillar.onlyfun.net/Gossip/index.html">From
Gossip@caterpillar</a></h3>





<h1><a href="AlgorithmGossip.htm" tppabs="http://caterpillar.onlyfun.net/Gossip/AlgorithmGossip/AlgorithmGossip.htm">Algorithm Gossip: 約瑟夫問題（Josephus Problem）</a></h1>

<table style="text-align: left; width: 946px; height: 32px;" border="0" cellpadding="0" cellspacing="0">

  <tbody>

    <tr>

      <td style="width: 676px; vertical-align: top;"> 
      <h2>說明</h2>
      <small>
據說著名猶太歷史學家 Josephus有過以下的故事：在羅馬人佔領喬塔帕特後，39
個猶太人與Josephus及他的朋友躲到一個洞中，39個猶太人決定寧願死也不要被敵人到，於是決定了一個自殺方式，41個人排成一個圓圈，由第1個人
開始報數，每報數到第3人該人就必須自殺，然後再由下一個重新報數，直到所有人都自殺身亡為止。<br>
      <br>

然而Josephus 和他的朋友並不想遵從，Josephus要他的朋友先假裝遵從，他將朋友與自己安排在第16個與第31個位置，於是逃過了這場死亡遊戲。</small>
      <br>

      <h2>解法</h2>
      <small>
約瑟夫問題可用代數分析來求解，將這個問題擴大好了，假設現在您與m個朋友不幸參與了這個遊戲，您要如何保護您與您的朋友？只要畫兩個圓圈就可以讓自己與朋友免於死亡遊戲，這兩個圓圈內圈是排列順序，而外圈是自殺順序，如下圖所示： </small><br>


      <div style="text-align: center;"><img style="width: 327px; height: 347px;" alt="約瑟夫問題" title="約瑟夫問題" src="josephusProblem-1.jpg" tppabs="http://caterpillar.onlyfun.net/Gossip/AlgorithmGossip/images/josephusProblem-1.jpg"></div>
      <small>
使用程式來求解的話，只要將陣列當作環狀來處理就可以了，在陣列中由計數1開始，每找到三個無資料區就填入一個計數，直而計數達41為止，然後將陣列由索引1開始列出，就可以得知每個位置的自殺順序，這就是約瑟夫排列，41個人而報數3的約琴夫排列如下所示：</small><br>

      <div style="margin-left: 40px;"><span style="font-weight: bold;">14 36 1 38 15 2 24 30 3 16 34 4 25 17 5 40 31 6 18 26 7 37 19 8 35 27 9 20 32 10 41 21 11 28 39 12 22 33 13 29 23</span><br>

      </div>

      <br>
      <small>
由上可知，最後一個自殺的是在第31個位置，而倒數第二個自殺的要排在第16個位置，之前的人都死光了，所以他們也就不知道約琴夫與他的朋友並沒有遵守遊戲規則了。 </small><br>

      <h2> 實作</h2>


      <ul>
        <li> C </li>
      </ul>


      <pre>#include &lt;stdio.h&gt; <br>#include &lt;stdlib.h&gt; <br>#define N 41 <br>#define M 3 <br><br>int main(void) { <br>    int man[N] = {0}; <br>    int count = 1; <br>    int i = 0, pos = -1; <br>    int alive = 0; <br><br>    while(count &lt;= N) { <br>        do { <br>            pos = (pos+1) % N;  // 環狀處理 <br>            if(man[pos] == 0) <br>                i++; <br><br>            if(i == M) {  // 報數為3了 <br>                i = 0; <br>                break; <br>            } <br>        } while(1); <br><br>        man[pos] = count; <br>        count++; <br>    } <br><br>    printf("\n約琴夫排列："); <br>    for(i = 0; i &lt; N; i++) <br>        printf("%d ", man[i]); <br><br>    printf("\n\n您想要救多少人？"); <br>    scanf("%d", &amp;alive); <br><br>    printf("\nL表示這%d人要放的位置：\n", alive); <br>    for(i = 0; i &lt; N; i++) { <br>        if(man[i] &gt; alive) <br>            printf("D"); <br>        else <br>            printf("L"); <br><br>        if((i+1) % 5 == 0) <br>            printf("  "); <br>    } <br>    printf("\n"); <br><br>    return 0; <br>} <br></pre>


      <br>


      <ul>
        <li> Java </li>
      </ul>


      <pre>public class Josephus {<br>    public static int[] arrayOfJosephus(<br>                               int number, int per) {<br>        int[] man = new int[number]; <br><br>        for(int count = 1, i = 0, pos = -1; <br>                count &lt;= number; count++) { <br>            do { <br>                pos = (pos+1) % number;  // 環狀處理 <br>                if(man[pos] == 0) <br>                    i++; <br><br>                if(i == per) {  // 報數為3了 <br>                    i = 0; <br>                    break; <br>                } <br>            } while(true); <br><br>            man[pos] = count; <br>        } <br>        <br>        return man;<br>    }<br><br>    public static void main(String[] args) {<br>        int[] man = Josephus.arrayOfJosephus(41, 3);<br>        int alive = 3;<br>        <br>        System.out.println("約琴夫排列："); <br>        for(int i = 0; i &lt; 41; i++) <br>            System.out.print(man[i] + " "); <br><br><br>        System.out.println("\nL表示3個存活的人要放的位置："); <br>        for(int i = 0; i &lt; 41; i++) { <br>            if(man[i] &gt; alive) <br>                System.out.print("D"); <br>            else <br>                System.out.print("L"); <br><br>            if((i+1) % 5 == 0) <br>                System.out.print("  "); <br>        } <br><br>        System.out.println();<br>    }<br>}</pre>
 </td>

      <td style="width: 250px; text-align: center; vertical-align: top;">
      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      <script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js">
      </script><br>

      <br>

      <script type="text/javascript"><!--
google_ad_client = "pub-9750319131714390";
google_ad_width = 160;
google_ad_height = 600;
google_ad_format = "160x600_as";
google_ad_type = "text_image";
google_ad_channel = "";
//-->
      </script>
      <script type="text/javascript" src="show_ads.js" tppabs="http://pagead2.googlesyndication.com/pagead/show_ads.js">
      </script></td>

    </tr>

  </tbody>
</table>

<br>

<br>





</body>
</html>
