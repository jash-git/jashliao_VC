<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>Operators in C and C++ - Wikipedia, the free encyclopedia</title>
<meta charset="UTF-8" />
<meta name="generator" content="MediaWiki 1.21wmf5" />
<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Operators_in_C_and_C%2B%2B&amp;action=edit" />
<link rel="edit" title="Edit this page" href="/w/index.php?title=Operators_in_C_and_C%2B%2B&amp;action=edit" />
<link rel="apple-touch-icon" href="//en.wikipedia.org/apple-touch-icon.png" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)" />
<link rel="EditURI" type="application/rsd+xml" href="//en.wikipedia.org/w/api.php?action=rsd" />
<link rel="copyright" href="//creativecommons.org/licenses/by-sa/3.0/" />
<link rel="alternate" type="application/atom+xml" title="Wikipedia Atom feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="//bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=ext.gadget.DRN-wizard%2CReferenceTooltips%2Ccharinsert%2Cteahouse%7Cext.geshi.local%7Cext.wikihiero%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmw.PopUpMediaTransform%7Cskins.vector&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="//bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}
/* cache key: enwiki:resourceloader:filter:minify-css:7:d11e4771671c2d6cdedf7c90d8131cd5 */</style>

<script src="//bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Operators_in_C_and_C++","wgTitle":"Operators in C and C++","wgCurRevisionId":526983262,"wgArticleId":585336,"wgIsArticle":true,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["All articles with unsourced statements","Articles with unsourced statements from September 2011","Articles with unsourced statements from January 2009","Articles with unsourced statements from June 2012","Use dmy dates from January 2012","C programming language","C++","Articles with example C++ code","Operators (programming)"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Operators_in_C_and_C++","wgRestrictionEdit":[],"wgRestrictionMove":[],"wgVectorEnabledModules":{"collapsiblenav":true,"collapsibletabs":true,"editwarning":true,"expandablesearch":false,"footercleanup":true,"sectioneditlinks":false,"experiments":true},"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"hidesig":true,"templateEditor":false,"templates":false,"preview":false,"previewDialog":false,"publish":false,"toc":false},"wgTrackingToken":"43f227b250a37f16e87526bdcdcae477","wgArticleFeedbackv5Permissions":{"aft-reader":true,"aft-member":false,"aft-editor":false,"aft-monitor":false,"aft-administrator":false,"aft-oversighter":false},"wgVisualEditor":{"isPageWatched":false},"wikilove-recipient":"","wikilove-anon":0,"mbEmailEnabled":true,"mbUserEmail":false,"mbIsEmailConfirmationPending":false,"wgFlaggedRevsParams":{"tags":{"status":{"levels":1,"quality":2,"pristine":3}}},"wgStableRevisionId":null,"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","Geo":{"city":"","country":""},"wgNoticeProject":"wikipedia","aftv5Article":{"id":585336,"title":"Operators in C and C++","namespace":0,"categories":["All articles with unsourced statements","Articles with example C++ code","Articles with unsourced statements from January 2009","Articles with unsourced statements from June 2012","Articles with unsourced statements from September 2011","C++","C programming language","Operators (programming)","Use dmy dates from January 2012"],"permissionLevel":"aft-reader"}});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function(){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"justify":0,"math":0,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":false,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":4,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":1,"watchdefault":0,"watchdeletion":0,"watchlistdays":3
,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"flaggedrevssimpleui":1,"flaggedrevsstable":0,"flaggedrevseditdiffs":true,"flaggedrevsviewdiffs":false,"vector-simplesearch":1,"useeditwarning":1,"vector-collapsiblenav":1,"usebetatoolbar":1,"usebetatoolbar-cgd":1,"aftv5-last-filter":null,"wikilove-enabled":1,"ep_showtoplink":false,"ep_bulkdelorgs":false,"ep_bulkdelcourses":true,"ep_showdyk":true,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"searchNs100":false,"searchNs101":false,"searchNs108":false,"searchNs109":false,"searchNs446":false,"searchNs447":false,"searchNs710":false,"searchNs711":false,
"gadget-teahouse":1,"gadget-ReferenceTooltips":1,"gadget-HotCat":1,"gadget-DRN-wizard":1,"gadget-charinsert":1,"gadget-mySandbox":1});;},{},{});mw.loader.implement("user.tokens",function(){mw.user.tokens.set({"editToken":"+\\","patrolToken":false,"watchToken":false});;},{},{});
/* cache key: enwiki:resourceloader:filter:minify-js:7:a2c45bd2a4e8615d4a66181070b51e00 */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax","ext.vector.footerCleanup","ext.wikimediaShopLink.core","ext.centralNotice.bannerController"]);
}</script>
<style type="text/css">/*<![CDATA[*/
.source-cpp {line-height: normal;}
.source-cpp li, .source-cpp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for cpp
 * CSS class: source-cpp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.cpp.source-cpp .de1, .cpp.source-cpp .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.cpp.source-cpp  {font-family:monospace;}
.cpp.source-cpp .imp {font-weight: bold; color: red;}
.cpp.source-cpp li, .cpp.source-cpp .li1 {font-weight: normal; vertical-align:top;}
.cpp.source-cpp .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.cpp.source-cpp .li2 {font-weight: bold; vertical-align:top;}
.cpp.source-cpp .kw1 {color: #0000ff;}
.cpp.source-cpp .kw2 {color: #0000ff;}
.cpp.source-cpp .kw3 {color: #0000dd;}
.cpp.source-cpp .kw4 {color: #0000ff;}
.cpp.source-cpp .co1 {color: #666666;}
.cpp.source-cpp .co2 {color: #339900;}
.cpp.source-cpp .coMULTI {color: #ff0000; font-style: italic;}
.cpp.source-cpp .es0 {color: #000099; font-weight: bold;}
.cpp.source-cpp .es1 {color: #000099; font-weight: bold;}
.cpp.source-cpp .es2 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es3 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es4 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es5 {color: #006699; font-weight: bold;}
.cpp.source-cpp .br0 {color: #008000;}
.cpp.source-cpp .sy0 {color: #008000;}
.cpp.source-cpp .sy1 {color: #000080;}
.cpp.source-cpp .sy2 {color: #000040;}
.cpp.source-cpp .sy3 {color: #000040;}
.cpp.source-cpp .sy4 {color: #008080;}
.cpp.source-cpp .st0 {color: #FF0000;}
.cpp.source-cpp .nu0 {color: #0000dd;}
.cpp.source-cpp .nu6 {color: #208080;}
.cpp.source-cpp .nu8 {color: #208080;}
.cpp.source-cpp .nu12 {color: #208080;}
.cpp.source-cpp .nu16 {color:#800080;}
.cpp.source-cpp .nu17 {color:#800080;}
.cpp.source-cpp .nu18 {color:#800080;}
.cpp.source-cpp .nu19 {color:#800080;}
.cpp.source-cpp .me1 {color: #007788;}
.cpp.source-cpp .me2 {color: #007788;}
.cpp.source-cpp .ln-xtra, .cpp.source-cpp li.ln-xtra, .cpp.source-cpp div.ln-xtra {background-color: #ffc;}
.cpp.source-cpp span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-c {line-height: normal;}
.source-c li, .source-c pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for c
 * CSS class: source-c, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.c.source-c .de1, .c.source-c .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.c.source-c  {font-family:monospace;}
.c.source-c .imp {font-weight: bold; color: red;}
.c.source-c li, .c.source-c .li1 {font-weight: normal; vertical-align:top;}
.c.source-c .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.c.source-c .li2 {font-weight: bold; vertical-align:top;}
.c.source-c .kw1 {color: #b1b100;}
.c.source-c .kw2 {color: #000000; font-weight: bold;}
.c.source-c .kw3 {color: #000066;}
.c.source-c .kw4 {color: #993333;}
.c.source-c .co1 {color: #666666; font-style: italic;}
.c.source-c .co2 {color: #339933;}
.c.source-c .coMULTI {color: #808080; font-style: italic;}
.c.source-c .es0 {color: #000099; font-weight: bold;}
.c.source-c .es1 {color: #000099; font-weight: bold;}
.c.source-c .es2 {color: #660099; font-weight: bold;}
.c.source-c .es3 {color: #660099; font-weight: bold;}
.c.source-c .es4 {color: #660099; font-weight: bold;}
.c.source-c .es5 {color: #006699; font-weight: bold;}
.c.source-c .br0 {color: #009900;}
.c.source-c .sy0 {color: #339933;}
.c.source-c .st0 {color: #ff0000;}
.c.source-c .nu0 {color: #0000dd;}
.c.source-c .nu6 {color: #208080;}
.c.source-c .nu8 {color: #208080;}
.c.source-c .nu12 {color: #208080;}
.c.source-c .nu16 {color:#800080;}
.c.source-c .nu17 {color:#800080;}
.c.source-c .nu18 {color:#800080;}
.c.source-c .nu19 {color:#800080;}
.c.source-c .me1 {color: #202020;}
.c.source-c .me2 {color: #202020;}
.c.source-c .ln-xtra, .c.source-c li.ln-xtra, .c.source-c div.ln-xtra {background-color: #ffc;}
.c.source-c span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-text {line-height: normal;}
.source-text li, .source-text pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for text
 * CSS class: source-text, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.text.source-text .de1, .text.source-text .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.text.source-text  {font-family:monospace;}
.text.source-text .imp {font-weight: bold; color: red;}
.text.source-text li, .text.source-text .li1 {font-weight: normal; vertical-align:top;}
.text.source-text .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.text.source-text .li2 {font-weight: bold; vertical-align:top;}
.text.source-text .ln-xtra, .text.source-text li.ln-xtra, .text.source-text div.ln-xtra {background-color: #ffc;}
.text.source-text span.xtra { display:block; }

/*]]>*/
</style><script src="//bits.wikimedia.org/geoiplookup"></script><link rel="dns-prefetch" href="//meta.wikimedia.org" /><!--[if lt IE 7]><style type="text/css">body{behavior:url("/w/skins-1.21wmf5/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Operators_in_C_and_C skin-vector action-view vector-animateLayout">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<!-- content -->
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<!-- sitenotice -->
			<div id="siteNotice"><!-- CentralNotice --><script>
	mw.loader.using( 'ext.centralNotice.bannerController', function() { mw.centralNotice.initialize(); } );
</script>
</div>
			<!-- /sitenotice -->
						<!-- firstHeading -->
			<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">Operators in C and C++</span></h1>
			<!-- /firstHeading -->
			<!-- bodyContent -->
			<div id="bodyContent">
								<!-- tagline -->
				<div id="siteSub">From Wikipedia, the free encyclopedia</div>
				<!-- /tagline -->
								<!-- subtitle -->
				<div id="contentSub"></div>
				<!-- /subtitle -->
																<!-- jumpto -->
				<div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-head">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<!-- /jumpto -->
								<!-- bodycontent -->
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><p>This is a list of <a href="/wiki/Operator_(programming)" title="Operator (programming)" class="mw-redirect">operators</a> in the <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> and <a href="/wiki/C%2B%2B" title="C++">C++</a> <a href="/wiki/Programming_language" title="Programming language">programming languages</a>. All the operators listed exist in C++; the fourth column "Included in C", dictates whether an operator is also present in C. Note that C does not support <a href="/wiki/Operator_overloading" title="Operator overloading">operator overloading</a>.</p>
<p>When not overloaded, for the operators <code>&amp;&amp;</code>, <code>||</code>, and <code>,</code> (the <a href="/wiki/Comma_operator" title="Comma operator">comma operator</a>), there is a <a href="/wiki/Sequence_point" title="Sequence point">sequence point</a> after the evaluation of the first operand.</p>
<p>C++ also contains the <a href="/wiki/Type_conversion" title="Type conversion">type conversion</a> operators <code>const_cast</code>, <code>static_cast</code>, <code>dynamic_cast</code>, and <code>reinterpret_cast</code> which are not listed in the table for brevity. The formatting of these operators means that their precedence level is unimportant.</p>
<p>Most of the operators available in C and C++ are also available in other languages such as <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a>, <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>, <a href="/wiki/Perl" title="Perl">Perl</a>, and <a href="/wiki/PHP" title="PHP">PHP</a> with the same precedence, associativity, and semantics.</p>
<table id="toc" class="toc">
<tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Table"><span class="tocnumber">1</span> <span class="toctext">Table</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="#Arithmetic_operators"><span class="tocnumber">1.1</span> <span class="toctext">Arithmetic operators</span></a></li>
<li class="toclevel-2 tocsection-3"><a href="#Comparison_operators.2Frelational_operators"><span class="tocnumber">1.2</span> <span class="toctext">Comparison operators/relational operators</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="#Logical_operators"><span class="tocnumber">1.3</span> <span class="toctext">Logical operators</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="#Bitwise_operators"><span class="tocnumber">1.4</span> <span class="toctext">Bitwise operators</span></a></li>
<li class="toclevel-2 tocsection-6"><a href="#Compound_assignment_operators"><span class="tocnumber">1.5</span> <span class="toctext">Compound assignment operators</span></a></li>
<li class="toclevel-2 tocsection-7"><a href="#Member_and_pointer_operators"><span class="tocnumber">1.6</span> <span class="toctext">Member and pointer operators</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="#Other_operators"><span class="tocnumber">1.7</span> <span class="toctext">Other operators</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-9"><a href="#Operator_precedence"><span class="tocnumber">2</span> <span class="toctext">Operator precedence</span></a>
<ul>
<li class="toclevel-2 tocsection-10"><a href="#Notes"><span class="tocnumber">2.1</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-2 tocsection-11"><a href="#C.2B.2B_operator_synonyms"><span class="tocnumber">2.2</span> <span class="toctext">C++ operator synonyms</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-12"><a href="#References"><span class="tocnumber">3</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-13"><a href="#External_links"><span class="tocnumber">4</span> <span class="toctext">External links</span></a></li>
</ul>
</td>
</tr>
</table>
<h2><span class="editsection">[<a href="/w/index.php?title=Operators_in_C_and_C%2B%2B&amp;action=edit&amp;section=1" title="Edit section: Table">edit</a>]</span> <span class="mw-headline" id="Table">Table</span></h2>
<p>For the purposes of this table, <code>a</code>, <code>b</code>, and <code>c</code> represent valid values (literals, values from variables, or return value), object names, or lvalues, as appropriate.</p>
<p>"Can overload" means that the operator can be overloaded in C++. "Included in C" means that the operator exists and has a semantic meaning in C (operators are not overloadable in C).</p>
<h3><span class="editsection">[<a href="/w/index.php?title=Operators_in_C_and_C%2B%2B&amp;action=edit&amp;section=2" title="Edit section: Arithmetic operators">edit</a>]</span> <span class="mw-headline" id="Arithmetic_operators">Arithmetic operators</span></h3>
<table class="wikitable" style="width:100%">
<tr>
<th colspan="2" rowspan="2">Operator name</th>
<th rowspan="2">Syntax</th>
<th rowspan="2">Can overload</th>
<th rowspan="2">Included<br />
in <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a></th>
<th colspan="2">Prototype examples (R, S, and T stand for any type(s))</th>
</tr>
<tr>
<th>As member of T</th>
<th>Outside class definitions</th>
</tr>
<tr>
<td colspan="2"><a href="/wiki/Assignment_operator_in_C%2B%2B" title="Assignment operator in C++" class="mw-redirect">Basic assignment</a></td>
<td style="text-align:center;"><code>a <b>=</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy1">=</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"><small>N/A</small></td>
</tr>
<tr>
<td colspan="2"><a href="/wiki/Addition" title="Addition">Addition</a></td>
<td style="text-align:center;"><code>a <b>+</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy2">+</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy2">+</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2"><a href="/wiki/Subtraction" title="Subtraction">Subtraction</a></td>
<td style="text-align:center;"><code>a <b>-</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy2">-</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy2">-</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2"><a href="/wiki/Unary_operation" title="Unary operation">Unary</a> plus (<a href="/wiki/Type_conversion#Type_promotion" title="Type conversion">integer promotion</a>)</td>
<td style="text-align:center;"><code><b>+</b>a</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy2">+</span><span class="br0">(</span><span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy2">+</span><span class="br0">(</span>S a<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2">Unary minus (<a href="/wiki/Additive_inverse" title="Additive inverse">additive inverse</a>)</td>
<td style="text-align:center;"><code><b>-</b>a</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy2">-</span><span class="br0">(</span><span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy2">-</span><span class="br0">(</span>S a<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2"><a href="/wiki/Multiplication" title="Multiplication">Multiplication</a></td>
<td style="text-align:center;"><code>a <b>*</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy2">*</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy2">*</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2"><a href="/wiki/Division_(mathematics)" title="Division (mathematics)">Division</a></td>
<td style="text-align:center;"><code>a <b>/</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy2">/</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy2">/</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2"><a href="/wiki/Modulo_operation" title="Modulo operation">Modulo</a> (integer remainder)<sup id="cite_ref-modulo_1-0" class="reference"><a href="#cite_note-modulo-1"><span>[</span>note 1<span>]</span></a></sup></td>
<td style="text-align:center;"><code>a <b>%</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy2">%</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy2">%</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td width="16%" rowspan="3"><a href="/wiki/Increment_and_decrement_operators" title="Increment and decrement operators">Increment</a></td>
<td width="10%">Prefix</td>
<td width="8%" align="center"><code><b>++</b>a</code></td>
<td width="8%" style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td width="8%" style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td width="25%"><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy2">++</span><span class="br0">(</span><span class="br0">)</span><span class="sy4">;</span></span></td>
<td width="25%"><span class="mw-geshi cpp source-cpp">R operator <span class="sy2">++</span><span class="br0">(</span>S a<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td rowspan="2">Suffix</td>
<td rowspan="2" style="text-align:center;"><code>a<b>++</b></code></td>
<td rowspan="2" style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td rowspan="2" style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy2">++</span><span class="br0">(</span><span class="kw4">int</span><span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy2">++</span><span class="br0">(</span>S a, <span class="kw4">int</span><span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2" style="font-size:smaller;">Note: <a href="/wiki/C%2B%2B" title="C++">C++</a> uses the unnamed dummy-parameter <span class="mw-geshi cpp source-cpp"><span class="kw4">int</span></span> to differentiate between prefix and suffix increment operators.</td>
</tr>
<tr>
<td rowspan="3"><a href="/wiki/Increment_and_decrement_operators" title="Increment and decrement operators">Decrement</a></td>
<td>Prefix</td>
<td style="text-align:center;"><code><b>--</b>a</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy2">--</span><span class="br0">(</span><span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy2">--</span><span class="br0">(</span>S a<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td rowspan="2">Suffix</td>
<td rowspan="2" style="text-align:center;"><code>a<b>--</b></code></td>
<td rowspan="2" style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td rowspan="2" style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy2">--</span><span class="br0">(</span><span class="kw4">int</span><span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy2">--</span><span class="br0">(</span>S a, <span class="kw4">int</span><span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2" style="font-size:smaller;">Note: <a href="/wiki/C%2B%2B" title="C++">C++</a> uses the unnamed dummy-parameter <span class="mw-geshi cpp source-cpp"><span class="kw4">int</span></span> to differentiate between prefix and suffix decrement operators.</td>
</tr>
</table>
<h3><span class="editsection">[<a href="/w/index.php?title=Operators_in_C_and_C%2B%2B&amp;action=edit&amp;section=3" title="Edit section: Comparison operators/relational operators">edit</a>]</span> <span class="mw-headline" id="Comparison_operators.2Frelational_operators">Comparison operators/relational operators</span></h3>
<table class="wikitable" style="width:100%">
<tr>
<th colspan="2" rowspan="2">&#160;&#160;&#160;Operator&#160;name&#160;&#160;&#160;&#160;</th>
<th rowspan="2">&#160;Syntax&#160;</th>
<th rowspan="2">Can overload</th>
<th rowspan="2">Included<br />
in <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a></th>
<th colspan="2">Prototype examples (R, S, and T stand for any type(s))</th>
</tr>
<tr>
<th>As member of T</th>
<th>Outside class definitions</th>
</tr>
<tr>
<td width="26%" colspan="2">Equal to</td>
<td width="8%" align="center"><code>a <b>==</b> b</code></td>
<td width="8%" style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td width="8%" style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td width="25%"><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy1">==</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td width="25%"><span class="mw-geshi cpp source-cpp">R operator <span class="sy1">==</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2">Not equal to</td>
<td style="text-align:center;"><code>a <b>!=</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy3">!</span><span class="sy1">=</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy3">!</span><span class="sy1">=</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2">Greater than</td>
<td style="text-align:center;"><code>a <b>&gt;</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy1">&gt;</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy1">&gt;</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2">Less than</td>
<td style="text-align:center;"><code>a <b>&lt;</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy1">&lt;</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy1">&lt;</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2">Greater than or equal to</td>
<td style="text-align:center;"><code>a <b>&gt;=</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy1">&gt;=</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy1">&gt;=</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2">Less than or equal to</td>
<td style="text-align:center;"><code>a <b>&lt;=</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy1">&lt;=</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy1">&lt;=</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
</table>
<h3><span class="editsection">[<a href="/w/index.php?title=Operators_in_C_and_C%2B%2B&amp;action=edit&amp;section=4" title="Edit section: Logical operators">edit</a>]</span> <span class="mw-headline" id="Logical_operators">Logical operators</span></h3>
<table class="wikitable" style="width:100%">
<tr>
<th colspan="2" rowspan="2">Operator name</th>
<th rowspan="2">&#160;&#160;Syntax&#160;&#160;</th>
<th rowspan="2">Can overload</th>
<th rowspan="2">Included<br />
in <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a></th>
<th colspan="2">Prototype examples (R, S, T stand for any type(s))</th>
</tr>
<tr>
<th>As member of T</th>
<th>Outside class definitions</th>
</tr>
<tr>
<td width="26%" colspan="2"><a href="/wiki/Negation" title="Negation">Logical negation (NOT)</a></td>
<td width="8%" align="center"><code><b>!</b>a</code></td>
<td width="8%" style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td width="8%" style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td width="25%"><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy3">!</span><span class="br0">(</span><span class="br0">)</span><span class="sy4">;</span></span></td>
<td width="25%"><span class="mw-geshi cpp source-cpp">R operator <span class="sy3">!</span><span class="br0">(</span>S a<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2"><a href="/wiki/Logical_conjunction" title="Logical conjunction">Logical AND</a></td>
<td style="text-align:center;"><code>a <b>&amp;&amp;</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy3">&amp;&amp;</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy3">&amp;&amp;</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2"><a href="/wiki/Logical_disjunction" title="Logical disjunction">Logical OR</a></td>
<td style="text-align:center;"><code>a <b>||</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><code><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy3">||</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></code></td>
<td><code><span class="mw-geshi cpp source-cpp">R operator <span class="sy3">||</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></code></td>
</tr>
</table>
<h3><span class="editsection">[<a href="/w/index.php?title=Operators_in_C_and_C%2B%2B&amp;action=edit&amp;section=5" title="Edit section: Bitwise operators">edit</a>]</span> <span class="mw-headline" id="Bitwise_operators">Bitwise operators</span></h3>
<table class="wikitable" style="width:100%">
<tr>
<th colspan="2" rowspan="2">Operator name</th>
<th rowspan="2">&#160;&#160;Syntax&#160;&#160;</th>
<th rowspan="2">Can overload</th>
<th rowspan="2">Included<br />
in <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a></th>
<th colspan="2">Prototype examples (R, S, and T stand for any type(s))</th>
</tr>
<tr>
<th>As member of T</th>
<th>Outside class definitions</th>
</tr>
<tr>
<td width="26%" colspan="2"><a href="/wiki/Bitwise_operation#NOT" title="Bitwise operation">Bitwise NOT</a></td>
<td width="8%" align="center"><code><b>~</b>a</code></td>
<td width="8%" style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td width="8%" style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td width="25%"><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> ~<span class="br0">(</span><span class="br0">)</span><span class="sy4">;</span></span></td>
<td width="25%"><span class="mw-geshi cpp source-cpp">R operator ~<span class="br0">(</span>S a<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2"><a href="/wiki/Bitwise_operation#AND" title="Bitwise operation">Bitwise AND</a></td>
<td style="text-align:center;"><code>a <b>&amp;</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy3">&amp;</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy3">&amp;</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2"><a href="/wiki/Bitwise_operation#OR" title="Bitwise operation">Bitwise OR</a></td>
<td style="text-align:center;"><code>a <b>|</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy3">|</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy3">|</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2"><a href="/wiki/Bitwise_operation#XOR" title="Bitwise operation">Bitwise XOR</a></td>
<td style="text-align:center;"><code>a <b>^</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy3">^</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy3">^</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2">Bitwise left shift<sup id="cite_ref-bitshift_2-0" class="reference"><a href="#cite_note-bitshift-2"><span>[</span>note 2<span>]</span></a></sup></td>
<td style="text-align:center;"><code>a <b>&lt;&lt;</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy1">&lt;&lt;</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy1">&lt;&lt;</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2">Bitwise right shift<sup id="cite_ref-bitshift_2-1" class="reference"><a href="#cite_note-bitshift-2"><span>[</span>note 2<span>]</span></a></sup><sup id="cite_ref-rightbitshift_3-0" class="reference"><a href="#cite_note-rightbitshift-3"><span>[</span>note 3<span>]</span></a></sup></td>
<td style="text-align:center;"><code>a <b>&gt;&gt;</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy1">&gt;&gt;</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy1">&gt;&gt;</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
</table>
<h3><span class="editsection">[<a href="/w/index.php?title=Operators_in_C_and_C%2B%2B&amp;action=edit&amp;section=6" title="Edit section: Compound assignment operators">edit</a>]</span> <span class="mw-headline" id="Compound_assignment_operators">Compound assignment operators</span></h3>
<table class="wikitable" style="width:100%">
<tr>
<th colspan="2" rowspan="2">Operator name</th>
<th rowspan="2">&#160;&#160;Syntax&#160;&#160;</th>
<th rowspan="2">&#160;&#160;&#160;&#160;Meaning&#160;&#160;&#160;&#160;</th>
<th rowspan="2">Can overload</th>
<th rowspan="2">Included<br />
in <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a></th>
<th colspan="2">Prototype examples (R, S, and T stand for any type(s))</th>
</tr>
<tr>
<th>As member of T</th>
<th>Outside class definitions</th>
</tr>
<tr>
<td width="16%" colspan="2">Addition assignment</td>
<td width="8%" align="center"><code>a <b>+=</b> b</code></td>
<td width="10%" align="center"><code>a <b>=</b> a <b>+</b> b</code></td>
<td width="8%" style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td width="8%" style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td width="25%"><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy2">+</span><span class="sy1">=</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td width="25%"><span class="mw-geshi cpp source-cpp">R operator <span class="sy2">+</span><span class="sy1">=</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2">Subtraction assignment</td>
<td style="text-align:center;"><code>a <b>-=</b> b</code></td>
<td style="text-align:center;"><code>a <b>=</b> a <b>-</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy2">-</span><span class="sy1">=</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy2">-</span><span class="sy1">=</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2">Multiplication assignment</td>
<td style="text-align:center;"><code>a <b>*=</b> b</code></td>
<td style="text-align:center;"><code>a <b>=</b> a <b>*</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy2">*</span><span class="sy1">=</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy2">*</span><span class="sy1">=</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2">Division assignment</td>
<td style="text-align:center;"><code>a <b>/=</b> b</code></td>
<td style="text-align:center;"><code>a <b>=</b> a <b>/</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy2">/</span><span class="sy1">=</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy2">/</span><span class="sy1">=</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2">Modulo assignment</td>
<td style="text-align:center;"><code>a <b>%=</b> b</code></td>
<td style="text-align:center;"><code>a <b>=</b> a <b>%</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy2">%</span><span class="sy1">=</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy2">%</span><span class="sy1">=</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2">Bitwise AND assignment</td>
<td style="text-align:center;"><code>a <b>&amp;=</b> b</code></td>
<td style="text-align:center;"><code>a <b>=</b> a <b>&amp;</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy3">&amp;</span><span class="sy1">=</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy3">&amp;</span><span class="sy1">=</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2">Bitwise OR assignment</td>
<td style="text-align:center;"><code>a <b>|=</b> b</code></td>
<td style="text-align:center;"><code>a <b>=</b> a <b>|</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy3">|</span><span class="sy1">=</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy3">|</span><span class="sy1">=</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2">Bitwise XOR assignment</td>
<td style="text-align:center;"><code>a <b>^=</b> b</code></td>
<td style="text-align:center;"><code>a <b>=</b> a <b>^</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy3">^</span><span class="sy1">=</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy3">^</span><span class="sy1">=</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2">Bitwise left shift assignment</td>
<td style="text-align:center;"><code>a <b>&lt;&lt;=</b> b</code></td>
<td style="text-align:center;"><code>a <b>=</b> a <b>&lt;&lt;</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy1">&lt;&lt;=</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy1">&lt;&lt;=</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2">Bitwise right shift assignment<sup id="cite_ref-rightbitshift_3-1" class="reference"><a href="#cite_note-rightbitshift-3"><span>[</span>note 3<span>]</span></a></sup></td>
<td style="text-align:center;"><code>a <b>&gt;&gt;=</b> b</code></td>
<td style="text-align:center;"><code>a <b>=</b> a <b>&gt;&gt;</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy1">&gt;&gt;=</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy1">&gt;&gt;=</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
</table>
<h3><span class="editsection">[<a href="/w/index.php?title=Operators_in_C_and_C%2B%2B&amp;action=edit&amp;section=7" title="Edit section: Member and pointer operators">edit</a>]</span> <span class="mw-headline" id="Member_and_pointer_operators">Member and pointer operators</span></h3>
<table class="wikitable" style="width:100%">
<tr>
<th colspan="2" rowspan="2">Operator name</th>
<th rowspan="2">Syntax</th>
<th rowspan="2">Can overload</th>
<th rowspan="2">Included<br />
in <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a></th>
<th colspan="2">Prototype examples (R, S, and T stand for any type(s))</th>
</tr>
<tr>
<th>As member of T</th>
<th>Outside class definitions</th>
</tr>
<tr>
<td width="26%" colspan="2"><a href="/wiki/Array_data_structure" title="Array data structure">Array</a> subscript</td>
<td width="8%" align="center"><code>a<b>[</b>b<b>]</b></code></td>
<td width="8%" style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td width="8%" style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="br0">[</span><span class="br0">]</span><span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span><br /></td>
<td width="25%" style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"><small>N/A</small></td>
</tr>
<tr>
<td colspan="2">Indirection ("object pointed to by <i>a</i>")</td>
<td style="text-align:center;"><code><b>*</b>a</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy2">*</span><span class="br0">(</span><span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy2">*</span><span class="br0">(</span>S a<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2">Reference ("address of <i>a</i>")</td>
<td style="text-align:center;"><code><b>&amp;</b>a</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy3">&amp;</span><span class="br0">(</span><span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy3">&amp;</span><span class="br0">(</span>S a<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2">Structure dereference ("member <i>b</i> of object pointed to by <i>a</i>")</td>
<td style="text-align:center;"><code>a<b>-&gt;</b>b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy2">-</span><span class="sy1">&gt;</span><span class="br0">(</span><span class="br0">)</span><span class="sy4">;</span></span><sup id="cite_ref-arrowptr_4-0" class="reference"><a href="#cite_note-arrowptr-4"><span>[</span>note 4<span>]</span></a></sup><br /></td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"><small>N/A</small></td>
</tr>
<tr>
<td colspan="2">Structure reference ("member <i>b</i> of object <i>a</i>")</td>
<td style="text-align:center;"><code>a<b>.</b>b</code></td>
<td style="background:#ff9090; color:black; vertical-align: middle; text-align: center;" class="table-no">No</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td colspan="2" style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"><small>N/A</small></td>
</tr>
<tr>
<td colspan="2">Member pointed to by <i>b</i> of object pointed to by <i>a</i><sup id="cite_ref-arrowstar_5-0" class="reference"><a href="#cite_note-arrowstar-5"><span>[</span>note 5<span>]</span></a></sup></td>
<td style="text-align:center;"><code>a<b>-&gt;*</b>b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background:#ff9090; color:black; vertical-align: middle; text-align: center;" class="table-no">No</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="sy2">-</span><span class="sy1">&gt;</span><span class="sy2">*</span><span class="br0">(</span>S a<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator <span class="sy2">-</span><span class="sy1">&gt;</span><span class="sy2">*</span><span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2">Member pointed to by <i>b</i> of object <i>a</i></td>
<td style="text-align:center;"><code>a<b>.*</b>b</code></td>
<td style="background:#ff9090; color:black; vertical-align: middle; text-align: center;" class="table-no">No</td>
<td style="background:#ff9090; color:black; vertical-align: middle; text-align: center;" class="table-no">No</td>
<td colspan="2" style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"><small>N/A</small></td>
</tr>
</table>
<h3><span class="editsection">[<a href="/w/index.php?title=Operators_in_C_and_C%2B%2B&amp;action=edit&amp;section=8" title="Edit section: Other operators">edit</a>]</span> <span class="mw-headline" id="Other_operators">Other operators</span></h3>
<table class="wikitable" style="width:100%">
<tr>
<th colspan="2" rowspan="2">Operator name</th>
<th rowspan="2">Syntax</th>
<th rowspan="2">Can overload</th>
<th rowspan="2">Included<br />
in <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a></th>
<th colspan="2">Prototype examples (R, S, T, and U stand for any type(s))</th>
</tr>
<tr>
<th>As member of T</th>
<th>Outside class definitions</th>
</tr>
<tr>
<td width="18%" colspan="2"><a href="/wiki/Function_(programming)" title="Function (programming)" class="mw-redirect">Function</a> call<br />
<i>See <a href="/wiki/Function_object" title="Function object">Function object</a></i>.</td>
<td width="16%" align="center"><code>a<b>(</b>a1, a2<b>)</b></code></td>
<td width="8%" style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td width="8%" style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> <span class="br0">(</span><span class="br0">)</span><span class="br0">(</span>S a1, U a2, ...<span class="br0">)</span><span class="sy4">;</span></span></td>
<td width="25%" style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"><small>N/A</small></td>
</tr>
<tr>
<td colspan="2"><a href="/wiki/Comma_operator" title="Comma operator">Comma</a></td>
<td style="text-align:center;"><code>a<b>,</b> b</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">R T<span class="sy4">::</span><span class="me2">operator</span> ,<span class="br0">(</span>S b<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp">R operator ,<span class="br0">(</span>S a, T b<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2"><a href="/wiki/%3F:" title="?:">Ternary conditional</a></td>
<td style="text-align:center;"><code>a <b>?</b> b <b>:</b> c</code></td>
<td style="background:#ff9090; color:black; vertical-align: middle; text-align: center;" class="table-no">No</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td colspan="2" style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"><small>N/A</small></td>
</tr>
<tr>
<td colspan="2"><a href="/wiki/Scope_resolution_operator#C.2B.2B" title="Scope resolution operator">Scope resolution</a></td>
<td style="text-align:center;"><code>a<b>::</b>b</code></td>
<td style="background:#ff9090; color:black; vertical-align: middle; text-align: center;" class="table-no">No</td>
<td style="background:#ff9090; color:black; vertical-align: middle; text-align: center;" class="table-no">No</td>
<td colspan="2" style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"><small>N/A</small></td>
</tr>
<tr>
<td colspan="2"><a href="/wiki/Sizeof" title="Sizeof">Size-of</a></td>
<td style="text-align:center;"><code><b>sizeof</b>(a)</code><sup id="cite_ref-sizeof_6-0" class="reference"><a href="#cite_note-sizeof-6"><span>[</span>note 6<span>]</span></a></sup><br />
<code><b>sizeof</b>(<i>type</i>)</code></td>
<td style="background:#ff9090; color:black; vertical-align: middle; text-align: center;" class="table-no">No</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td colspan="2" style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"><small>N/A</small></td>
</tr>
<tr>
<td colspan="2"><a href="/w/index.php?title=Alignof&amp;action=edit&amp;redlink=1" class="new" title="Alignof (page does not exist)">Align-of</a></td>
<td style="text-align:center;"><code><b>alignof</b>(<i>type</i>)</code><br />
or <code><b>_Alignof</b>(<i>type</i>)</code><sup id="cite_ref-alignof_7-0" class="reference"><a href="#cite_note-alignof-7"><span>[</span>note 7<span>]</span></a></sup></td>
<td style="background:#ff9090; color:black; vertical-align: middle; text-align: center;" class="table-no">No</td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td colspan="2" style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"><small>N/A</small></td>
</tr>
<tr>
<td colspan="2">Type identification</td>
<td style="text-align:center;"><code><b>typeid</b>(a)</code><br />
<code><b>typeid</b>(<i>type</i>)</code></td>
<td style="background:#ff9090; color:black; vertical-align: middle; text-align: center;" class="table-no">No</td>
<td style="background:#ff9090; color:black; vertical-align: middle; text-align: center;" class="table-no">No</td>
<td colspan="2" style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"><small>N/A</small></td>
</tr>
<tr>
<td rowspan="2" colspan="2"><a href="/wiki/Type_conversion" title="Type conversion">Cast</a></td>
<td rowspan="2" style="text-align:center;"><code>(<i>type</i>) a</code></td>
<td rowspan="2" style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td rowspan="2" style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td><span class="mw-geshi cpp source-cpp">T<span class="sy4">::</span><span class="me2">operator</span> R<span class="br0">(</span><span class="br0">)</span><span class="sy4">;</span></span></td>
<td style="background: #ececec; color: grey; vertical-align: middle; text-align: center;" class="table-na"><small>N/A</small></td>
</tr>
<tr>
<td colspan="2" style="font-size:smaller;">Note: for user-defined conversions, the return type implicitly and necessarily matches the operator name.</td>
</tr>
<tr>
<td colspan="2"><a href="/wiki/New_(c%2B%2B)" title="New (c++)" class="mw-redirect">Allocate storage</a></td>
<td style="text-align:center;"><code><b>new</b> <i>type</i></code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background:#ff9090; color:black; vertical-align: middle; text-align: center;" class="table-no">No</td>
<td><span class="mw-geshi cpp source-cpp"><span class="kw4">void</span><span class="sy2">*</span> T<span class="sy4">::</span><span class="me2">operator</span> <span class="kw3">new</span><span class="br0">(</span><span class="kw4">size_t</span> x<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp"><span class="kw4">void</span><span class="sy2">*</span> operator <span class="kw3">new</span><span class="br0">(</span><span class="kw4">size_t</span> x<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2">Allocate storage (array)</td>
<td style="text-align:center;"><code><b>new</b> <i>type</i><b>[</b>n<b>]</b></code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background:#ff9090; color:black; vertical-align: middle; text-align: center;" class="table-no">No</td>
<td><span class="mw-geshi cpp source-cpp"><span class="kw4">void</span><span class="sy2">*</span> T<span class="sy4">::</span><span class="me2">operator</span> <span class="kw3">new</span><span class="br0">[</span><span class="br0">]</span><span class="br0">(</span><span class="kw4">size_t</span> x<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp"><span class="kw4">void</span><span class="sy2">*</span> operator <span class="kw3">new</span><span class="br0">[</span><span class="br0">]</span><span class="br0">(</span><span class="kw4">size_t</span> x<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2"><a href="/wiki/Operator_delete" title="Operator delete" class="mw-redirect">Deallocate storage</a></td>
<td style="text-align:center;"><code><b>delete</b> a</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background:#ff9090; color:black; vertical-align: middle; text-align: center;" class="table-no">No</td>
<td><span class="mw-geshi cpp source-cpp"><span class="kw4">void</span> T<span class="sy4">::</span><span class="me2">operator</span> <span class="kw3">delete</span><span class="br0">(</span><span class="kw4">void</span><span class="sy2">*</span> x<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp"><span class="kw4">void</span> operator <span class="kw3">delete</span><span class="br0">(</span><span class="kw4">void</span><span class="sy2">*</span> x<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
<tr>
<td colspan="2">Deallocate storage (array)</td>
<td style="text-align:center;"><code><b>delete[]</b> a</code></td>
<td style="background: #90ff90; color: black; vertical-align: middle; text-align: center;" class="table-yes">Yes</td>
<td style="background:#ff9090; color:black; vertical-align: middle; text-align: center;" class="table-no">No</td>
<td><span class="mw-geshi cpp source-cpp"><span class="kw4">void</span> T<span class="sy4">::</span><span class="me2">operator</span> <span class="kw3">delete</span><span class="br0">[</span><span class="br0">]</span><span class="br0">(</span><span class="kw4">void</span><span class="sy2">*</span> x<span class="br0">)</span><span class="sy4">;</span></span></td>
<td><span class="mw-geshi cpp source-cpp"><span class="kw4">void</span> operator <span class="kw3">delete</span><span class="br0">[</span><span class="br0">]</span><span class="br0">(</span><span class="kw4">void</span><span class="sy2">*</span> x<span class="br0">)</span><span class="sy4">;</span></span></td>
</tr>
</table>
<p>Notes:</p>
<div class="reflist" style="list-style-type: decimal;">
<ol class="references">
<li id="cite_note-modulo-1"><span class="mw-cite-backlink"><b><a href="#cite_ref-modulo_1-0">^</a></b></span> <span class="reference-text">The modulus operator works just with integer operands, for floating point numbers a library function must be used instead (like <a href="/wiki/Math.h" title="Math.h" class="mw-redirect"><span class="mw-geshi cpp source-cpp"><span class="kw3">fmod</span></span></a>).</span></li>
<li id="cite_note-bitshift-2"><span class="mw-cite-backlink">^ <a href="#cite_ref-bitshift_2-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-bitshift_2-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text">In the context of <a href="/wiki/Iostream" title="Iostream" class="mw-redirect">iostreams</a>, writers often will refer to <span class="mw-geshi cpp source-cpp"><span class="sy1">&lt;&lt;</span></span> and <span class="mw-geshi cpp source-cpp"><span class="sy1">&gt;&gt;</span></span> as the “put-to” or "stream insertion" and “get-from” or "stream extraction" operators, respectively.</span></li>
<li id="cite_note-rightbitshift-3"><span class="mw-cite-backlink">^ <a href="#cite_ref-rightbitshift_3-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-rightbitshift_3-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text">According to the C99 standard, the right shift of a negative number is implementation defined. Most implementations, e.g., the <a rel="nofollow" class="external text" href="http://gcc.gnu.org/onlinedocs/gcc-4.3.3/gcc/Integers-implementation.html#Integers-implementation">GCC</a>, use an <a href="/wiki/Arithmetic_shift" title="Arithmetic shift">arithmetic shift</a> (i.e., sign extension), but a <a href="/wiki/Logical_shift" title="Logical shift">logical shift</a> is possible.</span></li>
<li id="cite_note-arrowptr-4"><span class="mw-cite-backlink"><b><a href="#cite_ref-arrowptr_4-0">^</a></b></span> <span class="reference-text">The return type of <span class="mw-geshi cpp source-cpp">operator<span class="sy2">-</span><span class="sy1">&gt;</span><span class="br0">(</span><span class="br0">)</span></span> must be a type for which the <span class="mw-geshi cpp source-cpp"><span class="sy2">-</span><span class="sy1">&gt;</span></span> operation can be applied, such as a pointer type. If <span class="mw-geshi cpp source-cpp">x</span> is of type <span class="mw-geshi cpp source-cpp">C</span> where <span class="mw-geshi cpp source-cpp">C</span> overloads <span class="mw-geshi cpp source-cpp">operator<span class="sy2">-</span><span class="sy1">&gt;</span><span class="br0">(</span><span class="br0">)</span></span>, <span class="mw-geshi cpp source-cpp">x<span class="sy2">-</span><span class="sy1">&gt;</span>y</span> gets expanded to <span class="mw-geshi cpp source-cpp">x.<span class="me1">operator</span><span class="sy2">-</span><span class="sy1">&gt;</span><span class="br0">(</span><span class="br0">)</span><span class="sy2">-</span><span class="sy1">&gt;</span>y</span>.</span></li>
<li id="cite_note-arrowstar-5"><span class="mw-cite-backlink"><b><a href="#cite_ref-arrowstar_5-0">^</a></b></span> <span class="reference-text">An example can be found in "Implementing operator-&gt;* for Smart Pointers" by Scott Meyers.</span></li>
<li id="cite_note-sizeof-6"><span class="mw-cite-backlink"><b><a href="#cite_ref-sizeof_6-0">^</a></b></span> <span class="reference-text">The parentheses are not necessary when taking the size of a value, only when taking the size of a type. However, they are usually used regardless.</span></li>
<li id="cite_note-alignof-7"><span class="mw-cite-backlink"><b><a href="#cite_ref-alignof_7-0">^</a></b></span> <span class="reference-text">C++ defines <code>alignof</code> operator, whereas C defines <code>_Alignof</code>. Both operators have the same semantics.</span></li>
</ol>
</div>
<h2><span class="editsection">[<a href="/w/index.php?title=Operators_in_C_and_C%2B%2B&amp;action=edit&amp;section=9" title="Edit section: Operator precedence">edit</a>]</span> <span class="mw-headline" id="Operator_precedence">Operator precedence</span></h2>
<p>The following is a table that lists the <a href="/wiki/Order_of_operations" title="Order of operations">precedence</a> and <a href="/wiki/Operator_associativity" title="Operator associativity">associativity</a> of all the operators in the <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> and <a href="/wiki/C%2B%2B" title="C++">C++</a> languages (when the operators also exist in <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>, <a href="/wiki/Perl" title="Perl">Perl</a>, <a href="/wiki/PHP" title="PHP">PHP</a> and many other recent languages, the precedence is the same as that given<sup class="Template-Fact" style="white-space:nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span>citation needed</span></a></i>]</sup>). Operators are listed top to bottom, in descending precedence. Descending precedence refers to the priority of evaluation. Considering an expression, an operator which is listed on some row will be evaluated prior to any operator that is listed on a row further below it. Operators that are in the same cell (there may be several rows of operators listed in a cell) are evaluated with the same precedence, in the given direction. An operator's precedence is unaffected by overloading.</p>
<p>The syntax of expressions in C and C++ is specified by a <a href="/wiki/Context-free_grammar" title="Context-free grammar">context-free grammar</a>.<sup class="Template-Fact" style="white-space:nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources from January 2009">citation needed</span></a></i>]</sup> The table given here has been inferred from the grammar.<sup class="Template-Fact" style="white-space:nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources from January 2009">citation needed</span></a></i>]</sup> For the ISO C 1999 standard, section 6.5.6 note 71 states that the C grammar provided by the specification defines the precedence of the C operators, and also states that the operator precedence resulting from the grammar closely follows the specification's section ordering:</p>
<p>"<a href="/wiki/C_syntax" title="C syntax">The [C] syntax</a> [i.e., grammar] specifies the precedence of operators in the evaluation of an expression, which is the same as the order of the major subclauses of this subclause, highest precedence first."<sup class="Template-Fact" style="white-space:nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources from June 2012">citation needed</span></a></i>]</sup></p>
<p>A precedence table, while mostly adequate, cannot resolve a few details. In particular, note that the <a href="/wiki/Ternary_operator" title="Ternary operator" class="mw-redirect">ternary operator</a> allows any arbitrary expression as its middle operand, despite being listed as having higher precedence than the assignment and comma operators. Thus <code>a&#160;? b , c&#160;: d</code> is interpreted as <code>a&#160;? (b, c)&#160;: d</code>, and not as the meaningless <code>(a&#160;? b), (c&#160;: d)</code>. Also, note that the immediate, unparenthesized result of a C cast expression cannot be the operand of <code>sizeof</code>. Therefore, <code>sizeof (int) * x</code> is interpreted as <code>(sizeof(int)) * x</code> and not <code>sizeof ((int) *x)</code>.</p>
<table class="wikitable">
<tr>
<th style="text-align: left">Precedence</th>
<th style="text-align: left">Operator</th>
<th style="text-align: left">Description</th>
<th style="text-align: left">Associativity</th>
</tr>
<tr>
<th>1
<p><small>highest</small></p>
</th>
<td><code>::</code></td>
<td>Scope resolution (C++ only)</td>
<td style="vertical-align: top" rowspan="12">Left-to-right</td>
</tr>
<tr>
<th rowspan="11">2</th>
<td style="border-bottom-style: none"><code>++</code></td>
<td style="border-bottom-style: none">Suffix increment</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>--</code></td>
<td style="border-bottom-style: none; border-top-style: none">Suffix decrement</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>()</code></td>
<td style="border-bottom-style: none; border-top-style: none">Function call</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>[]</code></td>
<td style="border-bottom-style: none; border-top-style: none">Array subscripting</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>.</code></td>
<td style="border-bottom-style: none; border-top-style: none">Element selection by reference</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>-&gt;</code></td>
<td style="border-bottom-style: none; border-top-style: none">Element selection through pointer</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>typeid()</code></td>
<td style="border-bottom-style: none; border-top-style: none"><a href="/wiki/Run-time_type_information" title="Run-time type information">Run-time type information</a> (C++ only) (see <a href="/wiki/Typeid" title="Typeid">typeid</a>)</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>const_cast</code></td>
<td style="border-bottom-style: none; border-top-style: none">Type cast (C++ only) (see <a href="/wiki/Const_cast" title="Const cast" class="mw-redirect">const cast</a>)</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>dynamic_cast</code></td>
<td style="border-bottom-style: none; border-top-style: none">Type cast (C++ only) (see <a href="/wiki/Dynamic_cast" title="Dynamic cast">dynamic_cast</a>)</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>reinterpret_cast</code></td>
<td style="border-bottom-style: none; border-top-style: none">Type cast (C++ only) (see <a href="/wiki/Reinterpret_cast" title="Reinterpret cast" class="mw-redirect">reinterpret cast</a>)</td>
</tr>
<tr>
<td style="border-top-style: none"><code>static_cast</code></td>
<td style="border-top-style: none">Type cast (C++ only) (see <a href="/wiki/Static_cast" title="Static cast">static cast</a>)</td>
</tr>
<tr>
<th rowspan="12">3</th>
<td style="border-bottom-style: none"><code>++</code></td>
<td style="border-bottom-style: none">Prefix increment</td>
<td style="vertical-align: top" rowspan="12">Right-to-left</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>--</code></td>
<td style="border-bottom-style: none; border-top-style: none">Prefix decrement</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>+</code></td>
<td style="border-bottom-style: none; border-top-style: none">Unary plus</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>-</code></td>
<td style="border-bottom-style: none; border-top-style: none">Unary minus</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>!</code></td>
<td style="border-bottom-style: none; border-top-style: none">Logical NOT</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>~</code></td>
<td style="border-bottom-style: none; border-top-style: none">Bitwise NOT</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>(<i>type</i>)</code></td>
<td style="border-bottom-style: none; border-top-style: none">Type cast</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>*</code></td>
<td style="border-bottom-style: none; border-top-style: none">Indirection (dereference)</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>&amp;</code></td>
<td style="border-bottom-style: none; border-top-style: none">Address-of</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>sizeof</code></td>
<td style="border-bottom-style: none; border-top-style: none"><a href="/wiki/Sizeof" title="Sizeof">Size-of</a></td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>new</code>, <code>new[]</code></td>
<td style="border-bottom-style: none; border-top-style: none">Dynamic memory allocation (C++ only)</td>
</tr>
<tr>
<td style="border-top-style: none"><code>delete</code>, <code>delete[]</code></td>
<td style="border-top-style: none">Dynamic memory deallocation (C++ only)</td>
</tr>
<tr>
<th rowspan="2">4</th>
<td style="border-bottom-style: none"><code>.*</code></td>
<td style="border-bottom-style: none">Pointer to member (C++ only)</td>
<td style="vertical-align: top" rowspan="20">Left-to-right</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>-&gt;*</code></td>
<td style="border-bottom-style: none; border-top-style: none">Pointer to member (C++ only)</td>
</tr>
<tr>
<th rowspan="3">5</th>
<td style="border-bottom-style: none"><code>*</code></td>
<td style="border-bottom-style: none">Multiplication</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>/</code></td>
<td style="border-bottom-style: none; border-top-style: none">Division</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>%</code></td>
<td style="border-bottom-style: none; border-top-style: none"><a href="/wiki/Modulo_operation" title="Modulo operation">Modulo</a> (remainder)</td>
</tr>
<tr>
<th rowspan="2">6</th>
<td style="border-bottom-style: none"><code>+</code></td>
<td style="border-bottom-style: none">Addition</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>-</code></td>
<td style="border-bottom-style: none; border-top-style: none">Subtraction</td>
</tr>
<tr>
<th rowspan="2">7</th>
<td style="border-bottom-style: none"><code>&lt;&lt;</code></td>
<td style="border-bottom-style: none"><a href="/wiki/Bitwise_operation" title="Bitwise operation">Bitwise</a> left shift</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>&gt;&gt;</code></td>
<td style="border-bottom-style: none; border-top-style: none"><a href="/wiki/Bitwise_operation" title="Bitwise operation">Bitwise</a> right shift</td>
</tr>
<tr>
<th rowspan="4">8</th>
<td style="border-bottom-style: none"><code>&lt;</code></td>
<td style="border-bottom-style: none">Less than</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>&lt;=</code></td>
<td style="border-bottom-style: none; border-top-style: none">Less than or equal to</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>&gt;</code></td>
<td style="border-bottom-style: none; border-top-style: none">Greater than</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>&gt;=</code></td>
<td style="border-bottom-style: none; border-top-style: none">Greater than or equal to</td>
</tr>
<tr>
<th rowspan="2">9</th>
<td style="border-bottom-style: none"><code>==</code></td>
<td style="border-bottom-style: none">Equal to</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>!=</code></td>
<td style="border-bottom-style: none; border-top-style: none">Not equal to</td>
</tr>
<tr>
<th>10</th>
<td><code>&amp;</code></td>
<td>Bitwise AND</td>
</tr>
<tr>
<th>11</th>
<td><code>^</code></td>
<td>Bitwise XOR (exclusive or)</td>
</tr>
<tr>
<th>12</th>
<td><code>|</code></td>
<td>Bitwise OR (inclusive or)</td>
</tr>
<tr>
<th>13</th>
<td><code>&amp;&amp;</code></td>
<td>Logical AND</td>
</tr>
<tr>
<th>14</th>
<td><code>||</code></td>
<td>Logical OR</td>
</tr>
<tr>
<th rowspan="12">15</th>
<td style="border-bottom-style: none"><code>?:</code></td>
<td style="border-bottom-style: none"><a href="/wiki/Ternary_operator" title="Ternary operator" class="mw-redirect">Ternary</a> conditional (see <a href="/wiki/%3F:" title="?:">?:</a>)</td>
<td style="vertical-align: top" rowspan="12">Right-to-left</td>
</tr>
<tr>
<td style="border-bottom-style: none"><code>=</code></td>
<td style="border-bottom-style: none">Direct assignment</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>+=</code></td>
<td style="border-bottom-style: none; border-top-style: none">Assignment by sum</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>-=</code></td>
<td style="border-bottom-style: none; border-top-style: none">Assignment by difference</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>*=</code></td>
<td style="border-bottom-style: none; border-top-style: none">Assignment by product</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>/=</code></td>
<td style="border-bottom-style: none; border-top-style: none">Assignment by quotient</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>%=</code></td>
<td style="border-bottom-style: none; border-top-style: none">Assignment by remainder</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>&lt;&lt;=</code></td>
<td style="border-bottom-style: none; border-top-style: none">Assignment by bitwise left shift</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>&gt;&gt;=</code></td>
<td style="border-bottom-style: none; border-top-style: none">Assignment by bitwise right shift</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>&amp;=</code></td>
<td style="border-bottom-style: none; border-top-style: none">Assignment by bitwise AND</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>^=</code></td>
<td style="border-bottom-style: none; border-top-style: none">Assignment by bitwise XOR</td>
</tr>
<tr>
<td style="border-bottom-style: none; border-top-style: none"><code>|=</code></td>
<td style="border-bottom-style: none; border-top-style: none">Assignment by bitwise OR</td>
</tr>
<tr>
<th>16</th>
<td><code>throw</code></td>
<td>Throw operator (exceptions throwing, C++ only)</td>
<td></td>
</tr>
<tr>
<th>17</th>
<td><code>,</code></td>
<td><a href="/wiki/Comma_operator" title="Comma operator">Comma</a></td>
<td>Left-to-right</td>
</tr>
</table>
<h3><span class="editsection">[<a href="/w/index.php?title=Operators_in_C_and_C%2B%2B&amp;action=edit&amp;section=10" title="Edit section: Notes">edit</a>]</span> <span class="mw-headline" id="Notes">Notes</span></h3>
<p>The precedence table determines the order of binding in chained expressions, when it is not expressly specified by parentheses.</p>
<ul>
<li>For example, <code>++x*3</code> is ambiguous without some precedence rule(s). The precedence table tells us that: <tt>x</tt> is 'bound' more tightly to <tt>++</tt> than to <tt>*</tt>, so that whatever <tt>++</tt> does (now or later—see below), it does it ONLY to <tt>x</tt> (and not to <code>x*3</code>); it is equivalent to (<code>++x</code>, <code>x*3</code>).</li>
<li>Similarly, with <code>3*x++</code>, where though the post-fix <tt>++</tt> is designed to act AFTER the entire expression is evaluated, the precedence table makes it clear that ONLY <tt>x</tt> gets incremented (and NOT <code>3*x</code>); it is functionally equivalent to something like (<code>tmp=3*x</code>, <code>++x</code>, <code>tmp</code>) with <tt>tmp</tt> being a temporary value.</li>
</ul>
<div class="center">
<div class="thumb tnone">
<div class="thumbinner" style="width:202px;"><a href="/wiki/File:Precedence_2.png" class="image"><img alt="" src="//upload.wikimedia.org/wikipedia/commons/c/c4/Precedence_2.png" width="200" height="143" class="thumbimage" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:Precedence_2.png" class="internal" title="Enlarge"><img src="//bits.wikimedia.org/static-1.21wmf5/skins/common/images/magnify-clip.png" width="15" height="11" alt="" /></a></div>
Precedence and bindings</div>
</div>
</div>
</div>
<ul>
<li>Abstracting the issue of precedence or binding, consider the diagram above. The compiler's job is to resolve the diagram into an expression, one in which several unary operators ( call them 3+( . ), 2*( . ), ( . )++ and ( . )[ i ] ) are competing to bind to y. The order of precedence table resolves the final sub-expression they each act upon: ( . )[ i ] acts only on y, ( . )++ acts only on y[i], 2*( . ) acts only on y[i]++ and 3+( . ) acts 'only' on 2*((y[i])++). It's important to note that WHAT sub-expression gets acted on by each operator is clear from the precedence table but WHEN each operator acts is not resolved by the precedence table; in this example, the ( . )++ operator acts only on y[i] by the precedence rules but binding levels alone do not indicate the timing of the Suffix ++ (the ( . )++ operator acts only after y[i] is evaluated in the expression).</li>
</ul>
<p>Many of the operators containing multi-character sequences are given "names" built from the operator name of each character. For example, <code>+=</code> and <code>-=</code> are often called <i>plus equal(s)</i> and <i>minus equal(s)</i>, instead of the more verbose "assignment by addition" and "assignment by subtraction".</p>
<p>The binding of operators in C and C++ is specified (in the corresponding Standards) by a factored language grammar, rather than a precedence table. This creates some subtle conflicts. For example, in C, the syntax for a conditional expression is:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
logical<span class="sy0">-</span>OR<span class="sy0">-</span>expression <span class="sy0">?</span> expression <span class="sy0">:</span> conditional<span class="sy0">-</span>expression
</pre></div>
</div>
<p>while in C++ it is:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="cpp source-cpp">
<pre class="de1">
logical<span class="sy2">-</span>OR<span class="sy2">-</span>expression <span class="sy4">?</span> expression <span class="sy4">:</span> assignment<span class="sy2">-</span>expression
</pre></div>
</div>
<p>Hence, the expression:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="text source-text">
<pre class="de1">
e = a &lt; d ? a++ : a = d
</pre></div>
</div>
<p>is parsed differently in the two languages. In C, this expression is a syntax error, but many compilers parse it as:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="c source-c">
<pre class="de1">
e <span class="sy0">=</span> <span class="br0">(</span><span class="br0">(</span>a <span class="sy0">&lt;</span> d <span class="sy0">?</span> a<span class="sy0">++</span> <span class="sy0">:</span> a<span class="br0">)</span> <span class="sy0">=</span> d<span class="br0">)</span>
</pre></div>
</div>
<p>which is a semantic error, since the result of the conditional-expression (which might be <i>a++</i>) is not an lvalue. In C++, it is parsed as:</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr">
<div class="cpp source-cpp">
<pre class="de1">
e <span class="sy1">=</span> <span class="br0">(</span>a <span class="sy1">&lt;</span> d <span class="sy4">?</span> a<span class="sy2">++</span> <span class="sy4">:</span> <span class="br0">(</span>a <span class="sy1">=</span> d<span class="br0">)</span><span class="br0">)</span>
</pre></div>
</div>
<p>which is a valid expression.</p>
<p>The precedence of the bitwise logical operators has been criticized.<sup id="cite_ref-9" class="reference"><a href="#cite_note-9"><span>[</span>1<span>]</span></a></sup> Conceptually, &amp; and | are arithmetic operators like + and *.</p>
<p>The expression <span class="mw-geshi cpp source-cpp">a <span class="sy3">&amp;</span> b <span class="sy1">==</span> <span class="nu0">7</span></span> is syntactically parsed as <span class="mw-geshi cpp source-cpp">a <span class="sy3">&amp;</span> <span class="br0">(</span>b <span class="sy1">==</span> <span class="nu0">7</span><span class="br0">)</span></span> whereas the expression <span class="mw-geshi cpp source-cpp">a <span class="sy2">+</span> b <span class="sy1">==</span> <span class="nu0">7</span></span> is parsed as <span class="mw-geshi cpp source-cpp"><span class="br0">(</span>a <span class="sy2">+</span> b<span class="br0">)</span> <span class="sy1">==</span> <span class="nu0">7</span></span>. This requires parentheses to be used more often than they otherwise would.</p>
<h3><span class="editsection">[<a href="/w/index.php?title=Operators_in_C_and_C%2B%2B&amp;action=edit&amp;section=11" title="Edit section: C++ operator synonyms">edit</a>]</span> <span class="mw-headline" id="C.2B.2B_operator_synonyms">C++ operator synonyms</span></h3>
<p>C++ defines<sup id="cite_ref-10" class="reference"><a href="#cite_note-10"><span>[</span>2<span>]</span></a></sup> keywords to act as aliases for a number of operators: <code>and (&amp;&amp;), bitand (&amp;), and_eq (&amp;=), or (||), bitor (|), or_eq (|=), xor (^), xor_eq (^=), not (!), not_eq (!=), compl (~)</code>. These can be used exactly the same way as the symbols they replace as they are not the same operator under a different name, but rather simple text aliases for the <i>name</i> (character string) of respective operator. For instance, <code>bitand</code> may be used to replace not only the bitwise operator but also the address-of operator, and it can even be used to specify reference types (e.g. int bitand ref = n;).</p>
<p>The ANSI C specification makes allowance for these keywords as preprocessor macros in the header file <code><a href="/wiki/Iso646.h" title="Iso646.h" class="mw-redirect">iso646.h</a></code>. For compatibility with C, C++ provides the header <code><a href="/wiki/Ciso646" title="Ciso646" class="mw-redirect">ciso646</a></code>, inclusion of which has no effect.</p>
<h2><span class="editsection">[<a href="/w/index.php?title=Operators_in_C_and_C%2B%2B&amp;action=edit&amp;section=12" title="Edit section: References">edit</a>]</span> <span class="mw-headline" id="References">References</span></h2>
<div class="reflist" style="list-style-type: decimal;">
<ol class="references">
<li id="cite_note-9"><span class="mw-cite-backlink"><b><a href="#cite_ref-9">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external text" href="http://cm.bell-labs.com/cm/cs/who/dmr/chist.html">Chistory</a></span></li>
<li id="cite_note-10"><span class="mw-cite-backlink"><b><a href="#cite_ref-10">^</a></b></span> <span class="reference-text"><span class="citation book"><a rel="nofollow" class="external text" href="http://www.open-std.org/jtc1/sc22/wg21/">ISO/IEC JTC1/SC22/WG21 - The C++ Standards Committee</a> (1 September 1998). <i>ISO/IEC 14882:1998(E) Programming Language C++</i>. International standardization working group for the programming language C++. pp.&#160;40–41.</span></span></li>
</ol>
</div>
<h2><span class="editsection">[<a href="/w/index.php?title=Operators_in_C_and_C%2B%2B&amp;action=edit&amp;section=13" title="Edit section: External links">edit</a>]</span> <span class="mw-headline" id="External_links">External links</span></h2>
<ul>
<li><a rel="nofollow" class="external text" href="http://cppreference.com/wiki/language/operators">C++ Operators</a></li>
<li><a rel="nofollow" class="external text" href="http://msdn.microsoft.com/en-us/library/e1e3921c(VS.80).aspx">Prefix vs. Suffix operators in C and C++</a></li>
</ul>
<table cellspacing="0" class="navbox" style="border-spacing:0;;">
<tr>
<td style="padding:2px;">
<table cellspacing="0" class="nowraplinks hlist collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit;;">
<tr>
<th scope="col" style=";background:#B0C4DE;" class="navbox-title" colspan="2">
<div class="noprint plainlinks hlist navbar mini" style="">
<ul>
<li class="nv-view"><a href="/wiki/Template:CProLang" title="Template:CProLang"><span title="View this template" style=";background:#B0C4DE;;background:none transparent;border:none;">v</span></a></li>
<li class="nv-talk"><a href="/wiki/Template_talk:CProLang" title="Template talk:CProLang"><span title="Discuss this template" style=";background:#B0C4DE;;background:none transparent;border:none;">t</span></a></li>
<li class="nv-edit"><a class="external text" href="//en.wikipedia.org/w/index.php?title=Template:CProLang&amp;action=edit"><span title="Edit this template" style=";background:#B0C4DE;;background:none transparent;border:none;">e</span></a></li>
</ul>
</div>
<div class="" style="font-size:110%;"><a href="/wiki/C_(programming_language)" title="C (programming language)">C programming language</a></div>
</th>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-abovebelow" style=";background:#EEE;" colspan="2">
<div>
<ul>
<li><a href="/wiki/ANSI_C" title="ANSI C">ANSI C</a>
<ul>
<li><a href="/wiki/ANSI_C#C89_and_C90" title="ANSI C">C89 and C90</a></li>
</ul>
</li>
<li><a href="/wiki/C99" title="C99">C99</a></li>
<li><a href="/wiki/C11_(C_standard_revision)" title="C11 (C standard revision)">C11</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";background:#EEE;;"><a href="/wiki/Category:C_compilers" title="Category:C compilers">Compilers</a></th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Borland_Turbo_C" title="Borland Turbo C">Borland Turbo C</a></li>
<li><a href="/wiki/Clang" title="Clang">Clang</a></li>
<li><a href="/wiki/GNU_Compiler_Collection" title="GNU Compiler Collection">GCC</a></li>
<li><a href="/wiki/LCC_(compiler)" title="LCC (compiler)">LCC</a></li>
<li><a href="/wiki/Pelles_C" title="Pelles C">Pelles C</a></li>
<li><a href="/wiki/Portable_C_Compiler" title="Portable C Compiler">PCC</a></li>
<li><a href="/wiki/Tiny_C_Compiler" title="Tiny C Compiler">TCC</a></li>
<li><a href="/wiki/Visual_C%2B%2B" title="Visual C++">Visual C++</a>
<ul>
<li><a href="/wiki/C%2B%2B/CLI" title="C++/CLI">C++/CLI</a></li>
<li><a href="/wiki/C%2B%2B/CX" title="C++/CX">C++/CX</a></li>
</ul>
</li>
<li><a href="/wiki/Watcom_C/C%2B%2B_compiler" title="Watcom C/C++ compiler">Watcom C/C++ compiler</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";background:#EEE;;"><a href="/wiki/Category:C_libraries" title="Category:C libraries">Libraries</a></th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/C_standard_library" title="C standard library">C standard library</a></li>
<li><a href="/wiki/GNU_C_Library" title="GNU C Library">glibc</a></li>
<li><a href="/wiki/Dietlibc" title="Dietlibc">dietlibc</a></li>
<li><a href="/wiki/UClibc" title="UClibc">uClibc</a></li>
<li><a href="/wiki/Newlib" title="Newlib">Newlib</a></li>
<li><a href="/wiki/Embedded_GLIBC" title="Embedded GLIBC">EGLIBC</a></li>
<li><a href="/wiki/Bionic_(software)" title="Bionic (software)">Bionic</a></li>
<li><a href="/wiki/Musl" title="Musl">Musl</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";background:#EEE;;">Features</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Null-terminated_string" title="Null-terminated string">String</a></li>
<li><a href="/wiki/C_syntax" title="C syntax">Syntax</a></li>
<li><a href="/wiki/C_preprocessor" title="C preprocessor">Preprocessor</a></li>
<li><a href="/wiki/C_data_types" title="C data types">Variable types and declarations</a></li>
<li><a href="/wiki/C_standard_library" title="C standard library">Functions</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";background:#EEE;;">Select descendants</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-even">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/C%2B%2B" title="C++">C++</a></li>
<li><a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a></li>
<li><a href="/wiki/D_(programming_language)" title="D (programming language)">D</a></li>
<li><a href="/wiki/Objective-C" title="Objective-C">Objective-C</a></li>
<li><a href="/wiki/Alef_(programming_language)" title="Alef (programming language)">Alef</a></li>
<li><a href="/wiki/Limbo_(programming_language)" title="Limbo (programming language)">Limbo</a></li>
<li><a href="/wiki/Go_(programming_language)" title="Go (programming language)">Go</a></li>
<li><a href="/wiki/Vala_(programming_language)" title="Vala (programming language)">Vala</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td></td>
</tr>
<tr>
<th scope="row" class="navbox-group" style=";background:#EEE;;">C and other languages</th>
<td style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;;;" class="navbox-list navbox-odd">
<div style="padding:0em 0.25em">
<ul>
<li>C and C++
<ul>
<li><a href="/wiki/Compatibility_of_C_and_C%2B%2B" title="Compatibility of C and C++">Compatibility</a></li>
<li><strong class="selflink">Operators</strong></li>
</ul>
</li>
<li><a href="/wiki/Comparison_of_Pascal_and_C" title="Comparison of Pascal and C">Comparison of Pascal and C</a></li>
<li><a href="/wiki/Java_virtual_machine#C_to_bytecode_compilers" title="Java virtual machine">C to Java byte-code compiler</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px;">
<td></td>
</tr>
<tr>
<td class="navbox-abovebelow" style=";background:#EEE;" colspan="2">
<div>
<ul>
<li><img alt="Category" src="//upload.wikimedia.org/wikipedia/en/thumb/4/48/Folder_Hexagonal_Icon.svg/16px-Folder_Hexagonal_Icon.svg.png" width="16" height="14" srcset="//upload.wikimedia.org/wikipedia/en/thumb/4/48/Folder_Hexagonal_Icon.svg/24px-Folder_Hexagonal_Icon.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/4/48/Folder_Hexagonal_Icon.svg/32px-Folder_Hexagonal_Icon.svg.png 2x" /> <b><a href="/wiki/Category:C_programming_language" title="Category:C programming language">Category:C programming language</a></b></li>
</ul>
</div>
</td>
</tr>
</table>
</td>
</tr>
</table>


<!-- 
NewPP limit report
Preprocessor visited node count: 5280/1000000
Preprocessor generated node count: 28488/1500000
Post-expand include size: 56188/2048000 bytes
Template argument size: 14987/2048000 bytes
Highest expansion depth: 21/40
Expensive parser function count: 5/500
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:585336-0!*!0!!en!4!* and timestamp 20121208061943 -->
</div>				<!-- /bodycontent -->
								<!-- printfooter -->
				<div class="printfooter">
				Retrieved from "<a href="http://en.wikipedia.org/w/index.php?title=Operators_in_C_and_C%2B%2B&amp;oldid=526983262">http://en.wikipedia.org/w/index.php?title=Operators_in_C_and_C%2B%2B&amp;oldid=526983262</a>"				</div>
				<!-- /printfooter -->
												<!-- catlinks -->
				<div id='catlinks' class='catlinks'><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/wiki/Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="/wiki/Category:C_programming_language" title="Category:C programming language">C programming language</a></li><li><a href="/wiki/Category:C%2B%2B" title="Category:C++">C++</a></li><li><a href="/wiki/Category:Operators_(programming)" title="Category:Operators (programming)">Operators (programming)</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden categories: <ul><li><a href="/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></li><li><a href="/wiki/Category:Articles_with_unsourced_statements_from_September_2011" title="Category:Articles with unsourced statements from September 2011">Articles with unsourced statements from September 2011</a></li><li><a href="/wiki/Category:Articles_with_unsourced_statements_from_January_2009" title="Category:Articles with unsourced statements from January 2009">Articles with unsourced statements from January 2009</a></li><li><a href="/wiki/Category:Articles_with_unsourced_statements_from_June_2012" title="Category:Articles with unsourced statements from June 2012">Articles with unsourced statements from June 2012</a></li><li><a href="/wiki/Category:Use_dmy_dates_from_January_2012" title="Category:Use dmy dates from January 2012">Use dmy dates from January 2012</a></li><li><a href="/wiki/Category:Articles_with_example_C%2B%2B_code" title="Category:Articles with example C++ code">Articles with example C++ code</a></li></ul></div></div>				<!-- /catlinks -->
												<div class="visualClear"></div>
				<!-- debughtml -->
								<!-- /debughtml -->
			</div>
			<!-- /bodyContent -->
		</div>
		<!-- /content -->
		<div id="mw-navigation">
			<h2>Navigation menu</h2>
			<!-- header -->
			<div id="mw-head" class="noprint">
				
<!-- 0 -->
<div id="p-personal" role="navigation" class="">
	<h3>Personal tools</h3>
	<ul>
<li id="pt-createaccount"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Operators+in+C+and+C%2B%2B&amp;type=signup">Create account</a></li><li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Operators+in+C+and+C%2B%2B" title="You are encouraged to log in; however, it is not mandatory. [o]" accesskey="o">Log in</a></li>	</ul>
</div>

<!-- /0 -->
				<div id="left-navigation">
					
<!-- 0 -->
<div id="p-namespaces" role="navigation" class="vectorTabs">
	<h3>Namespaces</h3>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="/wiki/Operators_in_C_and_C%2B%2B"  title="View the content page [c]" accesskey="c">Article</a></span></li>
					<li  id="ca-talk"><span><a href="/wiki/Talk:Operators_in_C_and_C%2B%2B"  title="Discussion about the content page [t]" accesskey="t">Talk</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet">
	<h3 id="mw-vector-current-variant">
		</h3>
	<h3><span>Variants</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
				</div>
				<div id="right-navigation">
					
<!-- 0 -->
<div id="p-views" role="navigation" class="vectorTabs">
	<h3>Views</h3>
	<ul>
					<li id="ca-view" class="selected"><span><a href="/wiki/Operators_in_C_and_C%2B%2B" >Read</a></span></li>
					<li id="ca-edit"><span><a href="/w/index.php?title=Operators_in_C_and_C%2B%2B&amp;action=edit"  title="You can edit this page. &#10;Please use the preview button before saving. [e]" accesskey="e">Edit</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="/w/index.php?title=Operators_in_C_and_C%2B%2B&amp;action=history"  title="Past versions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet">
	<h3><span>Actions</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->

<!-- 2 -->
<div id="p-search" role="search">
	<h3><label for="searchInput">Search</label></h3>
	<form action="/w/index.php" id="searchform">
				<div id="simpleSearch">
						<input name="search" title="Search Wikipedia [f]" accesskey="f" id="searchInput" />						<button type="submit" name="button" title="Search Wikipedia for this text" id="searchButton"><img src="//bits.wikimedia.org/static-1.21wmf5/skins/vector/images/search-ltr.png?303-4" alt="Search" width="12" height="13" /></button>								<input type='hidden' name="title" value="Special:Search"/>
		</div>
	</form>
</div>

<!-- /2 -->
				</div>
			</div>
			<!-- /header -->
			<!-- panel -->
			<div id="mw-panel" class="noprint">
				<!-- logo -->
					<div id="p-logo" role="banner"><a style="background-image: url(//upload.wikimedia.org/wikipedia/en/b/bc/Wiki.png);" href="/wiki/Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" role="navigation" id='p-navigation'>
	<h3>Navigation</h3>
	<div class="body">
		<ul>
			<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
			<li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li>
			<li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li>
			<li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li>
			<li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li>
			<li id="n-sitesupport"><a href="//donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C12_en.wikipedia.org&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li>
		</ul>
	</div>
</div>

<!-- /navigation -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- interaction -->
<div class="portal" role="navigation" id='p-interaction'>
	<h3>Interaction</h3>
	<div class="body">
		<ul>
			<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li>
			<li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li>
			<li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
			<li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
			<li id="n-contact"><a href="/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact Wikipedia</a></li>
		</ul>
	</div>
</div>

<!-- /interaction -->

<!-- TOOLBOX -->
<div class="portal" role="navigation" id='p-tb'>
	<h3>Toolbox</h3>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Operators_in_C_and_C%2B%2B" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Operators_in_C_and_C%2B%2B" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-upload"><a href="/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]" accesskey="u">Upload file</a></li>
			<li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li id="t-permalink"><a href="/w/index.php?title=Operators_in_C_and_C%2B%2B&amp;oldid=526983262" title="Permanent link to this revision of the page">Permanent link</a></li>
			<li id="t-info"><a href="/w/index.php?title=Operators_in_C_and_C%2B%2B&amp;action=info">Page information</a></li>
<li id="t-cite"><a href="/w/index.php?title=Special:Cite&amp;page=Operators_in_C_and_C%2B%2B&amp;id=526983262" title="Information on how to cite this page">Cite this page</a></li>		</ul>
	</div>
</div>

<!-- /TOOLBOX -->

<!-- coll-print_export -->
<div class="portal" role="navigation" id='p-coll-print_export'>
	<h3>Print/export</h3>
	<div class="body">
		<ul id="collectionPortletList"><li id="coll-create_a_book"><a href="/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Operators+in+C+and+C%2B%2B" title="Create a book or page collection" rel="nofollow">Create a book</a></li><li id="coll-download-as-rl"><a href="/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=Operators+in+C+and+C%2B%2B&amp;oldid=526983262&amp;writer=rl" title="Download a PDF version of this wiki page" rel="nofollow">Download as PDF</a></li><li id="t-print"><a href="/w/index.php?title=Operators_in_C_and_C%2B%2B&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li></ul>	</div>
</div>

<!-- /coll-print_export -->

<!-- LANGUAGES -->
<div class="portal" role="navigation" id='p-lang'>
	<h3>Languages</h3>
	<div class="body">
		<ul>
			<li class="interwiki-es"><a href="//es.wikipedia.org/wiki/Anexo:Operadores_de_C_y_C%2B%2B" title="Anexo:Operadores de C y C++" lang="es" hreflang="es">Español</a></li>
			<li class="interwiki-ko"><a href="//ko.wikipedia.org/wiki/C%EC%99%80_C%2B%2B%EC%97%90%EC%84%9C%EC%9D%98_%EC%97%B0%EC%82%B0%EC%9E%90" title="C와 C++에서의 연산자" lang="ko" hreflang="ko">한국어</a></li>
			<li class="interwiki-hu"><a href="//hu.wikipedia.org/wiki/Oper%C3%A1torok_(C%2B%2B)" title="Operátorok (C++)" lang="hu" hreflang="hu">Magyar</a></li>
			<li class="interwiki-mk"><a href="//mk.wikipedia.org/wiki/%D0%9E%D0%BF%D0%B5%D1%80%D0%B0%D1%82%D0%BE%D1%80%D0%B8_%D0%B2%D0%BE_C_%D0%B8_C%2B%2B" title="Оператори во C и C++" lang="mk" hreflang="mk">Македонски</a></li>
			<li class="interwiki-ja"><a href="//ja.wikipedia.org/wiki/C%E3%81%A8C%2B%2B%E3%81%AE%E6%BC%94%E7%AE%97%E5%AD%90" title="CとC++の演算子" lang="ja" hreflang="ja">日本語</a></li>
			<li class="interwiki-pt"><a href="//pt.wikipedia.org/wiki/Operadores_em_C_e_C%2B%2B" title="Operadores em C e C++" lang="pt" hreflang="pt">Português</a></li>
			<li class="interwiki-uk"><a href="//uk.wikipedia.org/wiki/%D0%9E%D0%BF%D0%B5%D1%80%D0%B0%D1%82%D0%BE%D1%80%D0%B8_%D0%B2_C_%D1%82%D0%B0_C%2B%2B" title="Оператори в C та C++" lang="uk" hreflang="uk">Українська</a></li>
			<li class="interwiki-zh"><a href="//zh.wikipedia.org/wiki/C%E5%92%8CC%2B%2B%E9%81%8B%E7%AE%97%E5%AD%90" title="C和C++運算子" lang="zh" hreflang="zh">中文</a></li>
		</ul>
	</div>
</div>

<!-- /LANGUAGES -->
			</div>
			<!-- /panel -->
		</div>
		<!-- footer -->
		<div id="footer" role="contentinfo">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 8 December 2012 at 06:19.<br /></li>
											<li id="footer-info-copyright">Text is available under the <a rel="license" href="//en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License">Creative Commons Attribution-ShareAlike License</a><a rel="license" href="//creativecommons.org/licenses/by-sa/3.0/" style="display:none;"></a>;
additional terms may apply.
See <a href="//wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> for details.<br/>
Wikipedia® is a registered trademark of the <a href="//www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.<br /></li><li class="noprint"><a class='internal' href="//en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact us</a></li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="//wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
											<li id="footer-places-disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
											<li id="footer-places-mobileview"><a href="http://en.m.wikipedia.org/w/index.php?title=Operators_in_C_and_C%2B%2B&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-copyrightico">
						<a href="//wikimediafoundation.org/"><img src="//bits.wikimedia.org/images/wikimedia-button.png" width="88" height="31" alt="Wikimedia Foundation"/></a>
					</li>
					<li id="footer-poweredbyico">
						<a href="//www.mediawiki.org/"><img src="//bits.wikimedia.org/static-1.21wmf5/skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<!-- /footer -->
		<script>if(window.mw){
mw.loader.state({"site":"loading","user":"ready","user.groups":"ready"});
}</script>
<script src="//bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=skins.vector&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
mw.loader.load(["mobile.desktop","mediawiki.user","mediawiki.page.ready","mediawiki.searchSuggest","mediawiki.hidpi","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.DRN-wizard","ext.gadget.charinsert","mw.MwEmbedSupport.style","ext.vector.collapsibleNav","ext.vector.collapsibleTabs","ext.vector.editWarning","ext.UserBuckets","ext.articleFeedback.startup","ext.articleFeedbackv5.startup","ext.markAsHelpful","ext.Experiments.experiments","schema.OpenTask","mw.PopUpMediaTransform"], null, true);
}</script>
<script src="/w/index.php?title=MediaWiki:Gadget-ReferenceTooltips.js&amp;action=raw&amp;ctype=text/javascript&amp;508635914"></script>
<script src="//bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<!-- Served by mw30 in 0.159 secs. -->
	</body>
</html>
